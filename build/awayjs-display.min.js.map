{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "cells",
    "Array",
    "lastCollisionIndex",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_pImplicitColorTransform",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pRenderables",
    "_entityNodes",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "zOffset",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "_explicitColorTransform",
    "alphaMultiplier",
    "_iColorTransform",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "x",
    "rotationX",
    "y",
    "rotationY",
    "z",
    "rotationZ",
    "height",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "_updateMaskMode",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "SCENE_TRANSFORM",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "maskMode",
    "MASKS",
    "width",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "copyTo",
    "partition",
    "boundsType",
    "name",
    "mouseEnabled",
    "extra",
    "masks",
    "_iMatrix3D",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "target",
    "setTo",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "invalidatePartition",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "MASK_ID",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "event",
    "elements",
    "mouseChildren",
    "concat",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "this_clone",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "child",
    "removeChildAt",
    "resetDepths",
    "depth_childs",
    "getChildDepths",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "start_index",
    "end_index",
    "idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "_children",
    "isBlockedByScript",
    "isVisibilityByScript",
    "key",
    "addChildAtDepth",
    "Number",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "props_start_idx",
    "props_len",
    "props_end_index",
    "value_start_index",
    "props_type",
    "doit",
    "getChildAtSessionID",
    "update_child_stream",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_depth_childs",
    "_depth_sessionIDs",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "getDepthIndexInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAt",
    "getSessionIDAtDepth",
    "getChildAtDepth",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "bitFlag",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "shareAnimationGeometry",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "isAsset",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "hitTestCurveGeometry",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "TextField",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "loop",
    "_sessionID_childs",
    "_potentialInstances",
    "_currentFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "reset_textclones",
    "text",
    "numFrames",
    "exit_frame",
    "_skipAdvance",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "skipChildren",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/entities/TextField",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "TextFieldType",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "reConstruct",
    "_textFormat",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "textlines",
    "split",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "textWidth",
    "fw",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "curves",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "findParentForNode",
    "node",
    "isContainer",
    "getItem",
    "iAddNode",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "pop",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "iMarkForUpdate",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "disposeItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "rootContainer",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "posDim",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "bx",
    "by",
    "curvex",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "containerNode",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "precheck",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\t//used for hittesting geometry\r\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\r\n\tpublic lastCollisionIndex:number = -1;\r\n\tpublic divisions:number;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\r\n{\r\n\tpublic _adapter:IDisplayObjectAdapter;\r\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\r\n\tpublic _elementsDirty:boolean;\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pIsEntity:boolean = false;\r\n\tpublic _pIsContainer:boolean = false;\r\n\tpublic _sessionID:number = -1;\r\n\tpublic _depthID:number = -16384;\r\n\r\n\tprivate _explicitPartition:PartitionBase;\r\n\tpublic _pImplicitPartition:PartitionBase;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _sceneChanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tprivate _explicitMaskId:number = -1;\r\n\tprivate _explicitMasks:Array<DisplayObject>;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tpublic _pImplicitMaskId:number = -1;\r\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\r\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _explicitColorTransform:ColorTransform;\r\n\tpublic _pImplicitColorTransform:ColorTransform = new ColorTransform();\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean;\r\n\tprivate _rotationDirty:boolean;\r\n\tprivate _skewDirty:boolean;\r\n\tprivate _scaleDirty:boolean;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _skewChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToSkewChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tprivate _skewX:number = 0;\r\n\tprivate _skewY:number = 0;\r\n\tprivate _skewZ:number = 0;\r\n\tprivate _scaleX:number = 1;\r\n\tprivate _scaleY:number = 1;\r\n\tprivate _scaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _ske:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _inheritColorTransform:boolean = false;\r\n\tprivate _maskMode:boolean = false;\r\n\r\n\tpublic _hierarchicalPropsDirty:number;\r\n\r\n\t//temp vector used in global to local\r\n\tprivate _tempVector3D:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IDisplayObjectAdapter\r\n\t{\r\n\t\treturn this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IDisplayObjectAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n\t\tif (this._inheritColorTransform == value)\r\n\t\t\treturn;\r\n\r\n        this._inheritColorTransform = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._explicitColorTransform? this._explicitColorTransform.alphaMultiplier : 1;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n\t\tif (!this._explicitColorTransform)\r\n\t\t\tthis._iColorTransform = new ColorTransform();\r\n\r\n        this._explicitColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this.scaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._setScaleZ(val/this.getBox().depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this.rotationX;\r\n\t\tthis._eulers.y = this.rotationY;\r\n\t\tthis._eulers.z = this.rotationZ;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis.rotationX = value.x;\r\n\t\tthis.rotationY = value.y;\r\n\t\tthis.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this.scaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._setScaleY(val/this.getBox().height);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isContainer()\r\n\t{\r\n\t\treturn this._pIsContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\tpublic get maskMode():boolean\r\n\t{\r\n\t\treturn this._maskMode;\r\n\t}\r\n\r\n\tpublic set maskMode(value:boolean)\r\n\t{\r\n\t\tif (this._maskMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maskMode = value;\r\n\r\n\t\tthis._explicitMaskId = value? this.id : -1;\r\n\r\n\t\tthis._updateMaskMode();\r\n\t}\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():PartitionBase\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:PartitionBase)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\r\n\r\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x = pivot.x;\r\n\t\tthis._pivot.y = pivot.y;\r\n\t\tthis._pivot.z = pivot.z;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tthis._setScaleX(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tthis._setScaleY(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tthis._setScaleZ(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the horizontal skew(angle) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewX;\r\n\t}\r\n\r\n\tpublic set skewX(val:number)\r\n\t{\r\n\t\tif (this.skewX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewX = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewY;\r\n\t}\r\n\r\n\tpublic set skewY(val:number)\r\n\t{\r\n\t\tif (this.skewY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewY = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewZ;\r\n\t}\r\n\r\n\tpublic set skewZ(val:number)\r\n\t{\r\n\t\tif (this.skewZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewZ = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\r\n\t}\r\n\r\n\tpublic get masks():Array<DisplayObject>\r\n\t{\r\n\t\treturn this._explicitMasks;\r\n\t}\r\n\r\n\tpublic set masks(value:Array<DisplayObject>)\r\n\t{\r\n\t\tif (this._explicitMasks == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMasks = value;\r\n\r\n\t\t//make sure maskMode is set to true for all masks\r\n\t\tif (value != null && value.length) {\r\n\t\t\tvar len:number = value.length;\r\n\t\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t\tvalue[i].maskMode = true;\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this.scaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._setScaleX(val/this.getBox().width);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = this._matrix3D.rawData[12] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = this._matrix3D.rawData[13] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = this._matrix3D.rawData[14] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic zOffset:number = 0;\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n\t\tthis._transformComponents = new Array<Vector3D>(4);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._ske;\r\n\t\tthis._transformComponents[3] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar newInstance:DisplayObject = new DisplayObject();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(newInstance:DisplayObject)\r\n\t{\r\n\t\tnewInstance.partition = this._explicitPartition;\r\n\t\tnewInstance.boundsType = this._boundsType;\r\n\t\tnewInstance.pivot = this._pivot;\r\n\t\tnewInstance.name = this._pName;\r\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\r\n\t\tnewInstance.extra = this.extra;\r\n\t\tnewInstance.maskMode = this._maskMode;\r\n\r\n\t\tif (this._explicitMasks)\r\n\t\t\tnewInstance.masks = this._explicitMasks;\r\n\r\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\r\n\r\n\t\tif (this._adapter)\r\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\r\n\r\n\t\tif (this._transform.colorTransform)\r\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\t//scale updates if absolute dimensions are detected\r\n\t\t\tif (this._width != null)\r\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\r\n\r\n\t\t\tif (this._height != null)\r\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\r\n\r\n\t\t\tif (this._depth != null)\r\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point, target:Point = null):Point\r\n\t{\r\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Point();\r\n\r\n\t\ttarget.x = pos.x;\r\n\t\ttarget.y = pos.y;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @param maskFlag Whether to check against the object when it is used as mask\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isMask():boolean\r\n\t{\r\n\t\treturn this._explicitMaskId == -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Float32Array;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point, target:Point = null):Point\r\n\t{\r\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Point();\r\n\r\n\t\ttarget.x = pos.x;\r\n\t\ttarget.y = pos.y;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis.x = dx;\r\n\t\tthis.y = dy;\r\n\t\tthis.z = dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (dx == 0 && dy == 0 && dz == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\tpublic reset():void\r\n\t{\r\n\t\tthis.visible = true;\r\n\r\n\t\tif(this._iMatrix3D)\r\n\t\t\tthis._iMatrix3D.identity();\r\n\r\n\t\tif(this._iColorTransform)\r\n\t\t\tthis._iColorTransform.clear();\r\n\r\n\t\t//this.name=\"\";\r\n\t\tthis.masks = null;\r\n\r\n\t\tthis.maskMode = false;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[3];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this.scaleX;\r\n\t\t\tscale.y = this.scaleY;\r\n\t\t\tscale.z = this.scaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis.rotationX = ax;\r\n\t\tthis.rotationY = ay;\r\n\t\tthis.rotationZ = az;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = false;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis.x += x*len;\r\n\t\tthis.y += y*len;\r\n\t\tthis.z += z*len;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis.x = this._pos.x;\r\n\t\tthis.y = this._pos.y;\r\n\t\tthis.z = this._pos.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():PartitionBase\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\tthis._pUpdatePivot();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 12; i++)\r\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\r\n\r\n\t\tthis.x = val.rawData[12];\r\n\t\tthis.y = val.rawData[13];\r\n\t\tthis.z = val.rawData[14];\r\n\r\n\t\tthis._elementsDirty = true;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t}\r\n\r\n\tpublic get _iColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._explicitColorTransform;\r\n\t}\r\n\r\n\tpublic set _iColorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._explicitColorTransform = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tthis._pParent = value;\r\n\r\n        if (value)\r\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\r\n\t\telse\r\n\t\t\tthis._iSetScene(null, null);\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\r\n\t}\r\n\r\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\r\n\t{\r\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\r\n\t\tif (!newPropDirty)\r\n\t\t\treturn true;\r\n\r\n\t\tthis._hierarchicalPropsDirty |= propDirty;\r\n\r\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\r\n\t\t\tthis._inverseSceneTransformDirty = true;\r\n\t\t\tthis._scenePositionDirty = true;\r\n\r\n\t\t\tif (this.isEntity)\r\n\t\t\t\tthis.invalidatePartition();\r\n\r\n\t\t\tif (this._pParent)\r\n\t\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._listenToSceneChanged)\r\n\t\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._ske.x = this._skewX;\r\n\t\tthis._ske.y = this._skewY;\r\n\t\tthis._ske.z = this._skewZ;\r\n\r\n\t\tthis._sca.x = this._scaleX;\r\n\t\tthis._sca.y = this._scaleY;\r\n\t\tthis._sca.z = this._scaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t}\r\n\r\n\tpublic _pUpdatePivot()\r\n\t{\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.updateController();\r\n\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._skewDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\r\n\t\t\tthis._updateVisible();\r\n\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iAssignedMaskId():number\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\r\n\t\t\tthis._updateMaskId();\r\n\r\n\t\treturn this._pImplicitMaskId;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\r\n\t\t\tthis._updateMasks();\r\n\r\n\t\treturn this._pImplicitMasks;\r\n\t}\r\n\r\n\tpublic _iMasksConfig():Array<Array<number>>\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\r\n\t\t\tthis._updateMasks();\r\n\r\n\t\treturn this._pImplicitMaskIds;\r\n\t}\r\n\r\n\tpublic _iAssignedColorTransform():ColorTransform\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\r\n\t\t\tthis._updateColorTransform();\r\n\r\n\t\treturn this._pImplicitColorTransform;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\r\n\t\t\tthis._updateMouseEnabled();\r\n\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\r\n\t\tif (!this._pivotZero)\r\n\t\t\tthis.invalidatePivot();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateSkew(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._skewDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewDirty = true;\r\n\r\n\t\tif (this._listenToSkewChanged)\r\n\t\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n\tprivate queueDispatch(event:Event)\r\n\t{\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\tprivate updateElements()\r\n\t{\r\n\t\tthis._elementsDirty = false;\r\n\r\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\r\n\t\t\tthis._skewX = vec.x;\r\n\t\t\tthis._skewY = vec.y;\r\n\t\t\tthis._skewZ = vec.z;\r\n\r\n\t\t\tthis.invalidateSkew(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[3];\r\n\r\n\t\tthis._width = null;\r\n\t\tthis._height = null;\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\r\n\t\t\tthis._scaleX = vec.x;\r\n\t\t\tthis._scaleY = vec.y;\r\n\t\t\tthis._scaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale(false);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _setScaleX(val:number)\r\n\t{\r\n\t\tif (this.scaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleY(val:number)\r\n\t{\r\n\t\tif (this.scaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleZ(val:number)\r\n\t{\r\n\t\tif (this.scaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tpublic _updateMouseEnabled()\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\r\n\t}\r\n\r\n\tprivate _updateVisible()\r\n\t{\r\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\r\n\t}\r\n\r\n\tprivate _updateMaskId()\r\n\t{\r\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\r\n\t}\r\n\r\n\tprivate _updateMasks()\r\n\t{\r\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\r\n\r\n\t\tthis._pImplicitMaskIds.length = 0;\r\n\r\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\r\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\r\n\t\t\tvar numChildren:number;\r\n\t\t\tvar implicitChildren:Array<DisplayObject>;\r\n\t\t\tvar implicitChildIds:Array<number>;\r\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\r\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\r\n\t\t\t\tnumChildren = implicitChildren.length;\r\n\t\t\t\timplicitChildIds = new Array<number>();\r\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\r\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\r\n\r\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\r\n\t}\r\n\r\n\tprivate _updateColorTransform()\r\n\t{\r\n\t\tif (this._inheritColorTransform && this._pParent) {\r\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\r\n\t\t\tif (this._explicitColorTransform)\r\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._explicitColorTransform);\r\n\t\t} else {\r\n\t\t\tif (this._explicitColorTransform)\r\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._explicitColorTransform);\r\n\t\t\telse\r\n\t\t\t\tthis._pImplicitColorTransform.clear();\r\n\t\t}\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\r\n\t}\r\n\r\n\tpublic _updateMaskMode()\r\n\t{\r\n\t\tif (this.maskMode)\r\n\t\t\tthis.mouseEnabled = !this._maskMode;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "/**\r\n *\r\n */\r\nclass HierarchicalProperties\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MOUSE_ENABLED:number = 1;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static VISIBLE:number = 2;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MASK_ID:number = 4;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MASKS:number = 8;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static COLOR_TRANSFORM:number = 16;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SCENE_TRANSFORM:number = 32;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ALL:number = 63;\r\n}\r\n\r\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\n\r\nclass Timeline\r\n{\r\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\r\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\r\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\r\n\r\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\r\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\r\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\r\n\r\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\r\n\r\n\t// synched:\r\n\tpublic frame_command_indices:ArrayBufferView;\r\n\tpublic frame_recipe:ArrayBufferView;\r\n\r\n\t// synched:\r\n\tpublic command_index_stream:ArrayBufferView;\r\n\tpublic command_length_stream:ArrayBufferView;\r\n\r\n\tpublic add_child_stream:ArrayBufferView;\r\n\tpublic remove_child_stream:ArrayBufferView;\r\n\tpublic update_child_stream:ArrayBufferView;\r\n\r\n\tpublic update_child_props_length_stream:ArrayBufferView;\r\n\tpublic update_child_props_indices_stream:ArrayBufferView;\r\n\r\n\tpublic property_index_stream:ArrayBufferView;\r\n\tpublic property_type_stream:ArrayBufferView;\r\n\r\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\r\n\r\n\t// propertiy_values_stream:\r\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_strings:Array<string>;\r\n\r\n\tprivate _potentialPrototypes:Array<DisplayObject>;\r\n\r\n\tpublic numKeyFrames:number=0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis.keyframe_indices=[];\r\n\r\n\t\tthis._potentialPrototypes=[];\r\n\t\tthis._labels={};\r\n\t\tthis._framescripts={};\r\n\t\tthis._framescripts_translated={};\r\n\t}\r\n\r\n\tpublic init():void\r\n\t{\r\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\r\n\t\t\treturn;\r\n\r\n\t\tthis.keyframe_firstframes = [];\r\n\t\tthis.keyframe_constructframes = [];\r\n\t\tvar frame_cnt = 0;\r\n\t\tvar ic = 0;\r\n\t\tvar ic2 = 0;\r\n\t\tvar keyframe_cnt = 0;\r\n\t\tvar last_construct_frame = 0;\r\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\r\n\t\t\tvar duration=this.keyframe_durations[(ic)];\r\n\r\n\t\t\tif(this.frame_recipe[ic] & 1)\r\n\t\t\t\tlast_construct_frame = keyframe_cnt;\r\n\r\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\r\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\r\n\r\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\r\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get_framescript(keyframe_index:number):string\r\n\t{\r\n\t\tif(this._framescripts[keyframe_index]==null)\r\n\t\t\treturn \"\";\r\n\r\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\r\n\t\t\treturn this._framescripts[keyframe_index];\r\n\t\telse{\r\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\r\n\t\t}\r\n\r\n\t\treturn \"\";\r\n\t}\r\n\tpublic add_framescript(value:string, keyframe_index:number)\r\n\t{\r\n\t\tthis._framescripts[keyframe_index] = value;\r\n\t}\r\n\r\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\r\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\r\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\r\n\t}\r\n\r\n\r\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\r\n\t{\r\n\t\tif(this._framescripts[keyframe_idx]!=null){\r\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\r\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\r\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\r\n\t\t\t}\r\n\t\t\tif(scriptPass1)\r\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\r\n\t\t\telse\r\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get numFrames():number\r\n\t{\r\n\t\treturn this.keyframe_indices.length;\r\n\t}\r\n\r\n\r\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\r\n\t{\r\n\t\treturn this._potentialPrototypes[id];\r\n\r\n\t}\r\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\r\n\t{\r\n\t\treturn this.keyframe_indices[frame_index];\r\n\t}\r\n\r\n\tpublic getPotentialChilds():Array<DisplayObject>\r\n\t{\r\n\t\treturn this._potentialPrototypes;\r\n\t}\r\n\r\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\r\n\t{\r\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\r\n\t\tthis_clone.name=\"\";\r\n\t\treturn this_clone;\r\n\t}\r\n\r\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\r\n\t{\r\n\t\tvar id = this._potentialPrototypes.length;\r\n\t\tthis._potentialPrototypes[id] = prototype;\r\n\t}\r\n\r\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\r\n\t{\r\n\t\tvar key_frame_index:number = this._labels[label];\r\n\t\tif(key_frame_index>=0)\r\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\r\n\t}\r\n\r\n\r\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\r\n\t\tif (frameIndex == value) //we are already on exactly this frame.\r\n\t\t\treturn;\r\n\r\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\r\n\r\n\t\tvar firstframe:number = this.keyframe_firstframes[target_keyframe_idx];\r\n\r\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\r\n\t\t\ttarget_mc.set_currentFrameIndex(value);\r\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\r\n\t\t\t//if (!skip_script && firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\r\n\t\t\t//\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\r\n\t\t\treturn;\r\n\r\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\r\n\r\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\r\n\r\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\r\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\r\n\r\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\r\n\t\tvar start_construct_idx:number = break_frame_idx;\r\n\r\n\t\tif (jump_forward && !jump_gap) // in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\r\n\t\t\tstart_construct_idx = current_keyframe_idx + 1;\r\n\r\n\t\tvar i:number;\r\n\t\tvar k:number;\r\n\t\tvar child:DisplayObject;\r\n\t\tvar depth:number;\r\n\r\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\r\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\r\n\t\t\t\ttarget_mc.removeChildAt(i);\r\n\r\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\r\n\t\tif (!jump_forward)\r\n\t\t\ttarget_mc.resetDepths();\r\n\r\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\r\n\t\tvar depth_childs:Object = target_mc.getChildDepths();\r\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\r\n\r\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\r\n\t\tvar update_indices:Array<number> = [];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\r\n\t\tvar update_cnt = 0;\r\n\t\tvar frame_command_idx:number;\r\n\t\tvar frame_recipe:number;\r\n\t\tvar start_index:number;\r\n\t\tvar end_index:number;\r\n\t\tvar idx:number;\r\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\r\n\t\t\tframe_command_idx = this.frame_command_indices[k];\r\n\t\t\tframe_recipe = this.frame_recipe[k];\r\n\r\n\t\t\tif (frame_recipe & 2) {\r\n\t\t\t\t// remove childs\r\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\r\n\t\t\t\tfor (i = start_index; i < end_index; i++) {\r\n\t\t\t\t\tdepth = this.remove_child_stream[i] - 16383;\r\n\t\t\t\t\tdelete depth_childs[depth];\r\n\t\t\t\t\tdelete depth_sessionIDs[depth];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (frame_recipe & 4) {\r\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\r\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t\t\t// this could be changed in exporter\r\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--) {\r\n\t\t\t\t\tidx = i*2;\r\n\t\t\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[idx]);\r\n\r\n\t\t\t\t\tdepth = this.add_child_stream[idx + 1] - 16383;\r\n\t\t\t\t\tdepth_childs[depth] = child;\r\n\t\t\t\t\tdepth_sessionIDs[depth] = i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (frame_recipe & 8)\r\n\t\t\t\tupdate_indices[update_cnt++] = frame_command_idx;// execute update command later\r\n\t\t}\r\n\r\n\t\t//  step2: construct the final frame\r\n\r\n\t\t// check what childs are alive on both frames.\r\n\t\t// childs that are not alive anymore get removed and unregistered\r\n\t\t// childs that are alive on both frames are reset if we are jumping back\r\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\r\n\t\t\tchild = target_mc._children[i];\r\n\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\r\n\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t} else if (!jump_forward) {\r\n\t\t\t\tif(child.adapter) {\r\n\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\r\n\t\t\t\t\t\tif (child._iMatrix3D) {\r\n\t\t\t\t\t\t\tchild._iMatrix3D.identity();\r\n\t\t\t\t\t\t\tchild.x = child._iMatrix3D.rawData[12];\r\n\t\t\t\t\t\t\tchild.y = child._iMatrix3D.rawData[13];\r\n\t\t\t\t\t\t\tchild._elementsDirty = true;\r\n\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (child._iColorTransform) {\r\n\t\t\t\t\t\t\tchild._iColorTransform.clear();\r\n\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//this.name=\"\";\r\n\t\t\t\t\t\tchild.masks = null;\r\n\t\t\t\t\t\tchild.maskMode = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\r\n\t\t\t\t\t\tchild.visible = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!skip_script && firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\r\n\t\t// now we need to addchild the objects that were added before targetframe first\r\n\t\t// than we can add the script of the targetframe\r\n\t\t// than we can addchild objects added on targetframe\r\n\t\tfor (var key in depth_sessionIDs) {\r\n\t\t\tchild = depth_childs[key];\r\n\t\t\tif (child._sessionID == -1) {\r\n\t\t\t\tchild._sessionID = depth_sessionIDs[key];\r\n\t\t\t\ttarget_mc.addChildAtDepth(child, Number(key));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\r\n\t\tvar frame_command_idx:number;\r\n\t\tvar len:number = update_indices.length;\r\n\t\tfor (k = 0; k < len; k++) {\r\n\t\t\tframe_command_idx = update_indices[k];\r\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\r\n\t\t}\r\n\r\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\r\n\t}\r\n\r\n\r\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean = false)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\r\n\r\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\r\n\r\n\t\tif(constructed_keyFrameIndex != new_keyFrameIndex) {\r\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\r\n\r\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\r\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\r\n\r\n\t\t\tif(frame_recipe & 1) {\r\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\r\n\t\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t} else if (frame_recipe & 2) {\r\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\t\t\t}\r\n\r\n\t\t\tif(frame_recipe & 4)\r\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\r\n\t\t\tif(frame_recipe & 8)\r\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tfor(var i:number = 0; i < len; i++)\r\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\r\n\t}\r\n\r\n\r\n\t// used to add childs when jumping between frames\r\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t// this could be changed in exporter\r\n\t\tvar idx:number;\r\n\t\tvar end_index:number = start_index + len;\r\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\r\n\t\t\tidx = i*2;\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]);\r\n\t\t\ttarget._sessionID = i;\r\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[idx + 1] - 16383);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tvar props_start_idx:number;\r\n\t\tvar props_len:number;\r\n\t\tvar props_end_index:number;\r\n\t\tvar value_start_index:number;\r\n\t\tvar props_type:number;\r\n\t\tvar doit:boolean;\r\n\t\tvar end_index:number = start_index + len;\r\n\t\tfor(var i:number = start_index; i < end_index; i++) {\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(this.update_child_stream[i]);\r\n\t\t\tif (target != null) {\r\n\t\t\t\tdoit = true;\r\n\t\t\t\t// check if the child is active + not blocked by script\r\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\r\n\t\t\t\t\tdoit = false;\r\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\r\n\t\t\t\tprops_len = this.update_child_props_length_stream[i];\r\n\t\t\t\tprops_end_index = props_start_idx + props_len;\r\n\t\t\t\tfor(var p:number = props_start_idx; p < props_end_index; p++) {\r\n\t\t\t\t\tprops_type = this.property_type_stream[p];\r\n\t\t\t\t\tvalue_start_index = this.property_index_stream[p];\r\n\t\t\t\t\tswitch(props_type){\r\n\t\t\t\t\t\tcase 0:\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\r\n\r\n\t\t\t\t\t\t\t\ttarget.x = new_matrix.rawData[12];\r\n\t\t\t\t\t\t\t\ttarget.y = new_matrix.rawData[13];\r\n\r\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\r\n\r\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 2:// colormatrix\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\r\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target._iColorTransform || (target._iColorTransform = new ColorTransform());\r\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\r\n\r\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 3: //mask the mc with a list of objects\r\n\r\n\t\t\t\t\t\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\r\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\r\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\r\n\t\t\t\t\t\t\tvar mask:DisplayObject;\r\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\r\n\t\t\t\t\t\t\tvar numMasks:number = this.properties_stream_int[value_start_index++];\r\n\r\n\t\t\t\t\t\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\r\n\t\t\t\t\t\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\r\n\t\t\t\t\t\t\tfor(var m:number = 0; m < numMasks; m++)\r\n\t\t\t\t\t\t\t\tif((mask = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++])))\r\n\t\t\t\t\t\t\t\t\tmasks.push(mask);\r\n\r\n\t\t\t\t\t\t\ttarget.masks = masks;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 5:// instance name button instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\r\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 6://visible\r\n\t\t\t\t\t\t\tif (!target.adapter || !target.adapter.isVisibilityByScript())\r\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 11:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\r\n\r\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 12:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\r\n\t\t\t\t\t\t\t\ttarget.x = this.properties_stream_f32_mtx_pos[value_start_index++];\r\n\t\t\t\t\t\t\t\ttarget.y = this.properties_stream_f32_mtx_pos[value_start_index];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 200:\r\n\t\t\t\t\t\t\ttarget.maskMode = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 201:\r\n\t\t\t\t\t\t\ttarget.masks = null;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Timeline;",
    "/**\r\n *\r\n */\r\nclass TouchPoint\r\n{\r\n\tx:number;\r\n\r\n\ty:number;\r\n\r\n\tid:number;\r\n\r\n\tconstructor(x:number, y:number, id:number)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.id = id;\r\n\t}\r\n}\r\n\r\nexport = TouchPoint;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._displayObject._iColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(val:ColorTransform)\r\n\t{\r\n\t\tthis._displayObject._iColorTransform = val;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveNormals = false;\r\n\t\tclone.autoDeriveTangents = false;\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.normals)\r\n\t\t\tclone.setNormals(this.normals.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\tif (this.tangents)\r\n\t\t\tclone.setTangents(this.tangents.clone());\r\n\r\n\t\tif (this.secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\r\n\r\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\r\n\t\tif (this.jointIndices)\r\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\r\n\r\n\t\tif (this.jointWeights)\r\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\r\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:Float32Array = matrix.rawData;\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Float32Array = matrix.rawData;\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _depth_childs:Object = {};\r\n\tprivate _depth_sessionIDs:Object = {};\r\n\tprivate _nextHighestDepth:number = 0;\r\n\tprivate _nextHighestDepthDirty:boolean;\r\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\r\n\t\t\tthis._updateMouseEnabled();\r\n\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsContainer = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAt(child, this._children.length);\r\n\t}\r\n\r\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\r\n\r\n\r\n\t\tvar index = this.getDepthIndexInternal(depth);\r\n\r\n\t\tif (index != -1) {\r\n\t\t\tif (replace) {\r\n\t\t\t\tthis.removeChildAt(index);\r\n\t\t\t} else {\r\n\t\t\t\t//move depth of existing child up by 1\r\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._nextHighestDepth < depth + 1)\r\n\t\t\tthis._nextHighestDepth = depth + 1;\r\n\r\n\t\tthis._depth_childs[depth] = child;\r\n\t\tthis._depth_sessionIDs[depth] = child._sessionID;\r\n\t\tthis._children.push(child);\r\n\r\n\t\tchild._depthID = depth;\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObjectContainer\r\n\t{\r\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(newInstance:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper.copyTo(newInstance);\r\n\r\n\t\tnewInstance.mouseChildren = this._mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tnewInstance.addChild(this._children[i].clone());\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\tpublic getSessionIDAtDepth(depth:number):number\r\n\t{\r\n\t\treturn this._depth_sessionIDs[depth];\r\n\t}\r\n\r\n\tpublic getChildAtDepth(depth:number):DisplayObject\r\n\t{\r\n\t\treturn this._depth_childs[depth];\r\n\t}\r\n\r\n\r\n\tpublic getChildDepths():Object\r\n\t{\r\n\t\treturn this._depth_childs;\r\n\t}\r\n\r\n\tpublic getSessionIDDepths():Object\r\n\t{\r\n\t\treturn this._depth_sessionIDs;\r\n\t}\r\n\r\n\tpublic resetDepths()\r\n\t{\r\n\t\tthis._depth_childs = {};\r\n\t\tthis._depth_sessionIDs = {};\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\tpublic getNextHighestDepth()\r\n\t{\r\n\t\tif (this._nextHighestDepthDirty)\r\n\t\t\tthis._updateNextHighestDepth();\r\n\r\n\t\treturn this._nextHighestDepth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildAt(this.getChildIndex(child));\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number, index2:number)\r\n\t{\r\n\t\tvar depth:number = this._children[index2]._depthID;\r\n\t\tvar child:DisplayObject = this._children[index1];\r\n\r\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\r\n\t\tthis.addChildAtDepth(child, depth);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar min:number;\r\n\t\tvar max:number;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\r\n\t{\r\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\r\n\t{\r\n\t\tsuper._iSetScene(value, partition);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._iSetScene(value, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tpublic removeChildAtInternal(index:number):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\r\n\r\n\t\t//update next highest depth\r\n\t\tif (this._nextHighestDepth == child._depthID + 1)\r\n\t\t\tthis._nextHighestDepthDirty = true;\r\n\r\n\t\t//check to make sure _depth_sessionIDs wasn't modified with a new child\r\n\t\tif (this._depth_sessionIDs[child._depthID] == child._sessionID) {\r\n\t\t\tdelete this._depth_sessionIDs[child._depthID];\r\n\t\t\tdelete this._depth_childs[child._depthID];\r\n\t\t}\r\n\r\n\t\tchild._depthID = -16384;\r\n\t\tchild._sessionID = -1;\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\r\n\t{\r\n\t\tif (!this._depth_childs[depth])\r\n\t\t\treturn -1;\r\n\r\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\r\n\t}\r\n\r\n\tprivate _updateNextHighestDepth()\r\n\t{\r\n\t\tthis._nextHighestDepthDirty = false;\r\n\r\n\t\tthis._nextHighestDepth = 0;\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\r\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\r\n\r\n\t\tthis._nextHighestDepth += 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\tif(this._pImplicitMaskId !== -1 && !masksFlag)\r\n\t\t\treturn;\r\n\r\n\t\tif(!this._pImplicitVisibility)\r\n\t\t\treturn;\r\n\r\n\t\tvar masks:Array<DisplayObject> = this.masks;\r\n\r\n\t\tif (masks) {\r\n\t\t\tvar numMasks:number = masks.length;\r\n\t\t\tvar maskHit:boolean = false;\r\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\r\n\t\t\t\tif (masks[i].hitTestPoint(x, y, shapeFlag, true)) {\r\n\t\t\t\t\tmaskHit = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!maskHit)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\r\n\t}\r\n\r\n\tpublic _iAddContainerNode(entityNode:ContainerNode):ContainerNode\r\n\t{\r\n\t\tthis._containerNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveContainerNode(entityNode:ContainerNode):ContainerNode\r\n\t{\r\n\t\tvar index:number = this._containerNodes.indexOf(entityNode);\r\n\r\n\t\tthis._containerNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\r\n\t{\r\n\t\tvar numChildren:number = this.numChildren;\r\n\t\tfor(var i:number = 0; i < numChildren; i++)\r\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic _updateMaskMode()\r\n\t{\r\n\t\t(this.maskMode)\r\n\t\t\tthis.mouseChildren = false;\r\n\r\n\t\tsuper._updateMaskMode();\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loaderSession:LoaderSession;\r\n\tprivate _loaderSessionGarbage:LoaderSession;\r\n\tprivate _gcTimeoutIID:number;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (!this._loaderSession)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\r\n\t\t}\r\n\t\t\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, LoaderSession will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tprivate _getLoaderSession()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tthis._loaderSession = lib.getLoaderSession();\r\n\t\t} else {\r\n\t\t\tthis._loaderSession = new LoaderSession();\r\n\t\t}\r\n\r\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn this._loaderSession;\r\n\t}\r\n\r\n\tprivate _disposeLoaderSession()\r\n\t{\r\n\t\t// Add loader to garbage - for a collection sweep and kill\r\n\t\tthis._loaderSessionGarbage = this._loaderSession;\r\n\t\tdelete this._loaderSession;\r\n\t\tthis._loaderSession = null;\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tLoaderSession.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tLoaderSession.enableParsers(parserClasses);\r\n\t}\r\n\t\r\n\tprivate loaderSessionGC():void\r\n\t{\r\n\t\t//remove listeners\r\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\tif (!this._useAssetLib)\r\n\t\t\tthis._loaderSessionGarbage.stop();\r\n\r\n\t\tdelete this._loaderSessionGarbage;\r\n\t\tthis._loaderSessionGarbage = null;\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends DisplayObjectContainer\r\n{\r\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\r\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\r\n\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor(partition:PartitionBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.partition = partition || new BasicPartition();\r\n\r\n\t\tthis._iIsRoot = true;\r\n\t\tthis._pScene = this;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:PartitionBase)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:PartitionBase)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tget touchPoints():Array<TouchPoint>\r\n\t{\r\n\t\treturn this._pTouchPoints;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\r\n\t{\r\n\t\tvar localPosition:Vector3D;\r\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\r\n\r\n\t\tvar len:number = this._pTouchPoints.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\r\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\r\n\t\t}\r\n\r\n\t\treturn localTouchPoints;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\tpublic _pControllerDirty:boolean;\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject)\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pAutoUpdate)\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\telse\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic updateController()\r\n\t{\r\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\r\n\t\t\tthis._pControllerDirty = false;\r\n\t\t\tthis.pNotifyUpdate();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pControllerDirty = true;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\r\n\t\tvar invLen:number;\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\r\n\t{\r\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\r\n\t\t\treturn true;\r\n\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\r\n\t\t\tthis._viewProjectionDirty = true;\r\n\t\t\tthis._frustumPlanesDirty = true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t//temp point used in hit testing\r\n\tprivate _tempPoint:Point = new Point();\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():Mesh\r\n\t{\r\n\t\tvar newInstance:Mesh = new Mesh(this._geometry, this._material);\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(newInstance:Mesh)\r\n\t{\r\n\t\tsuper.copyTo(newInstance);\r\n\r\n\t\tnewInstance.geometry = this._geometry;\r\n\t\tnewInstance.material = this._material;\r\n\t\tnewInstance.castsShadows = this._castsShadows;\r\n\t\tnewInstance.shareAnimationGeometry = this._shareAnimationGeometry;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n\t\t\tnewInstance._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n        if (this._animator)\r\n\t\t\tnewInstance.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\r\n\t\t\tif (this.numChildren) {\r\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\r\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\r\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\r\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\r\n\t\t\t} else {\r\n\t\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\r\n\t\t\t\t\tminZ = maxZ = 0;\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < tmp_minZ)\r\n\t\t\t\t\t\ttmp_minZ = p;\r\n\t\t\t\t\telse if (p > tmp_maxZ)\r\n\t\t\t\t\t\ttmp_maxZ = p;\r\n\t\t\t\t}\r\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\r\n\t\t\t\t\tminZ = tmp_minZ;\r\n\t\t\t\t\tmaxZ = tmp_maxZ;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\r\n\t{\r\n\t\tif(this._geometry && this._geometry.subGeometries.length) {\r\n\t\t\tthis._tempPoint.setTo(x,y);\r\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\r\n\t\t\tvar box:Box;\r\n\r\n\t\t\t//early out for box test\r\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t//early out for non-shape tests\r\n\t\t\tif (!shapeFlag)\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t//ok do the geometry thing\r\n\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\t\tvar subGeometriesCount:number = subGeometries.length;\r\n\t\t\tfor(var i:number = 0; i < subGeometriesCount; i++)\r\n\t\t\t\tif (SubGeometryUtils.hitTestCurveGeometry(local.x, local.y, 0, box, <CurveSubGeometry> subGeometries[i]))\r\n\t\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\r\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\r\nimport TextField = require(\"awayjs-display/lib/entities/TextField\");\r\n\r\nimport MouseEvent               = require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\r\nimport Timeline                 = require(\"awayjs-display/lib/base/Timeline\");\r\nimport FrameScriptManager       = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\nclass MovieClip extends DisplayObjectContainer\r\n{\r\n    public static assetType:string = \"[asset MovieClip]\";\r\n\r\n    private _timeline:Timeline;\r\n\r\n    private _isButton:boolean;\r\n    private _onMouseOver:(event:MouseEvent) => void;\r\n    private _onMouseOut:(event:MouseEvent) => void;\r\n    private _onMouseDown:(event:MouseEvent) => void;\r\n    private _onMouseUp:(event:MouseEvent) => void;\r\n\r\n    private _time:number;// the current time inside the animation\r\n    private _currentFrameIndex:number;// the current frame\r\n\r\n    private _isPlaying:boolean;// false if paused or stopped\r\n\r\n    // not sure if needed\r\n    private _enterFrame:Event;\r\n    private _skipAdvance : boolean;\r\n    private _isInit : boolean;\r\n\r\n    private _potentialInstances:Object;\r\n    private _sessionID_childs:Object;\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IMovieClipAdapter\r\n\t{\r\n\t\treturn <IMovieClipAdapter> this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IMovieClipAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    constructor(timeline:Timeline = null)\r\n    {\r\n        super();\r\n        this._sessionID_childs = {};\r\n        this._potentialInstances = {};\r\n        this._currentFrameIndex = -1;\r\n        this.constructedKeyFrameIndex = -1;\r\n        this._isInit=true;\r\n        this._isPlaying = true; // auto-play\r\n        this._isButton=false;\r\n\r\n        this._time = 0;\r\n        this._enterFrame = new Event(Event.ENTER_FRAME);\r\n        this.inheritColorTransform = true;\r\n\r\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\r\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\r\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\r\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\r\n\r\n        this._timeline = timeline || new Timeline();\r\n    }\r\n\r\n\r\n    public reset_textclones()\r\n    {\r\n        if(this.timeline) {\r\n            for (var key in this._potentialInstances) {\r\n                if (this._potentialInstances[key] != null) {\r\n                    if (this._potentialInstances[key].isAsset(TextField)) {\r\n                        (<TextField>this._potentialInstances[key]).text = (<TextField>this.timeline.getPotentialChildPrototype(key)).text;\r\n                    }\r\n                    else if (this._potentialInstances[key].isAsset(MovieClip)) {\r\n                        (<MovieClip>this._potentialInstances[key]).reset_textclones();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public get isInit():boolean\r\n    {\r\n        return this._isInit;\r\n    }\r\n    public set isInit(value:boolean)\r\n    {\r\n        this._isInit = value;\r\n    }\r\n\r\n    public get timeline():Timeline\r\n    {\r\n        return this._timeline;\r\n    }\r\n\r\n    public set timeline(value:Timeline)\r\n    {\r\n        this._timeline = value;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    public loop:boolean = true;\r\n\r\n    public get numFrames() : number\r\n    {\r\n        return this._timeline.numFrames;\r\n    }\r\n\r\n    public jumpToLabel(label:string)\r\n    {\r\n        // the timeline.jumpTolabel will set currentFrameIndex\r\n        this._timeline.jumpToLabel(this, label);\r\n    }\r\n\r\n    /**\r\n     * the current index of the current active frame\r\n     */\r\n    public constructedKeyFrameIndex:number;\r\n\r\n    public exit_frame():void\r\n    {\r\n        this._skipAdvance = false;\r\n\r\n        var child:DisplayObject;\r\n        for (var i:number = this.numChildren - 1; i >= 0; i--) {\r\n            child = this._children[i];\r\n            if(child.isAsset(MovieClip))\r\n                (<MovieClip> child).exit_frame();\r\n        }\r\n    }\r\n    public reset():void\r\n    {\r\n        super.reset();\r\n\r\n        // time only is relevant for the root mc, as it is the only one that executes the update function\r\n        this._time = 0;\r\n\r\n        if(this.adapter)\r\n            this.adapter.freeFromScript();\r\n\r\n        this._isPlaying = true;\r\n\r\n        this._currentFrameIndex = -1;\r\n        this.constructedKeyFrameIndex = -1;\r\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\r\n            this.removeChildAt(i);\r\n\r\n        this._skipAdvance = true;\r\n\r\n        if (this._timeline.numFrames) {\r\n            this._currentFrameIndex = 0;\r\n            this._timeline.constructNextFrame(this, true, true);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\r\n     */\r\n    public set_currentFrameIndex(value : number) {\r\n        this._skipAdvance = true;\r\n        this._currentFrameIndex = value;\r\n    }\r\n    /*\r\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\r\n     */\r\n    public get currentFrameIndex():number\r\n    {\r\n        return this._currentFrameIndex;\r\n    }\r\n\r\n    public set currentFrameIndex(value:number)\r\n    {\r\n        if (this._currentFrameIndex == value)\r\n            return;\r\n\r\n        if(this._timeline.numFrames) {\r\n            value = Math.floor(value);\r\n\r\n            var skip_script:boolean = false;\r\n\r\n            if (value < 0) {\r\n                value = 0;\r\n            } else if (value >= this._timeline.numFrames) {\r\n                value = this._timeline.numFrames - 1;\r\n                skip_script=true;\r\n            }\r\n\r\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\r\n            this._skipAdvance = true;\r\n            //this._time = 0;\r\n\r\n            this._timeline.gotoFrame(this, value, skip_script);\r\n        }\r\n\r\n        this._currentFrameIndex = value;\r\n    }\r\n\r\n    public addButtonListeners()\r\n    {\r\n        this._isButton = true;\r\n\r\n        this.stop();\r\n\r\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n    }\r\n\r\n    public removeButtonListeners()\r\n    {\r\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n\r\n    }\r\n\r\n    public getChildAtSessionID(sessionID:number):DisplayObject\r\n    {\r\n        return this._sessionID_childs[sessionID];\r\n    }\r\n\r\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n    {\r\n        //this should be implemented for all display objects\r\n        child.inheritColorTransform = true;\r\n\r\n        child.reset();// this takes care of transform and visibility\r\n\r\n        super.addChildAtDepth(child, depth, true);\r\n\r\n        this._sessionID_childs[child._sessionID] = child;\r\n\r\n        return child;\r\n    }\r\n\r\n    public removeChildAtInternal(index:number /*int*/):DisplayObject\r\n    {\r\n        delete this._sessionID_childs[this._children[index]._sessionID];\r\n\r\n        var child:DisplayObject = super.removeChildAtInternal(index);\r\n\r\n        if(child.adapter)\r\n            child.adapter.freeFromScript();\r\n\r\n        this.adapter.unregisterScriptObject(child);\r\n\r\n\r\n        return child;\r\n    }\r\n\r\n    public get assetType():string\r\n    {\r\n        return MovieClip.assetType;\r\n    }\r\n\r\n    /**\r\n     * Starts playback of animation from current position\r\n     */\r\n    public play()\r\n    {\r\n        this._isPlaying = true;\r\n    }\r\n\r\n    /**\r\n     * should be called right before the call to away3d-render.\r\n     */\r\n    public update()\r\n    {\r\n        this.advanceFrame();\r\n\r\n        // after we advanced the scenegraph, we might have some script that needs executing\r\n        FrameScriptManager.execute_queue();\r\n\r\n        // now we want to execute the onEnter\r\n        this.dispatchEvent(this._enterFrame);\r\n\r\n        // after we executed the onEnter, we might have some script that needs executing\r\n        FrameScriptManager.execute_queue();\r\n\r\n        // now we execute any intervals queued\r\n        FrameScriptManager.execute_intervals();\r\n\r\n        // finally, we execute any scripts that were added from intervals\r\n        FrameScriptManager.execute_queue();\r\n\r\n        this.exit_frame();\r\n    }\r\n\r\n    public getPotentialChildInstance(id:number) : DisplayObject\r\n    {\r\n        if (!this._potentialInstances[id])\r\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\r\n\r\n\r\n        return this._potentialInstances[id];\r\n    }\r\n\r\n\r\n    /**\r\n     * Stop playback of animation and hold current position\r\n     */\r\n    public stop()\r\n    {\r\n        this._isPlaying = false;\r\n    }\r\n\r\n    public clone():MovieClip\r\n    {\r\n        var newInstance:MovieClip = new MovieClip(this._timeline);\r\n\r\n        this.copyTo(newInstance);\r\n\r\n        return newInstance;\r\n    }\r\n\r\n    public copyTo(newInstance:MovieClip)\r\n    {\r\n        super.copyTo(newInstance);\r\n\r\n        newInstance.timeline = this._timeline;\r\n        newInstance.loop = this.loop;\r\n    }\r\n\r\n\r\n    public iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper.iSetParent(value);\r\n\t}\r\n\r\n    public advanceFrame(skipChildren:boolean = false)\r\n    {\r\n        var numFrames:number = this._timeline.numFrames;\r\n        if(numFrames) {\r\n            if (((this._isPlaying && !this._skipAdvance) || this._currentFrameIndex == -1) && (this._currentFrameIndex != numFrames - 1 || this.loop)) {\r\n                this._currentFrameIndex++;\r\n                if (this._currentFrameIndex == numFrames) { // looping - jump to first frame.\r\n                    this.currentFrameIndex = 0;\r\n                } else { // not looping - construct next frame\r\n                    this._timeline.constructNextFrame(this);\r\n                }\r\n            }\r\n\r\n            if (!skipChildren)\r\n                this.advanceChildren();\r\n        }\r\n\r\n        this._skipAdvance = false;\r\n    }\r\n\r\n    private advanceChildren()\r\n    {\r\n        var len:number = this.numChildren;\r\n        var child:DisplayObject;\r\n        for (var i:number = 0; i <  len; ++i) {\r\n            child = this._children[i];\r\n\r\n            if (child.isAsset(MovieClip))\r\n                (<MovieClip> child).advanceFrame();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n// DEBUG CODE:\r\n    logHierarchy(depth: number = 0):void\r\n    {\r\n        this.printHierarchyName(depth, this);\r\n\r\n        var len = this.numChildren;\r\n        var child:DisplayObject;\r\n        for (var i:number = 0; i < len; i++) {\r\n            child = this._children[i];\r\n\r\n            if (child.isAsset(MovieClip))\r\n                (<MovieClip> child).logHierarchy(depth + 1);\r\n            else\r\n                this.printHierarchyName(depth + 1, child);\r\n        }\r\n    }\r\n\r\n    printHierarchyName(depth:number, target:DisplayObject)\r\n    {\r\n        var str = \"\";\r\n        for (var i = 0; i < depth; ++i)\r\n            str += \"--\";\r\n\r\n        str += \" \" + target.name + \" = \" + target.id;\r\n        console.log(str);\r\n    }\r\n\r\n\r\n}\r\nexport = MovieClip;\r\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone.maskMode = this.maskMode;\r\n\t\tclone.masks = this.masks? this.masks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tvalue=value.toString();\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic _textColor:number /*int*/;\r\n\r\n\tpublic get textColor()\r\n\t{\r\n\t\treturn this._textColor;\r\n\t}\r\n\r\n\tpublic set textColor(value:number)\r\n\t{\r\n\t\tthis._textColor = value;\r\n\t\tconsole.log(\"textcolor = \"+value);\r\n\t\tif(!this._iColorTransform)\r\n\t\t\tthis._iColorTransform = new ColorTransform();\r\n\r\n\t\tthis._iColorTransform.color = value;\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t\tthis.type = TextFieldType.STATIC;\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\r\n\t\tif(this._textFormat==null)\r\n\t\t\treturn;\r\n\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._text==\"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\r\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\r\n\t\tvar y_offset:number=additional_margin_y;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale);\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\r\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\r\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\r\n\t\tvar final_lines_width:Array<number> = [];\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\r\n\t\t\tfinal_lines_chars.push([]);\r\n\t\t\tfinal_lines_char_scale.push([]);\r\n\t\t\tfinal_lines_width.push(0);\r\n\r\n\r\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\r\n\t\t\tfor (var i = 0; i < words.length; i++) {\r\n\t\t\t\tvar word_width:number = 0;\r\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\r\n\t\t\t\tvar word_chars_scale:Array<number> = [];\r\n\t\t\t\tvar c_cnt:number = 0;\r\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\r\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\r\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\r\n\t\t\t\t\tif (this_char == null) {\r\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\r\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\r\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\r\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tword_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\t\tword_width += whitespace_width;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\t\tword_width += whitespace_width;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\r\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + word_width) <= this.textWidth) {\r\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\r\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\r\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\r\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// word does not fit\r\n\t\t\t\t\t// todo respect multiline and autowrapping properties.\r\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\r\n\t\t\t\t\tfinal_lines_chars.push([]);\r\n\t\t\t\t\tfinal_lines_char_scale.push([]);\r\n\t\t\t\t\tfinal_lines_width.push(0);\r\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\r\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\r\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i < (words.length - 1)) {\r\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + whitespace_width) <= this.textWidth) {\r\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\r\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\r\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfinal_lines_chars.push([null]);\r\n\t\t\t\t\t\tfinal_lines_char_scale.push([char_scale]);\r\n\t\t\t\t\t\tfinal_lines_width.push(whitespace_width);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\r\n\r\n\t\t\tvar x_offset:number=additional_margin_x;\r\n\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])/2;\r\n\t\t\t}\r\n\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-additional_margin_x;\r\n\t\t\t}\r\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\r\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tx_offset+=whitespace_width;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tx_offset+=whitespace_width;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ty_offset+=(this._textFormat.font_table.get_font_em_size() * char_scale);\r\n\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone():TextField\r\n    {\r\n\t\tvar newInstance:TextField = new TextField();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n    }\r\n\r\n\r\n\tpublic copyTo(newInstance:TextField)\r\n\t{\r\n\t\tsuper.copyTo(newInstance);\r\n\r\n\t\t// each textfield needs its own geometry.\r\n\t\tnewInstance.geometry=new Geometry();\r\n\r\n\t\tnewInstance.textWidth = this._textWidth;\r\n\t\tnewInstance.textHeight = this._textHeight;\r\n\t\tnewInstance.textFormat = this._textFormat;\r\n\t\t//newInstance.textColor = this._textColor;\r\n\t\tnewInstance.text = this._text;\r\n\t}\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\r\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultColorMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\r\n\t\t}\r\n\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\r\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\r\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImageCube()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImage2D()\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\r\n\t}\r\n\r\n\tprivate static createDefaultTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultColorMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\n\r\nclass FrameScriptManager\r\n{\r\n\t// queues pass1 of scripts.\r\n\tprivate static _queued_mcs:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts:Array<Function> = [];\r\n\r\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\r\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\r\n\r\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\r\n\r\n\tprivate static _intervalID:number=0;\r\n\tpublic static setInterval(func:any):number\r\n\t{\r\n\t\tthis._intervalID++;\r\n\t\tthis._active_intervals[this._intervalID]=func;\r\n\t\treturn this._intervalID\r\n\t}\r\n\r\n\tpublic static clearInterval(id:number):void\r\n\t{\r\n\t\tdelete this._active_intervals[id];\r\n\t}\r\n\r\n\tpublic static execute_intervals():void\r\n\t{\r\n\t\tfor(var key in this._active_intervals){\r\n\t\t\tthis._active_intervals[key].call();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2=[];\r\n\t\tthis._queued_scripts_pass2=[];\r\n\t\tthis._queued_mcs.push(mc);\r\n\t\tthis._queued_scripts.push(script);\r\n\t}\r\n\r\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\tthis._queued_mcs_pass2.push(mc);\r\n\t\tthis._queued_scripts_pass2.push(script);\r\n\t}\r\n\r\n\tpublic static execute_queue():void\r\n\t{\r\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\r\n\t\t\treturn;\r\n\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2=[];\r\n\t\tthis._queued_scripts_pass2=[];\r\n\r\n\t\tvar mc:MovieClip;\r\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\r\n\t\t\t// during the loop we might add more scripts to the queue\r\n\t\t\tmc=this._queued_mcs[i];\r\n\t\t\tif(mc.scene!=null) {\r\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\r\n\t\t\t//\ttry {\r\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\r\n\t\t\t//\t}\r\n\t\t\t/*\tcatch (err) {\r\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\r\n\t\t\t\t\tconsole.log(err.message);\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t}\r\n\t\t// all scripts executed. clear all\r\n\t\tthis._queued_mcs=[];\r\n\t\tthis._queued_scripts=[];\r\n\t}\r\n}\r\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\t if (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\r\n\t\t\t// if nothing is queued, the function will return directly anyway\r\n\t\t\tFrameScriptManager.execute_queue();\r\n\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\r\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tview._pTouchPoints.length = 0;\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\r\n\t\t\tif (event.touches) {\r\n\t\t\t\tvar touch;\r\n\t\t\t\tvar len:number = event.touches.length;\r\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\t\t\ttouch = event.touches[i];\r\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\n\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass BasicPartition extends PartitionBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._rootNode = new NodeBase();\r\n\t}\r\n}\r\n\r\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\r\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\n\r\n/**\r\n * Maintains scenegraph heirarchy when collecting nodes\r\n */\r\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\r\n{\r\n    public isContainerNode:boolean = true;\r\n\r\n    public _iUpdateQueueNext:IDisplayObjectNode;\r\n\r\n    private _pool:ContainerNodePool;\r\n    private _container : DisplayObjectContainer;\r\n    private _partition:PartitionBase;\r\n    private _childDepths:Array<number> = new Array<number>();\r\n    private _childMasks:Array<INode> = new Array<INode>();\r\n    private _numChildMasks:number = 0;\r\n\r\n    public _pEntityNode:IDisplayObjectNode;\r\n\r\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\r\n    {\r\n        super();\r\n\r\n        this._pool = pool;\r\n        this._container = container;\r\n        this._partition = partition;\r\n    }\r\n\r\n    public get displayObject():DisplayObject\r\n    {\r\n        return this._container;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param traverser\r\n     */\r\n    public acceptTraverser(traverser:CollectorBase)\r\n    {\r\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\r\n        if (this.numEntities == 0)\r\n            return;\r\n\r\n        if (this._pEntityNode)\r\n            this._pEntityNode.acceptTraverser(traverser);\r\n\r\n        var i:number;\r\n        for (i = 0; i < this._numChildMasks; i++)\r\n            this._childMasks[i].acceptTraverser(traverser);\r\n\r\n        for (i = 0; i < this._pNumChildNodes; i++)\r\n            this._pChildNodes[i].acceptTraverser(traverser);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @returns {away.partition.NodeBase}\r\n     */\r\n    public findParentForNode(node:IDisplayObjectNode):INode\r\n    {\r\n        if (!node.isContainerNode && node.displayObject.isContainer)\r\n            return this._pool.getItem(<DisplayObjectContainer> node.displayObject);\r\n\r\n        return this._pool.getItem(node.displayObject.parent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    public iAddNode(node:IDisplayObjectNode)\r\n    {\r\n        node.parent = this;\r\n\r\n        if (!node.isContainerNode && node.displayObject.isContainer) {\r\n            this._pEntityNode = node;\r\n        } else if (node.displayObject.maskMode) {\r\n            this._childMasks.push(node);\r\n            this._numChildMasks = this._childMasks.length;\r\n        } else {\r\n            var depth:number = node.displayObject._depthID;\r\n            var len:number = this._childDepths.length;\r\n            var index:number = len;\r\n\r\n            while (index--)\r\n                if (this._childDepths[index] < depth)\r\n                    break;\r\n\r\n            index++;\r\n\r\n            if (index < len) {\r\n                this._pChildNodes.splice(index, 0, node);\r\n                this._childDepths.splice(index, 0, depth);\r\n            } else {\r\n                this._pChildNodes.push(node);\r\n                this._childDepths.push(depth);\r\n            }\r\n            this._pNumChildNodes = this._childDepths.length;\r\n        }\r\n\r\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n        var numEntities:number = node.numEntities;\r\n        node = this;\r\n\r\n        do {\r\n            node.numEntities += numEntities;\r\n        } while ((node = <EntityNode> node.parent) != null);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    public iRemoveNode(node:IDisplayObjectNode)\r\n    {\r\n        if (!node.isContainerNode && node.displayObject.isContainer) {\r\n            this._pEntityNode = null;\r\n        } else if (node.displayObject.maskMode) {\r\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\r\n            this._numChildMasks = this._childMasks.length;\r\n        } else {\r\n            var index:number = this._pChildNodes.indexOf(node);\r\n\r\n            this._pChildNodes.splice(index, 1);\r\n            this._childDepths.splice(index, 1);\r\n\r\n            this._pNumChildNodes = this._childDepths.length;\r\n        }\r\n\r\n        node._iUpdateImplicitDebugVisible(false);\r\n\r\n        var numEntities:number = node.numEntities;\r\n        node = this;\r\n\r\n        do {\r\n            node.numEntities -= numEntities;\r\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\r\n    }\r\n}\r\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static assetClass:IAssetClass = DirectionalLight;\r\n\r\n\tprivate _directionalLight:DirectionalLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase implements IDisplayObjectNode\r\n{\r\n\tpublic isContainerNode:boolean = false;\r\n\r\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\r\n\tprivate _pool:EntityNodePool;\r\n\tprivate _entity:DisplayObject;\r\n\tprivate _partition:PartitionBase;\r\n\tpublic _bounds:BoundingVolumeBase;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis.numEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get displayObject():DisplayObject\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.displayObject.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\r\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\t//this._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:LightProbe;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase implements INode\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\tpublic numEntities:number = 0;\r\n\r\n\tpublic parent:INode;\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findParentForNode(node:INode):INode\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\r\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:INode)\r\n\t{\r\n\t\tnode.parent = this;\r\n\t\tthis.numEntities += node.numEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities += numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:INode)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities -= numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n\r\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass PartitionBase\r\n{\r\n\tpublic _entityNodePool:EntityNodePool;\r\n\tpublic _rootNode:INode;\r\n\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:IDisplayObjectNode;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._entityNodePool = new EntityNodePool(this);\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\r\n\t{\r\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\r\n\t{\r\n\t\tvar t:IDisplayObjectNode;\r\n\r\n\t\tif (node.parent) {\r\n\t\t\tnode.parent.iRemoveNode(node);\r\n\t\t\tnode.parent = null;\r\n\t\t}\r\n\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\r\n\t\twhile (node) {\r\n\t\t\t//required for controllers with autoUpdate set to true and queued events\r\n\t\t\tnode.displayObject._iInternalUpdate();\r\n\t\t\tnode = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\t//reset head\r\n\t\tnode = this._updateQueue;\r\n\t\tvar targetNode:INode;\r\n\t\tvar t:IDisplayObjectNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findParentForNode(node);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node.parent)\r\n\t\t\t\t\tnode.parent.iRemoveNode(node);\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tif (displayObject.isEntity)\r\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tif (displayObject.isEntity)\r\n\t\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(displayObject));\r\n\t}\r\n}\r\n\r\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:PointLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass SceneGraphPartition extends PartitionBase\r\n{\r\n\tpublic _containerNodePool:ContainerNodePool;\r\n\r\n\tconstructor(rootContainer:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._containerNodePool = new ContainerNodePool(this);\r\n\r\n\t\tthis._rootNode = this._containerNodePool.getItem(rootContainer);\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tsuper.traverse(traverser);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper._iRegisterEntity(displayObject);\r\n\r\n\t\tif (displayObject.isContainer)\r\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper._iUnregisterEntity(displayObject);\r\n\r\n\t\tif (displayObject.isContainer)\r\n\t\t\tthis.iRemoveEntity(this._containerNodePool.disposeItem(<DisplayObjectContainer> displayObject));\r\n\t}\r\n}\r\n\r\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:Skybox;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _x:number;\r\n\tprivate _y:number;\r\n\tprivate _view:View;\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._view = view;\r\n\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\r\n\t{\r\n\t\t//horrible hack for 2d masks\r\n\t\tif (masks != null) {\r\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\r\n\t\t\tvar numLayers:number = masks.length;\r\n\t\t\tvar children:Array<DisplayObject>;\r\n\t\t\tvar numChildren:number;\r\n\t\t\tvar layerHit:boolean;\r\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\r\n\t\t\t\tchildren = masks[i];\r\n\t\t\t\tnumChildren = children.length;\r\n\t\t\t\tlayerHit = false;\r\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\r\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\r\n\t\t\t\t\t\tlayerHit = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!layerHit)\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\n\r\n/**\r\n * @class away.pool.ContainerNodePool\r\n */\r\nclass ContainerNodePool\r\n{\r\n\tprivate static _classPool:Object = new Object();\r\n\r\n\tprivate _containerNodePool:Object = new Object();\r\n\tprivate _partition:PartitionBase;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(partition:PartitionBase)\r\n\t{\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\r\n\t{\r\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\r\n\t{\r\n\t\tvar containerNode:ContainerNode = this._containerNodePool[displayObjectContainer.id];\r\n\r\n\t\tif (containerNode) {\r\n\t\t\tdisplayObjectContainer._iRemoveContainerNode(containerNode);\r\n\r\n\t\t\tdelete this._containerNodePool[displayObjectContainer.id];\r\n\t\t}\r\n\r\n\t\treturn containerNode;\r\n\t}\r\n}\r\n\r\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\r\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate static _classPool:Object = new Object();\r\n\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _partition:PartitionBase;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(partition:PartitionBase)\r\n\t{\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(displayObject:DisplayObject):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(displayObject:DisplayObject):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[displayObject.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tdisplayObject._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tdelete this._entityNodePool[displayObject.id];\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param imageObjectClass\r\n\t */\r\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\r\n\t{\r\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\r\n\t{\r\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\r\n\t}\r\n\r\n\tprivate static main = EntityNodePool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\r\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\r\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\r\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\r\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\r\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\r\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\r\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\r\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\r\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get font_styles():Array<FontTable>\r\n\t{\r\n\t\treturn this._font_styles;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tpublic _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _whitespace_width:number;\r\n\tprivate _offset_x:number;\r\n\tprivate _offset_y:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t\tthis._offset_x=0;\r\n\t\tthis._offset_y=0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tget offset_x():number {\r\n\t\treturn this._offset_x;\r\n\t}\r\n\r\n\tset offset_x(value:number){\r\n\t\tthis._offset_x=value;\r\n\t}\r\n\r\n\tget offset_y():number {\r\n\t\treturn this._offset_y;\r\n\t}\r\n\r\n\tset offset_y(value:number){\r\n\t\tthis._offset_y=value;\r\n\t}\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_whitespace_width(value:number):void\r\n\t{\r\n\t\tthis._whitespace_width=value;\r\n\t}\r\n\tpublic get_whitespace_width():number\r\n\t{\r\n\t\treturn this._whitespace_width\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>static</code> TextField.\r\n\t */\r\n\tpublic static STATIC:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic fallback_font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 3;\r\n\t\t\tf2 += 3;\r\n\t\t\tf3 += 3;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n\r\n\t//TODO - generate this dyanamically based on num tris\r\n\r\n\tpublic static hitTestCurveGeometry(x:number, y:number, z:number, boundingBox:Box, curveSubGeometry:CurveSubGeometry):boolean\r\n\t{\r\n\t\tvar positionAttributes:Short3Attributes = curveSubGeometry.positions;\r\n\t\tvar curveAttributes:Short2Attributes = curveSubGeometry.curves;\r\n\t\tvar count:number = curveSubGeometry.numVertices;\r\n\r\n\t\tvar posDim:number = positionAttributes.dimensions;\r\n\t\tvar curveDim:number = curveAttributes.dimensions;\r\n\r\n\t\tvar positions:Float32Array = positionAttributes.get(count);\r\n\t\tvar curves:Float32Array = curveAttributes.get(count);\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\tvar index:number = curveSubGeometry.lastCollisionIndex;\r\n\t\tif(index != -1 && index < count)\r\n\t\t{\r\n\t\t\tprecheck:\r\n\t\t\t{\r\n\t\t\t\tid0 = index + 2;\r\n\t\t\t\tid1 = index + 1;\r\n\t\t\t\tid2 = index + 0;\r\n\r\n\t\t\t\tax = positions[id0 * posDim];\r\n\t\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\t\tbx = positions[id1 * posDim];\r\n\t\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\t\tcx = positions[id2 * posDim];\r\n\t\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t\t//from a to p\r\n\t\t\t\tvar dx:number = ax - x;\r\n\t\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t\t//edge normal (a-b)\r\n\t\t\t\tvar nx:number = by - ay;\r\n\t\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tbreak precheck;\r\n\r\n\t\t\t\tdx = bx - x;\r\n\t\t\t\tdy = by - y;\r\n\t\t\t\tnx = cy - by;\r\n\t\t\t\tny = -(cx - bx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tbreak precheck;\r\n\r\n\t\t\t\tdx = cx - x;\r\n\t\t\t\tdy = cy - y;\r\n\t\t\t\tnx = ay - cy;\r\n\t\t\t\tny = -(ax - cx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tbreak precheck;\r\n\r\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\r\n\t\t\t\t//check if not solid\r\n\t\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t\t//here be dragons\r\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\t\tbreak precheck;;\r\n\t\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\t\tbreak precheck;;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\t\t//hard coded min vertex count to bother using a grid for\r\n\t\tif (count > 150) {\r\n\t\t\tvar cells:Array<Array<number>> = curveSubGeometry.cells;\r\n\t\t\tvar divisions:number = cells.length? curveSubGeometry.divisions : (curveSubGeometry.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\r\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\r\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\r\n\t\t\tvar minx:number = boundingBox.x;\r\n\t\t\tvar miny:number = boundingBox.y;\r\n\r\n\t\t\tif (!cells.length) { //build grid\r\n\t\t\t\t\r\n\t\t\t\t//now we have bounds start creating grid cells and filling\r\n\t\t\t\tcells.length = divisions * divisions;\r\n\r\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\r\n\t\t\t\t\tid0 = k + 2;\r\n\t\t\t\t\tid1 = k + 1;\r\n\t\t\t\t\tid2 = k + 0;\r\n\r\n\t\t\t\t\tax = positions[id0 * posDim];\r\n\t\t\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\t\t\tbx = positions[id1 * posDim];\r\n\t\t\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\t\t\tcx = positions[id2 * posDim];\r\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t\t\t//subtractions to push into positive space\r\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\r\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\r\n\r\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\r\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\r\n\r\n\r\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\r\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\r\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\r\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\r\n\r\n\t\t\t\t\t\t\t//push in the triangle ids\r\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\r\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\r\n\r\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\r\n\r\n\t\t\tif (nodes == null)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tvar nodeCount:number = nodes.length;\r\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\r\n\t\t\t\tid0 = nodes[k];\r\n\t\t\t\tid1 = nodes[k + 1];\r\n\t\t\t\tid2 = nodes[k + 2];\r\n\r\n\t\t\t\tax = positions[id0 * posDim];\r\n\t\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\t\tbx = positions[id1 * posDim];\r\n\t\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\t\tcx = positions[id2 * posDim];\r\n\t\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t\t//from a to p\r\n\t\t\t\tvar dx:number = ax - x;\r\n\t\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t\t//edge normal (a-b)\r\n\t\t\t\tvar nx:number = by - ay;\r\n\t\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tdx = bx - x;\r\n\t\t\t\tdy = by - y;\r\n\t\t\t\tnx = cy - by;\r\n\t\t\t\tny = -(cx - bx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tdx = cx - x;\r\n\t\t\t\tdy = cy - y;\r\n\t\t\t\tnx = ay - cy;\r\n\t\t\t\tny = -(ax - cx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\r\n\t\t\t\t//check if not solid\r\n\t\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t\t//here be dragons\r\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\t\tvar d:number = uu * uu - vv;\r\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t\t\tif (d > 0 && az == -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\telse if (d < 0 && az == 1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//brute force\r\n\t\tfor(var k:number = 0; k < count; k += 3) {\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - x;\r\n\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - x;\r\n\t\t\tdy = by - y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - x;\r\n\t\t\tdy = cy - y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "positions",
    "posDim",
    "dimensions",
    "Number",
    "MAX_VALUE",
    "maxx",
    "maxy",
    "k",
    "width",
    "height",
    "maxDevisions",
    "ceil",
    "sqrt",
    "numVertices",
    "min",
    "numCells",
    "cellWidth",
    "cellHeight",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "left",
    "right",
    "max",
    "top",
    "bottom",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "cell",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "_invalidateGlobalColorTransform",
    "_globalColorTransformDirty",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_pSceneTransformDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "_iMatrix3D",
    "name",
    "concat",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset_to_init_state",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "_sceneTransformChanged",
    "queueDispatch",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "_globalColorTransformChanged",
    "elements",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "MovieClip",
    "Timeline",
    "numKeyFrames",
    "_potentialPrototypes",
    "_keyframe_indices",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "_frame_command_indices",
    "_frame_recipe",
    "_keyframe_durations",
    "_keyframe_firstframes",
    "_keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "translateScript",
    "classReplacements",
    "addScriptForExecution",
    "frame_script_in",
    "replaced",
    "replace",
    "replacementPreface",
    "replacementPostface",
    "srcName",
    "dstName",
    "Function",
    "err",
    "console",
    "log",
    "message",
    "_command_index_stream",
    "_command_length_stream",
    "_add_child_stream",
    "_remove_child_stream",
    "_update_child_stream",
    "_update_child_props_indices_stream",
    "_update_child_props_length_stream",
    "_property_index_stream",
    "_property_type_stream",
    "_properties_stream_f32_mtx_all",
    "_properties_stream_f32_mtx_scale_rot",
    "_properties_stream_f32_mtx_pos",
    "_properties_stream_f32_ct",
    "_properties_stream_int",
    "_properties_stream_strings",
    "numFrames",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "removeAll",
    "removeAllFromScript",
    "previous_sessions",
    "previous_mcs",
    "session_cnt",
    "prev_script_cnt",
    "numChildren",
    "child",
    "getChildAt",
    "unregisterScriptObject",
    "isAsset",
    "freeFromScript",
    "removeChildAt",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "frame_recipe",
    "remove_childs",
    "add_childs",
    "target_sessions",
    "reset",
    "doit",
    "isBlockedByScript",
    "update_childs",
    "constructNextFrame",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "start_index",
    "removeChildAtDepth",
    "addChildAtDepth",
    "pc",
    "props_cnt",
    "props_start_idx",
    "value_start_index",
    "props_type",
    "childID",
    "new_matrix",
    "new_ct",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask_length",
    "firstMaskID",
    "mc",
    "mc2",
    "masks",
    "mouseEnabled",
    "registerScriptObject",
    "makeButton",
    "awayjs-display/lib/entities/MovieClip",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_depths",
    "_nextHighestDepth",
    "_children",
    "addChild",
    "addChildAt",
    "removeChildAtInternal",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAtDepth",
    "getDepthIndexInternal",
    "getChildByName",
    "childIndex",
    "getChildDepth",
    "getNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "Event",
    "MouseEvent",
    "_loop",
    "_potentialInstances",
    "_currentFrameIndex",
    "_constructedKeyFrameIndex",
    "_isInit",
    "_framescripts_to_execute",
    "_isPlaying",
    "_isButton",
    "_fps",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_timeline",
    "potential_child_length",
    "timeline",
    "_skipAdvance",
    "key",
    "_onMouseOver",
    "evt",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListener",
    "newFps",
    "play",
    "timeDelta",
    "frameMarker",
    "advanceFrame",
    "has_executed_script",
    "executePostConstructCommands",
    "activateChild",
    "deactivateChild",
    "skipChildren",
    "oldFrameIndex",
    "advance",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "has_script_executed",
    "caller",
    "shift",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "toString",
    "split",
    "tl",
    "line_width",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "_updateQueue",
    "_iUpdateQueueNext",
    "updateEntities",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\t//grid stuff - to tidy\n\tprivate cells:Array<Array<number>>;\n\t//TODO - generate this dyanamically based on num tris\n\tprivate devisions:number = 32;\n\tprivate conversionX:number;\n\tprivate conversionY:number;\n\tprivate minx:number;\n\tprivate maxx:number;\n\tprivate miny:number;\n\tprivate maxy:number;\n\n\tprivate getCell(x:number, y:number):number\n\t{\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\n\n\t\t//out of bounds\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\n\n\t\treturn  index_x + index_y * this.devisions;\n\t}\n\tprivate buildGrid():void\n\t{\n\t\t//calculate bounds, ideally via bounding box already computed\n\t\t//if not just loop through and generate min/max\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tthis.minx = Number.MAX_VALUE;\n\t\tthis.maxx = -Number.MAX_VALUE;\n\t\tthis.miny = Number.MAX_VALUE;\n\t\tthis.maxy = -Number.MAX_VALUE;\n\t\tfor(var k:number = 0; k < positions.length; k+=3)\n\t\t{\n\t\t\tvar x:number = positions[k];\n\t\t\tvar y:number = positions[k + 1];\n\n\t\t\tif(x < this.minx) this.minx = x;\n\t\t\tif(x > this.maxx) this.maxx = x;\n\t\t\tif(y < this.miny) this.miny = y;\n\t\t\tif(y > this.maxy) this.maxy = y;\n\t\t}\n\n\t\tvar width:number = this.maxx - this.minx;\n\t\tvar height:number = this.maxy - this.miny;\n\n\n\t\t//now we have bounds start creating grid cells and filling\n\t\tvar maxDevisions:number = 32;\n\t\tthis.devisions = Math.ceil(Math.sqrt(this.numVertices));\n\t\tthis.devisions = Math.min(this.devisions, maxDevisions);\n\t\tvar numCells:number = this.devisions * this.devisions;\n\t\tvar cellWidth:number = width/this.devisions;\n\t\tvar cellHeight:number = height/this.devisions;\n\n\t\tthis.conversionX = 1/cellWidth;\n\t\tthis.conversionY = 1/cellHeight;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tthis.cells = new Array<Array<number>>(numCells);\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//subtractions to push into positive space\n\t\t\tvar left:number = Math.min(ax, bx, cx)-this.minx;\n\t\t\tvar right:number = Math.max(ax, bx, cx)-this.minx;\n\t\t\tvar top:number = Math.min(ay, by, cy)-this.miny;\n\t\t\tvar bottom:number = Math.max(ay, by, cy)-this.miny;\n\n\t\t\tvar min_index_x:number = Math.floor(left * this.conversionX);\n\t\t\tvar min_index_y:number = Math.floor(top * this.conversionY);\n\n\t\t\tvar max_index_x:number = Math.floor(right * this.conversionX);\n\t\t\tvar max_index_y:number = Math.floor(bottom * this.conversionY);\n\n\n\t\t\tfor (var i : number = min_index_x; i <= max_index_x; i++)\n\t\t\t{\n\t\t\t\tfor (var j : number = min_index_y; j <= max_index_y; j++)\n\t\t\t\t{\n\t\t\t\t\tvar index:number = i + j * this.devisions;\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index];\n\t\t\t\t\tif(nodes == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnodes = new Array<number>();\n\t\t\t\t\t\tthis.cells[index] = nodes;\n\t\t\t\t\t}\n\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean {\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tvar curveDim:number = this.curves.dimensions;\n\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif(this.numVertices > 150){\n\n\n\t\t\tif (this.cells == null) {\n\t\t\t\tthis.buildGrid();\n\t\t\t}\n\t\t\tvar cell:number = this.getCell(x, y);\n\t\t\tif (cell == -1) return false;\n\n\t\t\tvar nodes:Array<number> = this.cells[cell];\n\t\t\tif (nodes == null) return false;\n\n\n\t\t\tfor (var k:number = 0; k < nodes.length; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot a\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot b\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot c\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t//brute force\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\n\t\t{\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable\n{\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tprivate _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean;\n\tpublic _pIsEntity:boolean;\n    public _iMaskID:number = -1;\n    public _iMasks:DisplayObject[] = null;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n    public _pColorTransform:ColorTransform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _globalColorTransformChanged:DisplayObjectEvent;\n    private _globalColorTransformDirty:boolean;\n    private _globalColorTransform:ColorTransform = new ColorTransform();\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\n    private _onColorTransformChangedDelegate:(event:Event) => void;\n    private _inheritColorTransform:boolean = false;\n\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n        this._inheritColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n\n    public get globalColorTransform():ColorTransform\n    {\n        if (this._globalColorTransformDirty)\n            this._updateGlobalColorTransform();\n\n        return this._globalColorTransform;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._pColorTransform.alphaMultiplier;\n    }\n\n    public set alpha(value:number)\n    {\n        this._pColorTransform.alphaMultiplier = value;\n    }\n\n    public get colorTransform()\n    {\n        return this._pColorTransform;\n    }\n\n    public set colorTransform(value:ColorTransform)\n    {\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\n        if (this._pColorTransform)\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\n\n\n        this._pSetColorTransform(value);\n\n        if (value)\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tthis._pivot.x = pivot.x;\n\t\tthis._pivot.y = pivot.y;\n\t\tthis._pivot.z = pivot.z;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = this._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = this._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = this._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone(newInstance:DisplayObject = null):DisplayObject\n\t{\n\t\tif (!newInstance)\n\t\t\tnewInstance = new DisplayObject();\n\n\t\tnewInstance.pivot = this.pivot;\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\n\t\tnewInstance.name = this.name;\n\n\t\tnewInstance._iMaskID = this._iMaskID;\n\t\tnewInstance._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\n\t\treturn newInstance;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis.x = dx;\n\t\tthis.y = dy;\n\t\tthis.z = dz;\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\tpublic reset_to_init_state():void\n\t{\n\t\tthis.visible=true;\n\t\tif(this._iMatrix3D)\n\t\t\tthis._iMatrix3D.identity();\n\t\tif(this.colorTransform)\n\t\t\tthis.colorTransform.clear();\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.x += x*len;\n\t\tthis.y += y*len;\n\t\tthis.z += z*len;\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis.x = this._pos.x;\n\t\tthis.y = this._pos.y;\n\t\tthis.z = this._pos.z;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 12; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis.x = val.rawData[12];\n\t\tthis.y = val.rawData[13];\n\t\tthis.z = val.rawData[14];\n\n\t\tthis._elementsDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n        if (this._pParent) {\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n        }\n\n\t\tthis._pParent = value;\n\n        if (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\n        this._invalidateGlobalColorTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\treturn;\n\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.queueDispatch(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\n\t\tif (!this._pivotZero)\n\t\t\tthis.invalidatePivot();\n\n\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n    _updateGlobalColorTransform()\n    {\n        if (this._inheritColorTransform && this._pParent) {\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\n            if (this._pColorTransform)\n                this._globalColorTransform.prepend(this._pColorTransform);\n        } else {\n            if (this._pColorTransform)\n                this._globalColorTransform.copyFrom(this._pColorTransform);\n            else\n                this._globalColorTransform.clear();\n        }\n\n        this._globalColorTransformDirty = false;\n    }\n\n    // this method is to bypass that TypeScript can't call super setters.\n    _pSetColorTransform(value:ColorTransform)\n    {\n        this._pColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n    _invalidateGlobalColorTransform()\n    {\n        this._globalColorTransformDirty = true;\n\n        if (!this._globalColorTransformChanged)\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\n\n        this.dispatchEvent(this._globalColorTransformChanged);\n    }\n\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n    private onColorTransformChanged(event:Event)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\tpublic _colorTransform:ColorTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import MovieClip                    = require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nclass Timeline\n{\n\n\tprivate _keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tprivate _keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tprivate _keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tprivate _keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\t// synched:\n\tprivate _frame_command_indices:ArrayBufferView;\n\tprivate _frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tprivate _command_index_stream:ArrayBufferView;\n\tprivate _command_length_stream:ArrayBufferView;\n\n\tprivate _add_child_stream:ArrayBufferView;\n\tprivate _remove_child_stream:ArrayBufferView;\n\tprivate _update_child_stream:ArrayBufferView;\n\n\tprivate _update_child_props_length_stream:ArrayBufferView;\n\tprivate _update_child_props_indices_stream:ArrayBufferView;\n\n\tprivate _property_index_stream:ArrayBufferView;\n\tprivate _property_type_stream:ArrayBufferView;\n\n\tprivate _properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tprivate _properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tprivate _properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tprivate _properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tprivate _properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tprivate _properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis._potentialPrototypes=[];\n\t\tthis._keyframe_indices=[];\n\t\tthis._labels={};\n\t\tthis._framescripts={};\n\t\tthis._framescripts_translated={};\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this._frame_command_indices==null)||(this._frame_recipe==null)||(this._keyframe_durations==null))\n\t\t\treturn;\n\t\tthis._keyframe_firstframes=[];\n\t\tthis._keyframe_constructframes=[];\n\t\tvar frame_cnt=0;\n\t\tvar ic=0;\n\t\tvar ic2=0;\n\t\tvar keyframe_cnt=0;\n\t\tvar last_construct_frame=0;\n\t\tfor(ic=0; ic<this.numKeyFrames; ic++){\n\t\t\tvar duration=this._keyframe_durations[(ic)];\n\n\t\t\tif((this._frame_recipe[ic] & 1) == 1)\n\t\t\t\tlast_construct_frame=keyframe_cnt;\n\n\t\t\tthis._keyframe_firstframes[keyframe_cnt]=frame_cnt;\n\t\t\tthis._keyframe_constructframes[keyframe_cnt++]=last_construct_frame;\n\n\t\t\tfor(ic2=0; ic2<duration; ic2++){\n\t\t\t\tthis._keyframe_indices[frame_cnt++]=ic;\n\t\t\t}\n\t\t}\n\t}\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis.translateScript(target_mc.adapter.classReplacements,this._framescripts[keyframe_idx], keyframe_idx);\n\t\t\t}\n\t\t\ttarget_mc.addScriptForExecution(this._framescripts[keyframe_idx]);\n\t\t}\n\t}\n\t// TODO: handle this in the exporter so it's safe!\n\tpublic translateScript(classReplacements, frame_script_in:string, keyframe_idx:number)\n\t{\n\t\tvar replaced = frame_script_in.replace(/(\\\\n|\\r)/g, \"\");\n\t\tvar replacementPreface = \"\";\n\t\tvar replacementPostface = \"\";\n\n\t\t// where \"this\" is a single word\n\t\t//replaced = replaced.replace(/\\bthis\\./, \"___scoped_this___.\");\n\n\t\tfor (var srcName in classReplacements) {\n\t\t\tvar dstName = classReplacements[srcName];\n\t\t\t// where class name is a single word\n\t\t\t//var regex = \"\\b\" + srcName + \"\\b\";\n\t\t\t//replaced = replaced.replace(new RegExp(regex, \"g\"), dstName);\n\n\t\t\t// store old references to stuff in a temporary var to be reset after script execution;\n\t\t\t// make sure a definition exists, even if it's undefined\n\t\t\treplacementPreface += \"var __OLD_\" + srcName + \" = typeof \" + srcName + \" == 'function'? \" + srcName + \" : undefined;\\n\";\n\t\t\treplacementPreface += srcName + \" = require(\\\"\" + dstName + \"\\\");\\n\";\n\t\t\treplacementPreface += \"function int(value) { return value | 0; }\\n\";\n\t\t\treplacementPostface += srcName + \" = __OLD_\" + srcName + \";\\n\";\n\t\t}\n\n\t\t// make sure we don't use \"this\", since Actionscript's \"this\" has the same scope rules as a variable\n\t\tvar str =   replacementPreface +\n\t\t\t\t//\"var ___scoped_this___ = this;\" +\n\t\t\t\t//\"with(___scoped_this___) { \\n\" +\n\t\t\treplaced +\n\t\t\t\t//\"}\\n\" +\n\t\t\treplacementPostface;\n\n\t\t//console.log(str);\n\n\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\ttry {\n\t\t\tthis._framescripts[keyframe_idx] = new Function(str);\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\tconsole.log(\"Syntax error in script:\\n\", str);\n\t\t\tconsole.log(err.message);\n\t\t\tthrow err;\n\t\t}\n\t}\n\tpublic set keyframe_durations(value:ArrayBufferView)\n\t{\n\t\tthis._keyframe_durations=value;\n\t}\n\tpublic set frame_command_indices(value:ArrayBufferView)\n\t{\n\t\tthis._frame_command_indices=value;\n\t}\n\tpublic set frame_recipe(value:ArrayBufferView)\n\t{\n\t\tthis._frame_recipe=value;\n\t}\n\n\n\tpublic set command_index_stream(value:ArrayBufferView)\n\t{\n\t\tthis._command_index_stream=value;\n\t}\n\tpublic set command_length_stream(value:ArrayBufferView)\n\t{\n\t\tthis._command_length_stream=value;\n\t}\n\n\n\tpublic set add_child_stream(value:ArrayBufferView)\n\t{\n\t\tthis._add_child_stream=value;\n\t}\n\tpublic set remove_child_stream(value:ArrayBufferView)\n\t{\n\t\tthis._remove_child_stream=value;\n\t}\n\tpublic set update_child_stream(value:ArrayBufferView)\n\t{\n\t\tthis._update_child_stream=value;\n\t}\n\n\tpublic set update_child_props_indices_stream(value:ArrayBufferView)\n\t{\n\t\tthis._update_child_props_indices_stream=value;\n\t}\n\tpublic set update_child_props_length_stream(value:ArrayBufferView)\n\t{\n\t\tthis._update_child_props_length_stream=value;\n\t}\n\n\tpublic set property_index_stream(value:ArrayBufferView)\n\t{\n\t\tthis._property_index_stream=value;\n\t}\n\tpublic set property_type_stream(value:ArrayBufferView)\n\t{\n\t\tthis._property_type_stream=value;\n\t}\n\n\tpublic set properties_stream_f32_mtx_all(value:Float32Array)\n\t{\n\t\tthis._properties_stream_f32_mtx_all=value;\n\t}\n\tpublic set properties_stream_f32_mtx_scale_rot(value:Float32Array)\n\t{\n\t\tthis._properties_stream_f32_mtx_scale_rot=value;\n\t}\n\tpublic set properties_stream_f32_mtx_pos(value:Float32Array)\n\t{\n\t\tthis._properties_stream_f32_mtx_pos=value;\n\t}\n\tpublic set properties_stream_f32_ct(value:Float32Array)\n\t{\n\t\tthis._properties_stream_f32_ct=value;\n\t}\n\tpublic set properties_stream_int(value:ArrayBufferView)\n\t{\n\t\tthis._properties_stream_int=value;\n\t}\n\tpublic set properties_stream_strings(value:Array<string>)\n\t{\n\t\tthis._properties_stream_strings=value;\n\t}\n\n\tpublic set keyframe_indices(value:Array<number>)\n\t{\n\t\tthis._keyframe_indices=value;\n\t}\n\tpublic set keyframe_firstframes(value:Array<number>)\n\t{\n\t\tthis._keyframe_firstframes=value;\n\t}\n\tpublic set keyframe_constructframes(value:Array<number>)\n\t{\n\t\tthis._keyframe_constructframes=value;\n\t}\n\n\tpublic numFrames():number\n\t{\n\t\treturn this._keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this._keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChilds() : Array<DisplayObject>\n\t{\n\t\treturn this._potentialPrototypes;\n\t}\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id].clone();\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index>=0)\n\t\t\ttarget_mc.currentFrameIndex=this._keyframe_firstframes[key_frame_index];\n\n\t}\n\n\n\tpublic gotoFrame(target_mc:MovieClip, value : number)\n\t{\n\n\t\t//console.log(\"gotoframe\");\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this._keyframe_indices[value];\n\n\t\tvar firstframe=this._keyframe_firstframes[target_keyframe_idx];\n\t\tif(frameIndex==value){\n\t\t\t//we are already on this frame.\n\t\t\treturn;\n\t\t}\n\t\t//console.log(\"gotoframe 2\");\n\t\tif(firstframe==value){\n\t\t\t//frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx);\n\t\t}\n\n\t\tif(current_keyframe_idx==target_keyframe_idx) {\n\t\t\t// already constructed\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number=this._keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number=break_frame_idx;\n\t\t// in case we jump fporward, but not jump a gap, we start at current_keyframe_idx +1\n\t\tif((jump_forward)&&(!jump_gap)){\n\t\t\tstart_construct_idx=current_keyframe_idx+1;\n\t\t}\n\t\tvar removeAll:boolean=false;\n\t\tvar removeAllFromScript:boolean=false;\n\t\t// if we jump backwards, or if we jump a gap, we want to remove everything from the stage.\n\t\t// if we jump a gap, we also want to free everything from script access.\n\t\tif((!jump_forward)||(jump_gap)){\n\t\t\tremoveAll=true;\n\t\t\tif(jump_gap){\n\t\t\t\tremoveAllFromScript;\n\t\t\t}\n\t\t}\n\n\t\tvar previous_sessions:Array<number> = [];\t// store a list of all previous active sessionIDs\n\t\tvar previous_mcs:Array<MovieClip> = [];\t// store a list of all previous active Movieclips\n\t\tvar session_cnt:number=0;\n\t\tvar prev_script_cnt:number=0;\n\t\tvar i:number=0;\n\t\tvar k:number=0;\n\t\tfor (i=target_mc.numChildren-1; i>=0; i--) {\n\t\t\t//else{\n\t\t\tvar child:DisplayObject = target_mc.getChildAt(i);\n\n\t\t\t// if we jump back, or if we do not jump a gap, we need to collect all sessionIDs, in order to know what to reset\n\t\t\tif((!jump_forward)||(!jump_gap)){\n\t\t\t\tprevious_sessions[session_cnt++] = child[\"__sessionID\"];\n\t\t\t}\n\t\t\tif (removeAll) {\n\t\t\t\tif(removeAllFromScript){\n\t\t\t\t\ttarget_mc.adapter.unregisterScriptObject(child);\n\t\t\t\t\tif(child.isAsset(MovieClip) && (<MovieClip>child).adapter)\n\t\t\t\t\t\t(<MovieClip>child).adapter.freeFromScript();\n\n\t\t\t\t}\n\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(child.isAsset(MovieClip))\n\t\t\t\t\tprevious_mcs[prev_script_cnt++] = <MovieClip>child;\n\t\t\t}\n\t\t}\n\n\t\t//  pass1: only apply add/remove commands.\n\t\tvar update_indices:Array<number>=[];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt=0;\n\t\tfor(k=start_construct_idx;k<=target_keyframe_idx; k++){\n\n\t\t\tvar frame_command_idx:number=this._frame_command_indices[k];\n\t\t\tvar frame_recipe:number=this._frame_recipe[k];\n\n\t\t\tif ((frame_recipe & 2)==2)\n\t\t\t\tthis.remove_childs(target_mc, this._command_index_stream[frame_command_idx], this._command_length_stream[frame_command_idx++] );\n\n\t\t\tif((frame_recipe & 4)==4)\n\t\t\t\tthis.add_childs(target_mc, this._command_index_stream[frame_command_idx], this._command_length_stream[frame_command_idx++] );\n\n\t\t\tif((frame_recipe & 8)==8)\n\t\t\t\tupdate_indices[update_cnt++]=frame_command_idx;// execute update command later\n\t\t}\n\n\t\tsession_cnt=0;\n\t\tvar target_sessions:Array<number> = [];\n\t\t// between passes:\n\t\t// if a child has a sessionID that was not present in previous frame, it must be reset\n\t\tfor (i=0; i<target_mc.numChildren; ++i) {\n\t\t\tvar child:DisplayObject = target_mc.getChildAt(i);\n\t\t\ttarget_sessions[session_cnt++] = child[\"__sessionID\"];\n\t\t\tif (previous_sessions.indexOf(child[\"__sessionID\"]) == -1) {\n\t\t\t\tchild.reset_to_init_state();\n\t\t\t\tif (child.isAsset(MovieClip))\n\t\t\t\t\t(<MovieClip>child).reset();\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(!jump_forward) {\n\t\t\t\t\tvar doit:boolean = true;\n\t\t\t\t\tif (child.isAsset(MovieClip)) {\n\t\t\t\t\t\tif ((<MovieClip>child).adapter && (<MovieClip>child).adapter.isBlockedByScript())\n\t\t\t\t\t\t\tdoit = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (doit)\n\t\t\t\t\t\tchild.reset_to_init_state();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// all objects that was present on previous frame, but not on current need to be unregistered\n\t\tfor (i=0; i<previous_mcs.length; ++i) {\n\t\t\tif(target_sessions.indexOf(previous_mcs[i][\"__sessionID\"])==-1){\n\t\t\t\tprevious_mcs[i].adapter.freeFromScript();\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(previous_mcs[i]);\n\t\t\t}\n\t\t}\n\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tvar frame_command_idx:number=0;\n\t\tfor(k=0;k<update_indices.length; k++){\n\t\t\tframe_command_idx=update_indices[k];\n\t\t\tthis.update_childs(target_mc, this._command_index_stream[frame_command_idx], this._command_length_stream[frame_command_idx] );\n\t\t}\n\t\ttarget_mc.constructedKeyFrameIndex=target_keyframe_idx;\n\t}\n\n\n\tpublic constructNextFrame(target_mc:MovieClip)\n\t{\n\n\t\t//console.log(\"next frame\");\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\n\t\tvar new_keyFrameIndex:number = this._keyframe_indices[frameIndex];\n\n\t\tif(constructed_keyFrameIndex!=new_keyFrameIndex){\n\t\t\ttarget_mc.constructedKeyFrameIndex=new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx=this._frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe=this._frame_recipe[new_keyFrameIndex];\n\n\t\t\tif((frame_recipe & 1)==1) {\n\t\t\t\tvar i:number = target_mc.numChildren;\n\t\t\t\twhile (i--)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t\t} else if ((frame_recipe & 2)==2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, this._command_index_stream[frame_command_idx], this._command_length_stream[frame_command_idx++] );\n\t\t\t}\n\n\t\t\tif((frame_recipe & 4)==4)\n\t\t\t\tthis.add_childs_continous(target_mc, this._command_index_stream[frame_command_idx], this._command_length_stream[frame_command_idx++] );\n\n\t\t\tif((frame_recipe & 8)==8)\n\t\t\t\tthis.update_childs(target_mc, this._command_index_stream[frame_command_idx], this._command_length_stream[frame_command_idx++] );\n\n\t\t}\n\t\tif(this._keyframe_firstframes[new_keyFrameIndex]==frameIndex){\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex);\n\t\t}\n\n\t}\n\n\n\tpublic remove_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tsourceMovieClip.removeChildAtDepth(this._remove_child_stream[start_index+i] - 16383);\n\t}\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++) {\n\t\t\tvar target:DisplayObject = sourceMovieClip.removeChildAtDepth(this._remove_child_stream[start_index+i] - 16383);\n\n\t\t\tsourceMovieClip.adapter.unregisterScriptObject(target);\n\t\t\tif(target.isAsset(MovieClip) && (<MovieClip> target).adapter)\n\t\t\t\t(<MovieClip> target).adapter.freeFromScript();\n\t\t}\n\t}\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++){\n\t\t\tvar target = sourceMovieClip.getPotentialChildInstance(this._add_child_stream[(start_index*2)+(i*2)]);\n\t\t\ttarget[\"__sessionID\"] = start_index + i;\n\t\t\tsourceMovieClip.addChildAtDepth(target, this._add_child_stream[(start_index*2)+(i*2)+1] - 16383);\n\t\t}\n\t}\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++){\n\t\t\tvar target = sourceMovieClip.getPotentialChildInstance(this._add_child_stream[(start_index*2)+(i*2)]);\n\t\t\ttarget[\"__sessionID\"] = start_index + i;\n\n\t\t\tif(target.isAsset(MovieClip)) {\n\t\t\t\tif ((<MovieClip>target).adapter && !(<MovieClip>target).adapter.isBlockedByScript()) {\n\t\t\t\t\t(<MovieClip>target).reset();\n\t\t\t\t\ttarget.reset_to_init_state();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttarget.reset_to_init_state();\n\t\t\t}\n\n\t\t\tsourceMovieClip.addChildAtDepth(target, this._add_child_stream[(start_index*2)+(i*2)+1] - 16383);\n\t\t}\n\t}\n\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\n\t\t//console.log(\"update childs\");\n\t\tvar i:number;\n\t\tvar pc:number;\n\t\tvar props_cnt:number;\n\t\tvar props_start_idx:number;\n\t\tvar value_start_index:number;\n\t\tvar props_type:number;\n\t\tvar doit:boolean;\n\t\t//console.log(\"sourceMovieClip = \"+sourceMovieClip.name+\" objects to update = \"+len);\n\t\tfor(i=0; i<len;i++) {\n\t\t\tvar childID:number=this._update_child_stream[start_index+i];\n\t\t\t//console.log(\"childID = \"+childID);\n\t\t\tvar target = sourceMovieClip.getPotentialChildInstance(childID);\n\t\t\tif (target.parent == sourceMovieClip) {\n\t\t\t\tdoit = true;\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tif (target.isAsset(MovieClip)) {\n\t\t\t\t\tif ((<MovieClip>target).adapter.isBlockedByScript()) {\n\t\t\t\t\t\tdoit = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprops_start_idx=this._update_child_props_indices_stream[start_index+i];\n\t\t\t\tprops_cnt=this._update_child_props_length_stream[start_index+i];\n\n\t\t\t\t//console.log(\"\tprops_cnt = \"+props_cnt);\n\t\t\t\tfor(pc=0; pc<props_cnt;pc++) {\n\t\t\t\t\tprops_type = this._property_type_stream[props_start_idx+pc];\n\t\t\t\t\tvalue_start_index = this._property_index_stream[props_start_idx+pc];\n\t\t\t\t\t//console.log(\"\tprops_id = \"+props_id);\n\t\t\t\t\t//console.log(\"\tvalue_start_index = \"+value_start_index);\n\t\t\t\t\tswitch(props_type){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target[\"_iMatrix3D\"];\n\t\t\t\t\t\t\t\tif (new_matrix == null) {\n\t\t\t\t\t\t\t\t\tnew_matrix = new Matrix3D();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this._properties_stream_f32_mtx_all[(value_start_index * 6)];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this._properties_stream_f32_mtx_all[(value_start_index * 6) + 1];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this._properties_stream_f32_mtx_all[(value_start_index * 6) + 2];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this._properties_stream_f32_mtx_all[(value_start_index * 6) + 3];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this._properties_stream_f32_mtx_all[(value_start_index * 6) + 4];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this._properties_stream_f32_mtx_all[(value_start_index * 6) + 5];\n\t\t\t\t\t\t\t\ttarget[\"_iMatrix3D\"] = new_matrix;\n\t\t\t\t\t\t\t\t//console.log(\"displaytransform  \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 2:// colormatrix\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target[\"colorTransform\"];\n\t\t\t\t\t\t\t\tif (new_ct == null) {\n\t\t\t\t\t\t\t\t\tnew_ct = new ColorTransform();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this._properties_stream_f32_ct[(value_start_index * 8)];\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this._properties_stream_f32_ct[(value_start_index * 8) + 1];\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this._properties_stream_f32_ct[(value_start_index * 8) + 2];\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this._properties_stream_f32_ct[(value_start_index * 8) + 3];\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this._properties_stream_f32_ct[(value_start_index * 8) + 4];\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this._properties_stream_f32_ct[(value_start_index * 8) + 5];\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this._properties_stream_f32_ct[(value_start_index * 8) + 6];\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this._properties_stream_f32_ct[(value_start_index * 8) + 7];\n\t\t\t\t\t\t\t\ttarget[\"colorTransform\"] = new_ct;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 3:// masks\n\t\t\t\t\t\t\tvar mask_length:number=this._properties_stream_int[value_start_index];\n\t\t\t\t\t\t\tvar firstMaskID:number=this._properties_stream_int[value_start_index+1] -1;\n\t\t\t\t\t\t\t//console.log(\"mask length \"+mask_length);\n\t\t\t\t\t\t\tif ((mask_length == 1) && (firstMaskID == -1)) {\n\t\t\t\t\t\t\t\ttarget[\"_iMaskID\"] = childID;\n\t\t\t\t\t\t\t\t//console.log(\"set masks = \"+childID);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tvar mc:number=0;\n\t\t\t\t\t\t\t\tvar mc2:number=0;\n\t\t\t\t\t\t\t\tvar masks = new Array<DisplayObject>();\n\t\t\t\t\t\t\t\tfor(mc=1; mc<=mask_length; mc++){\n\t\t\t\t\t\t\t\t\tmasks[mc2] = sourceMovieClip.getPotentialChildInstance(this._properties_stream_int[value_start_index+mc]-1);\n\t\t\t\t\t\t\t\t\t(<DisplayObject>masks[mc2]).mouseEnabled=false;\n\t\t\t\t\t\t\t\t\tif(masks[mc2].isAsset(MovieClip))\n\t\t\t\t\t\t\t\t\t\t(<MovieClip>masks[mc2]).mouseChildren=false;\n\t\t\t\t\t\t\t\t\tmc2++;\n\t\t\t\t\t\t\t\t\t//console.log(\"set mask2 = \"+this._update_props_ints[value_start_index+mc]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttarget._iMasks = masks;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\n\t\t\t\t\t\t\ttarget.name = this._properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t\t\t\t\t\t\t//console.log(\"registered object = \"+target.name);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 5:// instance name button instance\n\t\t\t\t\t\t\ttarget.name = this._properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t\t\t\t\t\t\t//console.log(\"registered button = \"+target.name);\n\t\t\t\t\t\t\t(<MovieClip>target).makeButton();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 6://visible\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tif (value_start_index == 0)\n\t\t\t\t\t\t\t\t\ttarget.visible = false;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\ttarget.visible = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 11:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target[\"_iMatrix3D\"];\n\t\t\t\t\t\t\t\tif (new_matrix == null) {\n\t\t\t\t\t\t\t\t\tnew_matrix = new Matrix3D();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this._properties_stream_f32_mtx_scale_rot[(value_start_index * 4)];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this._properties_stream_f32_mtx_scale_rot[(value_start_index * 4) + 1];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this._properties_stream_f32_mtx_scale_rot[(value_start_index * 4) + 2];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this._properties_stream_f32_mtx_scale_rot[(value_start_index * 4) + 3];\n\t\t\t\t\t\t\t\ttarget[\"_iMatrix3D\"] = new_matrix;\n\t\t\t\t\t\t\t\t//console.log(\"displaytransform  rot/scale\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 12:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target[\"_iMatrix3D\"];\n\t\t\t\t\t\t\t\tif (new_matrix == null) {\n\t\t\t\t\t\t\t\t\tnew_matrix = new Matrix3D();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this._properties_stream_f32_mtx_pos[(value_start_index * 2)];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this._properties_stream_f32_mtx_pos[(value_start_index * 2) + 1];\n\t\t\t\t\t\t\t\ttarget[\"_iMatrix3D\"] = new_matrix;\n\n\t\t\t\t\t\t\t\t//console.log(\"displaytransform2  pos \"+this._properties_stream_f32_mtx_pos[(value_start_index*2)]+\" \"+this._properties_stream_f32_mtx_pos[(value_start_index*2)+1]);\n\t\t\t\t\t\t\t\t//console.log(\"displaytransform  pos \"+new_matrix.rawData[4]+\" \"+new_matrix.rawData[5]);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\t//else\n\t\t\t\t//\tconsole.log(\"skip kid 2\");\n\t\t\t}\n\t\t\t//else\n\t\t\t//\tconsole.log(\"skip kid\");\n\t\t}\n\n\t}\n}\n\nexport = Timeline;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depths:Array<number> = new Array<number>();\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\t\t\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._depths.length;\n\t\tvar index:number = len;\n\t\t\n\t\twhile (index--)\n\t\t\tif (this._depths[index] < depth)\n\t\t\t\tbreak;\n\n\t\tindex++;\n\n\t\tif (index < len) {\n\t\t\t//if replace flag & depths match current depth, remove the existing child\n\t\t\tif (this._depths[index] == depth) {\n\t\t\t\tif (replace) {\n\t\t\t\t\tthis.removeChildAt(index);\n\t\t\t\t} else {\n\t\t\t\t\t//update depths if there are children higher than added child\n\t\t\t\t\tfor (var i:number = index; i < len; i++)\n\t\t\t\t\t\tthis._depths[i] = this._depths[i] + 1;\n\n\t\t\t\t\tthis._nextHighestDepth++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._children.splice(index, 0, child);\n\t\t\tthis._depths.splice(index, 0, depth);\n\t\t} else {\n\t\t\tthis._children.push(child);\n\t\t\tthis._depths.push(depth);\n\n\t\t\tthis._nextHighestDepth = depth + 1;\n\t\t}\n\n\t\treturn child;\n\t}\n\t\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._depths[index] : this._nextHighestDepth, false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone(newInstance:DisplayObjectContainer = null):DisplayObject\n\t{\n\t\tnewInstance = <DisplayObjectContainer> super.clone(newInstance || new DisplayObjectContainer());\n\n\t\tnewInstance.partition = this.partition;\n\t\tnewInstance.mouseEnabled = this.mouseEnabled;\n\t\tnewInstance.mouseChildren = this.mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\n\t\treturn newInstance;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\t\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.getChildAt(this.getDepthIndexInternal(depth));\n\t}\n\t\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getChildDepth(child:DisplayObject):number /*int*/\n\t{\n\t\treturn this._depths[this.getChildIndex(child)];\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\t\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\t\t\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._depths[index1];\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis._depths[index1] = this._depths[index2];\n\t\tthis._children[index1] = this._children[index2];\n\n\t\tthis._depths[index2] = depth;\n\t\tthis._children[index2] = child;\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar min:number;\n\t\tvar max:number;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\t\tthis._depths.splice(index, 1);\n\n\t\t//if child is the last in array, update next highest depth\n\t\tif (index == this._children.length)\n\t\t\tthis._nextHighestDepth = this._depths[index - 1] + 1;\n\n\t\treturn child;\n\t}\n\t\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tvar index:number = this._depths.indexOf(depth);\n\n\t\tif (index == -1)\n\t\t\tthrow new ArgumentError(\"No child at specified depth\");\n\n\t\treturn index;\n\t}\n\t\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this._iMaskID!==-1 && !masksFlag)return;\n\t\tif(this.visible==false)return;\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\n\t\t{\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\n\t\t\tif(childHit) {\n\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\n\t\t\t\tif(all_masks){\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\tif(mask_child.parent){\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\n\t\t\t\t\t\t\tif(childHit) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\tprivate _partition:Partition;\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._partition = new Partition(new NodeBase());\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = this._partition;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterCamera(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterCamera(this);\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterDirectionalLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterDirectionalLight(this);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterLightProbe(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterLightProbe(this);\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._pColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tsuper._pSetColorTransform(value);\n\t}\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(null, null);\n\n        this._iCopyToMesh(clone);\n\n\t\treturn clone;\n\t}\n\n    public _iCopyToMesh(clone:Mesh):void\n    {\n        clone.geometry = this._geometry;\n        clone.material = this._material;\n        clone._iMatrix3D = this._iMatrix3D;\n        clone.pivot = this.pivot;\n        clone.partition = this.partition;\n        clone.boundsType = this.boundsType;\n\n\n        clone.name = this.name;\n        clone.castsShadows = this.castsShadows;\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\n        clone.mouseEnabled = this.mouseEnabled;\n        clone.mouseChildren = this.mouseChildren;\n        //this is of course no proper cloning\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n        clone.extra = this.extra;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n        len = this.numChildren;\n        for (i = 0; i < len; ++i)\n            clone.addChild(this.getChildAt(i).clone());\n\n        if (this._animator)\n            clone.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\n\t\t\tif (this.numChildren) {\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\n\t\t\t} else {\n\t\t\t\tminX = maxX = boundingPositions[i];\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\n\t\t\t\t\tminZ = maxZ = 0;\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < tmp_minZ)\n\t\t\t\t\t\ttmp_minZ = p;\n\t\t\t\t\telse if (p > tmp_maxZ)\n\t\t\t\t\t\ttmp_maxZ = p;\n\t\t\t\t}\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\n\t\t\t\t\tminZ = tmp_minZ;\n\t\t\t\t\tmaxZ = tmp_maxZ;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\t// if this is a mask, directly return false\n\t\tif(this._iMaskID!==-1 && !masksFlag)return false;\n\n\t\t// if this is invisible, all children should be invisible too.\n\t\t// todo: is the above statement correct for awayjs visible-property ?\n\t\tif(this.visible==false)return false;\n\n\t\t// from this point out, we can not return false, without checking collision of childs.\n\t\t\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\n\n\t\tif(this.geometry) {\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\n\t\t\t\tif (!shapeFlag)\n\t\t\t\t\treturn true;\n\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\n\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\n\t\t\t\t\t\tif (all_masks) {\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\n\t\t\t\t\t\t\tif (all_hir_masks){\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar hit:boolean = false;\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\n\t\tif(hit)\treturn true;\n\n\t\treturn false;\n\t}\n}\n\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\n\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\nimport SceneEvent = require(\"awayjs-display/lib/events/SceneEvent\");\n\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean;\n    private _onMouseOver:Function;\n    private _onMouseOut:Function;\n    private _onMouseDown:Function;\n    private _onMouseUp:Function;\n\n    private _time:number;// the current time inside the animation\n    private _currentFrameIndex:number;// the current frame\n    private _constructedKeyFrameIndex:number;// the current index of the current active frame\n\n    private _fps:number;// we use ms internally, but have fps, so user can set time by frame\n    private _isPlaying:boolean;// false if paused or stopped\n    private _loop:boolean = true;\n\n    // not sure if needed\n    private _enterFrame:Event;\n    private _skipAdvance : boolean;\n    private _isInit : boolean;\n\n    private _potentialInstances:Array<DisplayObject>;\n    private _framescripts_to_execute:Array<Function>;\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor()\n    {\n        super();\n        this._potentialInstances = [];\n        this._currentFrameIndex = -1;\n        this._constructedKeyFrameIndex = -1;\n        this._isInit=true;\n        this._framescripts_to_execute=[];\n        this._isPlaying = true; // auto-play\n        this._isButton=false;\n\n        this._fps = 30;\n        this._time = 0;\n        this._enterFrame = new Event(Event.ENTER_FRAME);\n        this.inheritColorTransform = true;\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n        var i:number=0;\n        var potential_child_length:number=value.getPotentialChilds().length;\n        for(i=0; i<potential_child_length; i++){\n            this._potentialInstances[i]=null;\n        }\n    }\n    public get loop()\n    {\n        return this._loop;\n    }\n\n    public set loop(value:boolean)\n    {\n        this._loop = value;\n    }\n\n    public get numFrames() : number\n    {\n        return this.timeline.numFrames();\n    }\n\n    public jumpToLabel(label:string) : void\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this.timeline.jumpToLabel(this, label);\n    }\n\n    public get currentFrameIndex() : number\n    {\n        return this._currentFrameIndex;\n    }\n    public get constructedKeyFrameIndex() : number\n    {\n        return this._constructedKeyFrameIndex;\n    }\n\n    public set constructedKeyFrameIndex(value : number)\n    {\n        this._constructedKeyFrameIndex = value;\n    }\n\n    public reset():void\n    {\n        //if(this.adapter && this.adapter.isBlockedByScript()){\n        this._framescripts_to_execute=[];\n        this._isPlaying = true;\n        this._time = 0;\n        this._currentFrameIndex = -1;\n        this._constructedKeyFrameIndex = -1;\n        var i:number=this.numChildren;\n        while (i--)\n            this.removeChildAt(i);\n\n        // force reset all potential childs on timeline.\n        for (var key in this._potentialInstances) {\n            if (this._potentialInstances[key]) {\n                if (this._potentialInstances[key].isAsset(MovieClip))\n                    (<MovieClip>this._potentialInstances[key]).reset();\n            }\n        }\n\n        if(this.parent) {\n            this._currentFrameIndex = 0;\n            this.timeline.constructNextFrame(this);\n            this._skipAdvance=true;\n        }\n//___scoped_this___.dennis.mov.Man.body.reach.gotoAndPlay(\"call\");\n        // i was thinking we might need to reset all children, but it makes stuff worse\n        /*\n        var i:number=this.numChildren;\n        while (i--) {\n            var child = this.getChildAt(i);\n            if (child.isAsset(MovieClip))\n                (<MovieClip>child).reset();\n        }\n        */\n        //this.advanceChildren();\n\n    }\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public set currentFrameIndex(value : number)\n    {\n        if(this._timeline) {\n            value = Math.floor(value);\n            if (value < 0)\n                value = 0;\n            else if (value >= this.timeline.numFrames())\n                value = this.timeline.numFrames() - 1;\n\n            this._skipAdvance = true;\n            //this._time = 0;\n\n            this.timeline.gotoFrame(this, value);\n\n            this._currentFrameIndex = value;\n        }\n    }\n\n    public makeButton()\n    {\n        this._isButton=true;\n        this.stop();\n\n        this._onMouseOver = function(evt:MouseEvent) {(<MovieClip>evt.target).currentFrameIndex = 1; };\n        this._onMouseOut = function(evt:MouseEvent) { (<MovieClip>evt.target).currentFrameIndex = 0; };\n        this._onMouseDown = function(evt:MouseEvent) { (<MovieClip>evt.target).currentFrameIndex = 2; };\n        this._onMouseUp = function(evt:MouseEvent) { (<MovieClip>evt.target).currentFrameIndex = this.currentFrameIndex == 0? 0 : 1; };\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListener()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //if (child.name) console.log(\"adding child \" + child.name + \" at frame \" + this._currentFrameIndex);\n        child.inheritColorTransform = true;\n        super.addChildAtDepth(child, depth, replace);\n\n        if(child.isAsset(MovieClip)){\n            if((<MovieClip>child).timeline)\n            {\n                if ((<MovieClip>child).currentFrameIndex == -1) {\n                    (<MovieClip>child).reset();\n                }\n            }\n        }\n\n        return child;\n    }\n\n    public get fps():number\n    {\n        return this._fps;\n    }\n\n    public set fps(newFps:number)\n    {\n        this._fps = newFps;\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update(timeDelta:number)\n    {\n        //this.logHierarchy();\n        // TODO: Implement proper elastic racetrack logic\n        var frameMarker:number = Math.floor(1000/this._fps);\n\n        // right now, just advance frame once time marker has been reached (only allow for one frame advance per-update)\n        this._time += Math.min(timeDelta, frameMarker);\n\n        if (this._time >= frameMarker) {\n            this._time = 0;\n            this.advanceFrame();\n            //console.log(\"update \"+this._currentFrameIndex);\n            //console.log(\"update key \"+this._constructedKeyFrameIndex);\n\n            this.dispatchEvent(this._enterFrame);\n            var has_executed_script:boolean=true;\n            while(has_executed_script)\n                has_executed_script=this.executePostConstructCommands();\n\n        }\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id]) {\n            this._potentialInstances[id] = this.timeline.getPotentialChildInstance(id);\n        }\n\n        return this._potentialInstances[id];\n    }\n\n    public addScriptForExecution(value:Function)\n    {\n        this._framescripts_to_execute.push(value);\n    }\n    public activateChild(id:number)\n    {\n        this.addChild(this.getPotentialChildInstance(id));\n    }\n\n    public deactivateChild(id:number)\n    {\n        this.removeChild(this._potentialInstances[id]);\n    }\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone(newInstance:MovieClip = null) : DisplayObject\n    {\n        newInstance = <MovieClip> super.clone(newInstance || new MovieClip());\n\n        newInstance.timeline = this.timeline;\n\n        newInstance._fps = this._fps;\n        newInstance._loop = this._loop;\n\n        return newInstance;\n    }\n\n\n    public advanceFrame(skipChildren:boolean = false)\n    {\n        if(this.timeline) {\n            var i;\n            var oldFrameIndex = this._currentFrameIndex;\n            var advance = (this._isPlaying && !this._skipAdvance) || oldFrameIndex == -1;\n            if (advance && oldFrameIndex == this.timeline.numFrames() - 1 && !this._loop) {\n                advance = false;\n            }\n            if (advance && oldFrameIndex == 0 && this.timeline.numFrames() == 1) {\n                //console.log(\"one frame clip\");\n                this._currentFrameIndex = 0;\n                advance = false;\n            }\n            if (advance) {\n                //console.log(\"advance\");\n                ++this._currentFrameIndex;\n                if (this._currentFrameIndex == this.timeline.numFrames()) {\n                    // looping - jump to first frame.\n                    this.currentFrameIndex=0;\n                }\n                else if (oldFrameIndex != this._currentFrameIndex){\n                    // not looping - construct next frame\n                    this.timeline.constructNextFrame(this);\n                }\n            }\n\n            if (!skipChildren)\n                this.advanceChildren();\n\n        }\n        this._skipAdvance = false;\n    }\n\n    private advanceChildren()\n    {\n        var len = this.numChildren;\n        for (var i = 0; i <  len; ++i) {\n            var child = this.getChildAt(i);\n            if (child instanceof MovieClip)\n                (<MovieClip>child).advanceFrame();\n        }\n    }\n\n\n\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this.numChildren;\n        for (var i = 0; i < len; i++) {\n            var child = this.getChildAt(i);\n\n            if (child instanceof MovieClip)\n                (<MovieClip>child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target._iMaskID;\n        console.log(str);\n    }\n\n    executePostConstructCommands():boolean\n    {\n\n        // a script ,might call gotoAndStop() / gotoAndPlay() on itself or on other mc\n        // this might result in more script that should be executed.\n        // each mc provides a list of index to script that needs postconstructing.\n        // in this function, we postcontruct all those scripts\n        var has_script_executed:boolean=false;\n        if(this.timeline) {\n            if(this._framescripts_to_execute.length>0){\n                has_script_executed=true;\n                var caller = this.adapter? this.adapter : this;\n\n                try {\n                    this._framescripts_to_execute[0].call(caller);\n                }\n                catch(err)\n                {\n                    console.log(\"Script error in \" + this.name + \"\\n\", this._framescripts_to_execute[0]);\n                    console.log(err.message);\n                    throw err;\n                }\n                this._framescripts_to_execute.shift();\n            }\n        }\n\n        var i;\n        var len:number = this.numChildren-1;\n        for (i = len; i >=0; --i) {\n            var child = this.getChildAt(i);\n            if (child.isAsset(MovieClip)) {\n                if ((<MovieClip>child).executePostConstructCommands()) {\n                    has_script_executed = true;\n                }\n            }\n        }\n        return has_script_executed;\n    }\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterPointLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterPointLight(this);\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterSkybox(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterSkybox(this);\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\n\t\tif(this._textFormat==null)\n\t\t\treturn;\n\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._text==\"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar y_offset:number=0;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\t\t\tvar line_width:number=0;\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t}\n\t\t\t\tfont_chars.push(this_char);\n\t\t\t}\n\t\t\tvar x_offset:number=0;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-line_width);\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone() : DisplayObject\n    {\n        var clone = new TextField();\n        this._iCopyToTextField(clone);\n        return clone;\n    }\n\n    public _iCopyToTextField(clone:TextField):void\n    {\n\t\tclone.geometry = new Geometry();\n\t\t//clone.material = this._material;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.boundsType = this.boundsType;\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\t//var len:number = this._subMeshes.length;\n\t\t//for (var i:number = 0; i < len; ++i)\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tvar len = this.numChildren;\n\t\tvar i;\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tclone.addChild(this.getChildAt(i).clone());\n\n\t\t//if (this._animator)\n\t\t//\tclone.animator = this._animator.clone();\n\t\tclone.textWidth=this.textWidth;\n\t\tclone.textHeight=this.textHeight;\n       \tclone.textFormat = this._textFormat;\n        //clone.textColor = clone.textColor;\n       \tclone.text = this._text;\n    }\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tpublic static id:string = \"cameraNode\";\n\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static id:string = \"directionalLightNode\";\n\n\tprivate _directionalLight:IEntity;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\tpublic static id:string = \"entityNode\";\n\n\tprivate _pool:EntityNodePool;\n\tpublic _entity:IEntity;\n\tprivate _partition:Partition;\n\tpublic _bounds:BoundingVolumeBase;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\n\t{\n\t\tsuper();\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis._iNumEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get entity():IEntity\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:IEntity;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\tprivate _cameraNodePool:EntityNodePool;\n\tprivate _directionalLightNodePool:EntityNodePool;\n\tprivate _entityNodePool:EntityNodePool;\n\tprivate _lightProbeNodePool:EntityNodePool;\n\tprivate _pointLightNodePool:EntityNodePool;\n\tprivate _skyboxNodePool:EntityNodePool;\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade) {\n\t\t\tvar t:EntityNode = this._updateQueue;\n\t\t\twhile (t) {\n\t\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\t\tt.entity._iInternalUpdate();\n\t\t\t\tt = t._iUpdateQueueNext;\n\t\t\t}\n\t\t\tthis.updateEntities();\n\t\t}\n\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:EntityNode)\n\t{\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:EntityNode)\n\t{\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node)\n\t\t\t\t\tnode.removeFromParent();\n\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterCamera(camera:Camera)\n\t{\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(entity:IEntity)\n\t{\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterCamera(camera:Camera)\n\t{\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(entity:IEntity)\n\t{\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\n\t}\n}\n\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:IEntity;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:IEntity;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _entityNodeClass:IEntityNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\n\t{\n\t\tthis._entityNodeClass = entityNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(entity:IEntity):EntityNode\n\t{\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(entity:IEntity):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\n\n\t\tif (entityNode) {\n\t\t\tentity._iRemoveEntityNode(entityNode);\n\n\t\t\tthis._entityNodePool[entity.id] = null;\n\t\t}\n\n\t\treturn entityNode;\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tprivate _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display/display.ts",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/Style.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/LoaderContainer.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderOwnerEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/StyleEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/events/TransformEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/DisplayObjectNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/SceneGraphNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/MappingMode.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "./display.ts",
    "module",
    "Camera",
    "DirectionalLight",
    "Mesh",
    "MovieClip",
    "Billboard",
    "LineSegment",
    "TextField",
    "PointLight",
    "LightProbe",
    "Skybox",
    "CameraNode",
    "DirectionalLightNode",
    "EntityNode",
    "LightProbeNode",
    "PartitionBase",
    "PointLightNode",
    "SkyboxNode",
    "registerAbstraction",
    "display",
    "awayjs-display/lib/entities/Billboard",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/entities/DirectionalLight",
    "awayjs-display/lib/entities/LightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "awayjs-display/lib/entities/Mesh",
    "awayjs-display/lib/entities/MovieClip",
    "awayjs-display/lib/entities/PointLight",
    "awayjs-display/lib/entities/Skybox",
    "awayjs-display/lib/entities/TextField",
    "awayjs-display/lib/partition/CameraNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/LightProbeNode",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/IRenderer",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "cells",
    "Array",
    "lastCollisionIndex",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoxBounds",
    "target",
    "getCurveGeometryBoxBounds",
    "getSphereBounds",
    "center",
    "setPositions",
    "values",
    "offset",
    "clearVertices",
    "invalidateVertices",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_available",
    "push",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "TransformEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_orientationMatrix",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "zOffset",
    "_transform",
    "addEventListener",
    "INVALIDATE_MATRIX3D",
    "event",
    "_onInvalidateMatrix3D",
    "INVALIDATE_COLOR_TRANSFORM",
    "_onInvalidateColorTransform",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "colorTransform",
    "alphaMultiplier",
    "invalidate",
    "_pInvalidateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "_eulers",
    "x",
    "rotationX",
    "y",
    "rotationY",
    "z",
    "rotationZ",
    "height",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "_updateMaskMode",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "_pivot",
    "pivot",
    "_pivotScale",
    "SCENE_TRANSFORM",
    "_root",
    "rotation",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateMatrix3D",
    "_width",
    "_setScaleX",
    "skew",
    "skewX",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "len",
    "maskMode",
    "MASKS",
    "width",
    "scaleX",
    "position",
    "matrix3D",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "copyTo",
    "partition",
    "boundsType",
    "name",
    "mouseEnabled",
    "extra",
    "masks",
    "adapter",
    "disposeValues",
    "removeChild",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "setTo",
    "pos",
    "globalToLocal3D",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "movePivot",
    "dx",
    "dy",
    "dz",
    "reset",
    "visible",
    "clearMatrix3D",
    "clearColorTransform",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "removeEventListener",
    "hasEventListener",
    "_pImplicitPartition",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "invalidatePartitionBounds",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "clear",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "_iController",
    "updateController",
    "appendTranslation",
    "_iIsRoot",
    "append",
    "_matrix3DDirty",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "MASK_ID",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_pImplicitColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_applyRenderer",
    "renderer",
    "mouseChildren",
    "concat",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "prepend",
    "INVALIDATE_PARTITION_BOUNDS",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/TransformEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "splice",
    "indexOf",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "index",
    "Uint16Array",
    "setThickness",
    "thickness",
    "Math",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "CAMERA_POSITION",
    "awayjs-display/lib/base/Style",
    "EventDispatcher",
    "StyleEvent",
    "Style",
    "_samplers",
    "_images",
    "_sampler",
    "_invalidateProperties",
    "_image",
    "getImageAt",
    "texture",
    "getSamplerAt",
    "addImageAt",
    "image",
    "addSamplerAt",
    "sampler",
    "removeImageAt",
    "removeSamplerAt",
    "INVALIDATE_PROPERTIES",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-display/lib/events/StyleEvent",
    "Short3Attributes",
    "SubGeometryEvent",
    "_numElements",
    "_invalidateVertices",
    "clearIndices",
    "invalidateIndicies",
    "_invalidateIndices",
    "INVALIDATE_INDICES",
    "CLEAR_INDICES",
    "attributesView",
    "INVALIDATE_VERTICES",
    "CLEAR_VERTICES",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "RenderableOwnerEvent",
    "style",
    "_iIndex",
    "_onInvalidatePropertiesDelegate",
    "_onInvalidateProperties",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_style",
    "invalidateRenderOwner",
    "_uvTransform",
    "uvTransform",
    "invalidateGeometry",
    "INVALIDATE_GEOMETRY",
    "INVALIDATE_RENDER_OWNER",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "_functions",
    "_update_indices",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "update_mtx_all",
    "update_colortransform",
    "update_masks",
    "update_name",
    "update_button_name",
    "update_visibility",
    "update_mtx_scale_rot",
    "update_mtx_pos",
    "enable_maskmode",
    "remove_masks",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "frameScriptDebug",
    "functionname",
    "split",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "_children",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "pass1",
    "child",
    "isBlockedByScript",
    "isVisibilityByScript",
    "key",
    "add_child_stream",
    "_addTimelineChildAt",
    "Number",
    "pass2",
    "update_cnt",
    "start_index",
    "end_index",
    "frame_command_idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "update_childs",
    "queueScript",
    "frameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "getDepthIndexInternal",
    "idx",
    "props_start_idx",
    "props_end_index",
    "getChildAtSessionID",
    "update_child_stream",
    "_blocked",
    "Boolean",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "invalidateComponents",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "invalidateColorTransform",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "_matrix3D",
    "_rotation",
    "_skew",
    "_scale",
    "_components",
    "director",
    "getForward",
    "negate",
    "_colorTransform",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_updateMatrix3D",
    "_pixelBounds",
    "_componentsDirty",
    "_updateComponents",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "scaleTo",
    "sx",
    "sy",
    "sz",
    "skewTo",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "distance",
    "translateLocal",
    "Z_AXIS",
    "moveBackward",
    "moveLeft",
    "X_AXIS",
    "moveRight",
    "moveUp",
    "moveDown",
    "moveTo",
    "pitch",
    "angle",
    "rotate",
    "roll",
    "yaw",
    "axis",
    "prependRotation",
    "translate",
    "sqrt",
    "identity",
    "elements",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "getTriangleGeometryBoxBounds",
    "getTriangleGeometrySphereBounds",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_x",
    "_y",
    "_z",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "addChildAtDepth",
    "replace",
    "removeChildAtInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "arguments",
    "contains",
    "getChildAtDepth",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildAtDepth",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "bitFlag",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/LoaderContainer",
    "AssetLibraryBundle",
    "Loader",
    "AssetEvent",
    "URLLoaderEvent",
    "LoaderEvent",
    "ParserEvent",
    "LoaderContainer",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_content",
    "close",
    "_loader",
    "lib",
    "getInstance",
    "disposeLoader",
    "_disposeLoader",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoader",
    "loadData",
    "data",
    "getLoader",
    "LOAD_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "stop",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "LOAD_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/events/URLLoaderEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/Loader",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "displayObject",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "Rectangle",
    "RenderOwnerEvent",
    "DefaultMaterialManager",
    "pixelSnapping",
    "smoothing",
    "onInvalidateTextureDelegate",
    "onInvalidateTexture",
    "_updateDimensions",
    "_animator",
    "_billboardRect",
    "_billboardHeight",
    "_billboardWidth",
    "INVALIDATE_TEXTURE",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "getTextureAt",
    "getDefaultSampler",
    "rect",
    "imageRect",
    "frameRect",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/RenderOwnerEvent",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "DirectionalShadowMapper",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "SamplerCube",
    "ErrorBase",
    "diffuseMap",
    "specularMap",
    "diffuseSampler",
    "specularSampler",
    "awayjs-core/lib/errors/ErrorBase",
    "awayjs-core/lib/image/SamplerCube",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "SubMeshPool",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "_iInvalidateRenderOwners",
    "bakeTransformations",
    "_meshes",
    "pop",
    "isAsset",
    "shareAnimationGeometry",
    "getSubMeshFromSubGeometry",
    "_center",
    "getNewSubMesh",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "hitTestCurveGeometry",
    "awayjs-display/lib/pool/SubMeshPool",
    "MouseEvent",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "_movieClips",
    "reset_textclones",
    "text",
    "numFrames",
    "freeFromScript",
    "_skipAdvance",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "execute_dispose",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "instance",
    "add_child_to_dispose",
    "awayjs-display/lib/events/MouseEvent",
    "CubeMapShadowMapper",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "BlendMode",
    "SingleCubeTexture",
    "_textures",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_imageRect",
    "_onTextureInvalidateDelegate",
    "onTextureInvalidate",
    "_owners",
    "invalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_texture",
    "removeTexture",
    "addTexture",
    "getNumTextures",
    "INVALIDATE_PASSES",
    "INVALIDATE",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "TextFieldType",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "_textGeometryDirty",
    "_textFormat",
    "reConstruct",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "_textFields",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "textlines",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "textWidth",
    "fw",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "curves",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "EventBase",
    "_camera",
    "awayjs-core/lib/events/EventBase",
    "object",
    "_object",
    "VISIBLITY_UPDATED",
    "_subGeometry",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "renderOwner",
    "_renderOwner",
    "INVALIDATE_ANIMATION",
    "_renderableOwner",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "Sampler2D",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "getDefaultImage2D",
    "_defaultBitmapImage2D",
    "createDefaultImage2D",
    "getDefaultImageCube",
    "_defaultBitmapImageCube",
    "createDefaultImageCube",
    "_defaultSampler2D",
    "createDefaultSampler2D",
    "draw",
    "setPixel",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-core/lib/image/BitmapImageCube",
    "awayjs-core/lib/image/Sampler2D",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "_queued_dispose",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "parent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "imageColor",
    "_preserveAlpha",
    "invalidateTexture",
    "awayjs-core/lib/image/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ImageBase",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "invalidateRenderOwners",
    "addTextureAt",
    "awayjs-core/lib/image/ImageBase",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "appendScale",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "imageCube",
    "awayjs-core/lib/image/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "apply",
    "acceptTraverser",
    "enterNode",
    "applyDirectionalLight",
    "_displayObject",
    "isCastingShadow",
    "awayjs-display/lib/partition/DisplayObjectNode",
    "AbstractionBase",
    "DisplayObjectNode",
    "pool",
    "numEntities",
    "isSceneGraphNode",
    "_boundsDirty",
    "isContainerNode",
    "_onInvalidatePartitionBoundsDelegate",
    "_onInvalidatePartitionBounds",
    "_updateBounds",
    "onClear",
    "_debugEntity",
    "onInvalidate",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "awayjs-core/lib/library/AbstractionBase",
    "_partition",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "applyEntity",
    "debugVisible",
    "isEntityCollector",
    "boundsPrimitive",
    "iMarkForUpdate",
    "awayjs-display/lib/partition/IContainerNode",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/IEntityNodeClass",
    "awayjs-display/lib/partition/INode",
    "applyLightProbe",
    "_pChildNodes",
    "_pNumChildNodes",
    "iAddNode",
    "node",
    "iRemoveNode",
    "_abstractionPool",
    "_updatesMade",
    "getAbstraction",
    "_abstractionClassPool",
    "clearAbstraction",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "findParentForNode",
    "targetNode",
    "entityNodeClass",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphNode",
    "SceneGraphNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pEntityNode",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "SceneGraphNodePool",
    "SceneGraphPartition",
    "_sceneGraphNodePool",
    "isContainer",
    "awayjs-display/lib/pool/SceneGraphNodePool",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "posDim",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "bx",
    "by",
    "curvex",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "_pool",
    "getItem",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "ContainerNodePool",
    "_containerNodePool",
    "displayObjectContainer",
    "subMeshClass",
    "classPool",
    "newSubMesh",
    "registerClass",
    "getClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "awayjs-display/lib/textures/MappingMode",
    "MappingMode",
    "LINEAR_GRADIENT",
    "RADIAL_GRADIENT",
    "ImageUtils",
    "TextureBase",
    "setNumImages",
    "_mappingMode",
    "setSamplerAt",
    "isImage2DValid",
    "setImageAt",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-display/lib/textures/TextureBase",
    "_numImages",
    "getNumImages",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "precheck",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "posDim2",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "tempFloat32x4",
    "awayjs-core/lib/attributes/Float4Attributes"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\n\nPartitionBase.registerAbstraction(CameraNode, Camera);\nPartitionBase.registerAbstraction(DirectionalLightNode, DirectionalLight);\nPartitionBase.registerAbstraction(EntityNode, Mesh);\nPartitionBase.registerAbstraction(EntityNode, Billboard);\nPartitionBase.registerAbstraction(EntityNode, LineSegment);\nPartitionBase.registerAbstraction(EntityNode, TextField);\nPartitionBase.registerAbstraction(EntityNode, MovieClip);\nPartitionBase.registerAbstraction(LightProbeNode, LightProbe);\nPartitionBase.registerAbstraction(PointLightNode, PointLight);\nPartitionBase.registerAbstraction(SkyboxNode, Skybox);\n\n\n\n/**\n *\n * static shim\n */\nclass display\n{\n\n}\n\nexport = display;",
    null,
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\t//used for hittesting geometry\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\n\tpublic lastCollisionIndex:number = -1;\n\tpublic divisions:number;\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getCurveGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for triangles\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.clearVertices(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.clearVertices(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.clearVertices(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static _available:Array<CurveSubMesh> = new Array<CurveSubMesh>();\n\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic subGeometry:CurveSubGeometry;\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis.subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subGeometry = null;\n\n\t\tCurveSubMesh._available.push(this);\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-core/lib/library/LoaderInfo\");\nimport EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport TransformEvent\t\t\t\t= require(\"awayjs-display/lib/events/TransformEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _iIsRoot:boolean;\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<EventBase> = new Array<EventBase>();\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tpublic _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tpublic _pImplicitColorTransform:ColorTransform;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _matrix3DDirty:boolean;\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _eulers:Vector3D;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _pivot:Vector3D;\n\tprivate _pivotScale:Vector3D;\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._transform.colorTransform? this._transform.colorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._transform.colorTransform)\n\t\t\tthis._transform.colorTransform = new ColorTransform();\n\n        this._transform.colorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis.invalidate();\n\t\t\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tif (!this._eulers)\n\t\t\tthis._eulers = new Vector3D();\n\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tif (!pivot) {\n\t\t\tthis._pivot = null;\n\t\t\tthis._pivotScale = null;\n\t\t} else {\n\t\t\tif (!this._pivot)\n\t\t\t\tthis._pivot = new Vector3D();\n\n\t\t\tthis._pivot.x = pivot.x;\n\t\t\tthis._pivot.y = pivot.y;\n\t\t\tthis._pivot.z = pivot.z;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._transform.rotation.x*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.x = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._transform.rotation.y*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.y = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._transform.rotation.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.z = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._transform.scale.x;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._transform.scale.y;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._transform.scale.z;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\treturn this._transform.skew.x;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\treturn this._transform.skew.y;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\treturn this._transform.skew.z;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._transform.position.x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._transform.position.x == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[12] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._transform.position.y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._transform.position.y == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[13] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._transform.position.z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._transform.position.z == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[14] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform();\n\n\t\t//setup transform listeners\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_MATRIX3D, (event:TransformEvent) => this._onInvalidateMatrix3D(event));\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_COLOR_TRANSFORM, (event:TransformEvent) => this._onInvalidateColorTransform(event));\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject)\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tnewInstance._transform.matrix3D = this._transform.matrix3D;\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\t}\n\n\tpublic disposeValues()\n\t{\n\t\tif (this._pParent)\n\t\t\tthis._pParent.removeChild(this);\n\n\t\t//if (this._adapter) {\n\t\t//\tthis._adapter.dispose();\n\t\t//\tthis._adapter = null;\n\t\t//}\n\n\t\t//this._pos = null;\n\t\t//this._rot = null;\n\t\t//this._sca = null;\n\t\t//this._ske = null;\n\t\t//this._transformComponents = null;\n\t\t//this._transform.dispose();\n\t\t//this._transform = null;\n\t\t//\n\t\t//this._matrix3D = null;\n\t\t//this._pSceneTransform = null;\n\t\t//this._inverseSceneTransform = null;\n\n\t\tthis._explicitMasks = null;\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._transform.matrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._transform.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._transform.matrix3D)\n\t\t\tthis._transform.clearMatrix3D();\n\n\t\tif(this._transform.colorTransform)\n\t\t\tthis._transform.clearColorTransform();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0].copyFrom(this.scenePosition);\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartitionBounds();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\t//gc abstraction objects\n\t\t\tthis.clear();\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tthis._pSceneTransform.copyFrom(this._transform.matrix3D);\n\n\t\tif (this._pivot) {\n\t\t\tif (!this._pivotScale)\n\t\t\t\tthis._pivotScale = new Vector3D();\n\n\t\t\tthis._pivotScale.x = this._pivot.x/this._transform.scale.x;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._transform.scale.y;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._transform.scale.z;\n\t\t\tthis._pSceneTransform.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._pSceneTransform.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\n\t\tif (this._pParent && !this._pParent._iIsRoot)\n\t\t\tthis._pSceneTransform.append(this._pParent.sceneTransform);\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate _onInvalidateMatrix3D(event:TransformEvent)\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate _onInvalidateColorTransform(event:TransformEvent)\n\t{\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartitionBounds();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:EventBase)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (!this._pImplicitColorTransform)\n\t\t\tthis._pImplicitColorTransform = new ColorTransform();\n\n\t\tif (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._transform.colorTransform);\n\t\t} else {\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._transform.colorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = false;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tvar i:number;\n\n\t\tif (this._pPickingCollisionVO) {\n\t\t\tthis._pPickingCollisionVO.dispose();\n\t\t\tthis._pPickingCollisionVO = null;\n\t\t}\n\n\t\tthis._pImplicitColorTransform = null;\n\t\tthis._pImplicitMasks = null;\n\t}\n\n\tpublic invalidatePartitionBounds()\n\t{\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this));\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase> = new Array<SubGeometryBase>();\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.dispose();\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = this._subGeometries.length - 1; i>=0; i--)\n\t\t\tthis.removeSubGeometry(this._subGeometries[i]);\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.invalidateVertices(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.clearVertices(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(colors, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.invalidateVertices(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._thickness.dispose();\n\t\tthis._thickness = null;\n\n\t\tthis._colors.dispose();\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static _available:Array<LineSubMesh> = new Array<LineSubMesh>();\n\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic subGeometry:LineSubGeometry;\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis.subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subGeometry = null;\n\n\t\tLineSubMesh._available.push(this);\n\t}\n}\n\nexport = LineSubMesh;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\n\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n *\n */\nclass Style extends EventDispatcher\n{\n\tprivate _sampler:SamplerBase;\n\tprivate _samplers:Object = new Object();\n\tprivate _image:ImageBase;\n\tprivate _images:Object = new Object();\n\tprivate _color:number = 0xFFFFFF;\n\n\tpublic get sampler():SamplerBase\n\t{\n\t\treturn this._sampler;\n\t}\n\n\tpublic set sampler(value:SamplerBase)\n\t{\n\t\tif (this._sampler == value)\n\t\t\treturn;\n\n\t\tthis._sampler = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic get image():ImageBase\n\t{\n\t\treturn this._image;\n\t}\n\n\tpublic set image(value:ImageBase)\n\t{\n\t\tif (this._image == value)\n\t\t\treturn;\n\n\t\tthis._image = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getImageAt(texture:TextureBase, index:number = 0):ImageBase\n\t{\n\t\treturn (this._images[texture.id]? this._images[texture.id][index] : null) || this._image;\n\t}\n\n\tpublic getSamplerAt(texture:TextureBase, index:number = 0):SamplerBase\n\t{\n\t\treturn (this._samplers[texture.id]? this._samplers[texture.id][index] : null) || this._sampler;\n\t}\n\n\tpublic addImageAt(image:ImageBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\tthis._images[texture.id] = new Array<ImageBase>();\n\n\t\tthis._images[texture.id][index] = image;\n\t}\n\n\tpublic addSamplerAt(sampler:SamplerBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\tthis._samplers[texture.id] = new Array<SamplerBase>();\n\n\t\tthis._samplers[texture.id][index] = sampler;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\n\tpublic removeImageAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\treturn;\n\n\t\tthis._images[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic removeSamplerAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\treturn;\n\n\t\tthis._samplers[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tprivate _invalidateProperties()\n\t{\n\t\tthis.dispatchEvent(new StyleEvent(StyleEvent.INVALIDATE_PROPERTIES, this));\n\t}\n}\n\nexport = Style;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _invalidateIndices:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _invalidateVertices:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t\t\n\t\tthis.parentGeometry = null;\n\n\t\tif (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.clearIndices();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.clearIndices();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.invalidateIndicies();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate invalidateIndicies()\n\t{\n\t\tif (!this._invalidateIndices)\n\t\t\tthis._invalidateIndices = new SubGeometryEvent(SubGeometryEvent.INVALIDATE_INDICES, this._pIndices);\n\n\t\tthis.dispatchEvent(this._invalidateIndices);\n\t}\n\n\tprivate clearIndices()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.CLEAR_INDICES, this._pIndices));\n\t}\n\n\tpublic invalidateVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._invalidateVertices[attributesView.id])\n\t\t\tthis._invalidateVertices[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.INVALIDATE_VERTICES, attributesView);\n\n\t\tthis.dispatchEvent(this._invalidateVertices[attributesView.id]);\n\t}\n\n\n\tpublic clearVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.CLEAR_VERTICES, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._invalidateVertices[attributesView.id] = null;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _uvTransform:Matrix;\n\n\tpublic _iIndex:number = 0;\n\n\tprivate _style:Style;\n\tpublic _material:MaterialBase;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this.parentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this.parentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The style used to render the current TriangleSubMesh. If set to null, its parent Mesh's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style || this.parentMesh.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateRenderOwner();\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this.parentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic parentMesh:Mesh;\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():Matrix\n\t{\n\t\treturn this._uvTransform || this.parentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:Matrix)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor(parentMesh:Mesh, material:MaterialBase = null, style:Style = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis.parentMesh = parentMesh;\n\t\tthis.style = style;\n\t\tthis.material = material;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.style = null;\n\t\tthis.parentMesh = null;\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this.parentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic invalidateGeometry()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_GEOMETRY, this));\n\t}\n\n\tpublic invalidateRenderOwner()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateRenderOwner();\n\t}\n\n}\n\nexport = SubMeshBase;",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager\t\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tprivate _functions:Array<(child:DisplayObject, target_mc:MovieClip, i:number) => void> = [];\n\tprivate _blocked:boolean;\n\tpublic _update_indices:Array<number> = [];\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices = [];\n\n\t\tthis._potentialPrototypes = [];\n\t\tthis._labels = {};\n\t\tthis._framescripts = {};\n\t\tthis._framescripts_translated = {};\n\n\t\t//cache functions\n\t\tthis._functions[1] = this.update_mtx_all;\n\t\tthis._functions[2] = this.update_colortransform;\n\t\tthis._functions[3] = this.update_masks;\n\t\tthis._functions[4] = this.update_name;\n\t\tthis._functions[5] = this.update_button_name;\n\t\tthis._functions[6] = this.update_visibility;\n\t\tthis._functions[11] = this.update_mtx_scale_rot;\n\t\tthis._functions[12] = this.update_mtx_pos;\n\t\tthis._functions[200] = this.enable_maskmode;\n\t\tthis._functions[201] = this.remove_masks;\n\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tif(FrameScriptManager.frameScriptDebug){\n\t\t\t// if we are in debug mode, we try to extract the function name from the first line of framescript code,\n\t\t\t// and check if this function is available on the object that is set as frameScriptDebug\n\t\t\t// try to get the functions name (it should be the first line as comment)\n\t\t\tvar functionname = value.split(/[\\r\\n]+/g)[0].split(\"//\")[1];\n\t\t\tif(FrameScriptManager.frameScriptDebug[functionname]){\n\t\t\t\tthis._framescripts[keyframe_index] = FrameScriptManager.frameScriptDebug[functionname];\n\t\t\t\tthis._framescripts_translated[keyframe_index]=true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow new Error(\"Framescript could not be found on FrameScriptManager.frameScriptDebug.\\n the Object set as FrameScriptmanager.frameScriptDebug should contain a function with the name '\"+functionname+\"' !!!\");\n\t\t\t}\n\t\t}\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject = this._potentialPrototypes[id].clone();\n\t\tthis_clone.name = \"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index >= 0)\n\t\t\ttarget_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\n\t}\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = (jump_forward && !jump_gap)? current_keyframe_idx + 1 : break_frame_idx;\n\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\n\t\tif (!jump_forward)\n\t\t\ttarget_mc.resetSessionIDs();\n\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\n\n\t\t//pass1: only apply add/remove commands into depth_sessionIDs.\n\t\tthis.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\n\t\tvar child:DisplayObject;\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (child._depthID < 0) {\n\t\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t} else if (!jump_forward) {\n\t\t\t\t\tif(child.adapter) {\n\t\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\n\t\t\t\t\t\t\tchild.transform.clearMatrix3D();\n\t\t\t\t\t\t\tchild.transform.clearColorTransform();\n\n\t\t\t\t\t\t\t//this.name=\"\";\n\t\t\t\t\t\t\tchild.masks = null;\n\t\t\t\t\t\t\tchild.maskMode = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\n\t\t\t\t\t\t\tchild.visible = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// now we need to addchild the objects that were added before targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\t\tfor (var key in depth_sessionIDs) {\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\n\t\t\tif (child._sessionID == -1)\n\t\t\t\ttarget_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n\t\t}\n\n\t\tif (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\n\t\t//pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tthis.pass2(target_mc);\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\tpublic pass1(start_construct_idx:number, target_keyframe_idx:number, depth_sessionIDs:Object)\n\t{\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tthis._update_indices.length = 0;// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar start_index:number;\n\t\tvar end_index:number;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++)\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tthis._update_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\t}\n\n\tpublic pass2(target_mc:MovieClip)\n\t{\n\t\tvar k:number;\n\t\tvar len:number = this._update_indices.length;\n\t\tfor (k = 0; k < len; k++)\n\t\t\tthis.update_childs(target_mc, this._update_indices[k]);\n\t}\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean = true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, frame_command_idx++);\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, frame_command_idx++);\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, frame_command_idx++);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor(var i:number = start_index; i < end_index; i++)\n\t\t\tsourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tsourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\n\t\t}\n\t}\n\n\tpublic update_childs(target_mc:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar p:number;\n\t\tvar props_start_idx:number;\n\t\tvar props_end_index:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tvar child:DisplayObject;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tchild = target_mc.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (child) {\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tthis._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\n\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + this.update_child_props_length_stream[i];\n\t\t\t\tfor(p = props_start_idx; p < props_end_index; p++)\n\t\t\t\t\tthis._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update_mtx_all(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 6;\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\n\n\t\tchild.transform.invalidateComponents();\n\t}\n\n\tpublic update_colortransform(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 8;\n\t\tvar new_ct:ColorTransform = child.transform.colorTransform || (child.transform.colorTransform = new ColorTransform());\n\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.redOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[i];\n\n\t\tchild.transform.invalidateColorTransform();\n\t}\n\n\tpublic update_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t// this is not implmeented in the runtime yet\n\t\t// for now, a second mask-groupd would overwrite the first one\n\t\tvar mask:DisplayObject;\n\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\tvar numMasks:number = this.properties_stream_int[i++];\n\n\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\tif((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\n\t\t\t\tmasks.push(mask);\n\n\n\t\tchild.masks = masks;\n\t}\n\n\tpublic update_name(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.name = this.properties_stream_strings[i];\n\t\ttarget_mc.adapter.registerScriptObject(child);\n\t}\n\n\tpublic update_button_name(target:DisplayObject, sourceMovieClip:MovieClip, i:number)\n\t{\n\t\ttarget.name = this.properties_stream_strings[i];\n\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t(<MovieClip> target).addButtonListeners();\n\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t}\n\n\tpublic update_visibility(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (!child.adapter || !child.adapter.isVisibilityByScript())\n\t\t\tchild.visible = Boolean(i);\n\t}\n\n\tpublic update_mtx_scale_rot(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 4;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\n\n\t\tchild.transform.invalidateComponents();\n\n\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic update_mtx_pos(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 2;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\n\n\t\tchild.transform.invalidatePosition();\n\t}\n\n\tpublic enable_maskmode(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.maskMode = true;\n\t}\n\n\tpublic remove_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.masks = null;\n\t}\n}\n\nexport = Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}\n\nexport = TouchPoint;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TransformEvent\t\t\t\t= require(\"awayjs-display/lib/events/TransformEvent\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform extends EventDispatcher\n{\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\tprivate _rotation:Vector3D = new Vector3D();\n\tprivate _skew:Vector3D = new Vector3D();\n\tprivate _scale:Vector3D = new Vector3D(1, 1, 1);\n\tprivate _components:Array<Vector3D>;\n\tprivate _componentsDirty:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tif (this._colorTransform == val)\n\t\t\treturn;\n\n\t\tthis._colorTransform = val;\n\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Scene.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._matrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._updateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 15; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\t\t\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._matrix3D.position;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this.matrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._rotation;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._rotation.x = ax;\n\t\tthis._rotation.y = ay;\n\t\tthis._rotation.z = az;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._scale;\n\t}\n\n\tpublic scaleTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._scale.x = sx;\n\t\tthis._scale.y = sy;\n\t\tthis._scale.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get skew():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._skew;\n\t}\n\n\tpublic skewTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._skew.x = sx;\n\t\tthis._skew.y = sy;\n\t\tthis._skew.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this.matrix3D);\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._components = new Array<Vector3D>(4);\n\n\t\tthis._components[1] = this._rotation;\n\t\tthis._components[2] = this._skew;\n\t\tthis._components[3] = this._scale;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tthis._matrix3D.rawData[12] = dx;\n\t\tthis._matrix3D.rawData[13] = dy;\n\t\tthis._matrix3D.rawData[14] = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tthis.matrix3D.prependRotation(angle, axis);\n\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.appendTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\tpublic clearMatrix3D()\n\t{\n\t\tthis._matrix3D.identity();\n\t\tthis.invalidateComponents();\n\t}\n\n\tpublic clearColorTransform()\n\t{\n\t\tif (!this._colorTransform)\n\t\t\treturn;\n\t\t\n\t\tthis._colorTransform.clear();\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tpublic invalidateMatrix3D():void\n\t{\n\t\tthis._matrix3DDirty = true;\n\t\t\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateComponents()\n\t{\n\t\tthis.invalidatePosition();\n\t\t\n\t\tthis._componentsDirty = true;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic invalidatePosition()\n\t{\n\t\tthis._matrix3D.invalidatePosition();\n\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateColorTransform()\n\t{\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_COLOR_TRANSFORM, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _updateMatrix3D()\n\t{\n\t\tthis._matrix3D.recompose(this._components);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\n\tprivate _updateComponents()\n\t{\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tthis._rotation.x = vec.x;\n\t\tthis._rotation.y = vec.y;\n\t\tthis._rotation.z = vec.z;\n\n\t\tvec = elements[2];\n\n\t\tthis._skew.x = vec.x;\n\t\tthis._skew.y = vec.y;\n\t\tthis._skew.z = vec.z;\n\n\t\tvec = elements[3];\n\n\t\tthis._scale.x = vec.x;\n\t\tthis._scale.y = vec.y;\n\t\tthis._scale.z = vec.z;\n\n\t\tthis._componentsDirty = false;\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometrySphereBounds(this._positions, center, target, this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.clearVertices(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.clearVertices(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.clearVertices(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.clearVertices(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.invalidateVertices(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static _available:Array<TriangleSubMesh> = new Array<TriangleSubMesh>();\n\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic subGeometry:TriangleSubGeometry;\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis.subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subGeometry = null;\n\n\t\tTriangleSubMesh._available.push(this);\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pEntity = null;\n\t\tthis._pBoundsPrimitive = null;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pInvalidated = true;\n\t\t}\n\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\nimport Extensions\t\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depth_childs:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._depth_childs[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeValues()\n\t{\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\n\t\t\tthis.removeChild(this._children[i]);\n\n\t\tsuper.disposeValues();\n\t}\n\n\tpublic getChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this._depth_childs[depth];\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tvar min:number;\n\t\t\tvar max:number;\n\t\t\tvar minX:number, minY:number, minZ:number;\n\t\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\tdelete this._depth_childs[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tpublic getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._depth_childs[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tif(this._pImplicitMaskId != -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif (this._explicitMasks) {\n\t\t\tvar numMasks:number = this._explicitMasks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this._children.length;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport Loader\t\t\t\t\t\t= require(\"awayjs-core/lib/library/Loader\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport URLLoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/URLLoaderEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderContainer class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the LoaderContainer object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The LoaderContainer class overrides the following methods that it inherits,\n * because a LoaderContainer object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>LoaderContainer</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The LoaderContainer and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the LoaderContainer class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the LoaderContainer object's root SWF file), you may want to define a\n * mask for the LoaderContainer object, to prevent the loaded content(which is a child\n * of the LoaderContainer object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass LoaderContainer extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loader:Loader;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onLoadCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadCompleteDelegate = (event:LoaderEvent) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loader)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoader(this._loader);\n\t\t}\n\t\t\n\t\tthis._disposeLoader();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, Loader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoader()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loader = lib.getLoader();\n\t\t} else {\n\t\t\tthis._loader = new Loader();\n\t\t}\n\n\t\tthis._loader.addEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loader;\n\t}\n\n\tprivate _disposeLoader()\n\t{\n\t\tthis._loader.removeEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loader.stop();\n\n\t\tthis._loader = null;\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoader.enableParsers(parserClasses);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:URLLoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onLoadComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoader();\n\t}\n}\n\nexport = LoaderContainer;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tif(document) {\n\t\t\tdocument.body.style.margin = \"0px\";\n\n\t\t\tthis._htmlElement = document.createElement(\"div\");\n\t\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\t\tdocument.body.appendChild(this._htmlElement);\n\t\t}\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.width = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.height = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.left = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.top = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement && this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t}\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartitionBounds();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport RenderOwnerEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderOwnerEvent\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:Matrix;\n\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate onInvalidateTextureDelegate:(event:RenderOwnerEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(RenderOwnerEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(RenderOwnerEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():Matrix\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:Matrix)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onInvalidateTextureDelegate = (event:RenderOwnerEvent) => this.onInvalidateTexture(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis.material = material;\n\n\t\tthis._updateDimensions();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\n\t/**\n\t * The style used to render the current Billboard. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._onInvalidateProperties();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onInvalidateTexture(event:RenderOwnerEvent)\n\t{\n\t\tthis._updateDimensions();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tprivate _updateDimensions()\n\t{\n\t\tvar texture:TextureBase = this.material.getTextureAt(0);\n\n\t\tvar image:Image2D = texture? <Image2D> ((this._style? this._style.getImageAt(texture) : null) || (this.material.style? this.material.style.getImageAt(texture) : null) || texture.getImageAt(0)) : null;\n\n\t\tif (image) {\n\t\t\tvar sampler:Sampler2D = <Sampler2D> ((this._style? this._style.getSamplerAt(texture) : null) || (this.material.style? this.material.style.getSamplerAt(texture) : null) || texture.getSamplerAt(0) || DefaultMaterialManager.getDefaultSampler());\n\t\t\tvar rect:Rectangle = sampler.imageRect || image.rect;\n\t\t\tthis._billboardWidth = rect.width;\n\t\t\tthis._billboardHeight = rect.height;\n\t\t\tthis._billboardRect = sampler.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\t\t} else {\n\t\t\tthis._billboardWidth = 1;\n\t\t\tthis._billboardHeight = 1;\n\t\t\tthis._billboardRect = new Rectangle(0, 0, 1, 1);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_GEOMETRY, this));\n\t}\n\n\n\tpublic invalidateRenderOwner()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent = null)\n\t{\n\t\tthis.invalidateRenderOwner();\n\n\t\tthis._updateDimensions();\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light DirectionalLight]\";\n\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn DirectionalLight.assetType;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport SamplerCube\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ErrorBase\t\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light LightProbe]\";\n\n\tpublic diffuseMap:ImageCube;\n\n\tpublic diffuseSampler:SamplerCube = new SamplerCube();\n\n\tpublic specularMap:ImageCube;\n\n\tpublic specularSampler:SamplerCube = new SamplerCube();\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.diffuseMap = diffuseMap;\n\t\tthis.specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn LightProbe.assetType;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new ErrorBase(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:Matrix;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.invalidateGeometry();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.invalidateGeometry();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.invalidateGeometry();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():Matrix\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:Matrix)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * The style used to render the current LineSegment. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateRenderOwner();\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateGeometry()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_GEOMETRY, this));//TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic invalidateRenderOwner()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateRenderOwner();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tprivate static _meshes:Array<Mesh> = new Array<Mesh>();\n\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:Matrix;\n\tprivate _style:Style;\n\n\tprivate _center:Vector3D;\n\tpublic _subMeshes:Array<ISubMesh>;\n\tpublic _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tpublic _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tpublic _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tpublic _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh.invalidateGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tif (this._geometry == value)\n\t\t\treturn;\n\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i) {\n\t\t\t\tthis._subMeshes[i].clear();\n\t\t\t\tthis._subMeshes[i].dispose();\n\t\t\t}\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif ((subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif ((subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():Matrix\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:Matrix)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._iInvalidateRenderOwners();\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this.transform.matrix3D);\n\t\tthis.transform.clearMatrix3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tMesh._meshes.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\n\t\tif (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():Mesh\n\t{\n\t\tvar newInstance:Mesh = (Mesh._meshes.length)? Mesh._meshes.pop() : new Mesh(this._geometry, this._material);\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:Mesh)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tif (this.isAsset(Mesh))\n\t\t\tnewInstance.geometry = this._geometry;\n\n\t\tnewInstance.material = this._material;\n\t\tnewInstance.castsShadows = this._castsShadows;\n\t\tnewInstance.shareAnimationGeometry = this._shareAnimationGeometry;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n        if (this._animator)\n\t\t\tnewInstance.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pBoxBounds = subGeoms[i].getBoxBounds(this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pSphereBounds = subGeoms[i].getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.clear();\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tpublic addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar subMesh:ISubMesh = SubMeshPool.getNewSubMesh(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i].invalidateGeometry();\n\t}\n\n\n\tpublic _iInvalidateRenderOwners()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i].invalidateRenderOwner();\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._geometry && this._geometry.subGeometries.length) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the geometry thing\n\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\t\tvar subGeometriesCount:number = subGeometries.length;\n\t\t\tfor(var i:number = 0; i < subGeometriesCount; i++)\n\t\t\t\tif (SubGeometryUtils.hitTestCurveGeometry(local.x, local.y, 0, box, <CurveSubGeometry> subGeometries[i]))\n\t\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subMeshes[i].clear();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis._iInvalidateRenderOwners();\n\t}\n}\n\nexport = Mesh;",
    "import AssetEvent                   = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform               = require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport DisplayObjectContainer       = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject                = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh                         = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard                    = require(\"awayjs-display/lib/entities/Billboard\");\nimport TextField                    = require(\"awayjs-display/lib/entities/TextField\");\nimport MouseEvent                   = require(\"awayjs-display/lib/events/MouseEvent\");\nimport IMovieClipAdapter\t    \t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline                     = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager           = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    private static _skipAdvance:boolean;\n\n    private static _movieClips:Array<MovieClip> = new Array<MovieClip>();\n\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean = false;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number = 0;// the current time inside the animation\n    private _currentFrameIndex:number = -1;// the current frame\n\n    private _isPlaying:boolean = true;// false if paused or stopped\n\n    // not sure if needed\n    private _enterFrame:AssetEvent;\n    private _skipAdvance : boolean;\n    private _isInit:boolean = true;\n\n    private _potentialInstances:Object = {};\n    private _depth_sessionIDs:Object = {};\n    private _sessionID_childs:Object = {};\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n\n        this._enterFrame = new AssetEvent(AssetEvent.ENTER_FRAME, this);\n\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n    public dispose()\n    {\n        this.disposeValues();\n\n        MovieClip._movieClips.push(this);\n    }\n\n    public disposeValues()\n    {\n        super.disposeValues();\n\n        this._potentialInstances = {};\n        this._depth_sessionIDs = {};\n        this._sessionID_childs = {};\n    }\n\n    public reset_textclones()\n    {\n        if(this.timeline) {\n            for (var key in this._potentialInstances) {\n                if (this._potentialInstances[key] != null) {\n                    if (this._potentialInstances[key].isAsset(TextField)) {\n                        (<TextField>this._potentialInstances[key]).text = (<TextField>this.timeline.getPotentialChildPrototype(key)).text;\n                    }\n                    else if (this._potentialInstances[key].isAsset(MovieClip)) {\n                        (<MovieClip>this._potentialInstances[key]).reset_textclones();\n                    }\n                }\n            }\n        }\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n\n    /**\n     *\n     */\n    public loop:boolean = true;\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string)\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    /**\n     * the current index of the current active frame\n     */\n    public constructedKeyFrameIndex:number = -1;\n\n    public reset():void\n    {\n        super.reset();\n\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)\n            this.adapter.freeFromScript();\n\n        this.constructedKeyFrameIndex = -1;\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n\n        this._skipAdvance = MovieClip._skipAdvance;\n\n        var numFrames:number = this._timeline.keyframe_indices.length;\n        this._isPlaying = Boolean(numFrames > 1);\n        if (numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        } else {\n            this._currentFrameIndex = -1;\n        }\n    }\n\n\n    public resetSessionIDs()\n    {\n        this._depth_sessionIDs = {};\n    }\n\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public get currentFrameIndex():number\n    {\n        return this._currentFrameIndex;\n    }\n\n    public set currentFrameIndex(value:number)\n    {\n        //if currentFrame is set greater than the available number of\n        //frames, the playhead is moved to the last frame in the timeline.\n        //But because the frame specified was not a keyframe, no scripts are\n        //executed, even if they exist on the last frame.\n        var skip_script:boolean = false;\n\n        var numFrames:number = this._timeline.keyframe_indices.length;\n\n        if (!numFrames)\n            return;\n\n        if (value < 0) {\n            value = 0;\n        } else if (value >= numFrames) {\n            value = numFrames - 1;\n            skip_script = true;\n        }\n\n        if (this._currentFrameIndex == value)\n            return;\n\n        this._currentFrameIndex = value;\n\n        //changing current frame will ignore advance command for that\n        //update's advanceFrame function, unless advanceFrame has\n        //already been executed\n        this._skipAdvance = MovieClip._skipAdvance;\n\n        this._timeline.gotoFrame(this, value, skip_script);\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public getChildAtSessionID(sessionID:number):DisplayObject\n    {\n        return this._sessionID_childs[sessionID];\n    }\n\n    public getSessionIDDepths():Object\n    {\n        return this._depth_sessionIDs;\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n\n        child.reset();// this takes care of transform and visibility\n\n        return super.addChildAtDepth(child, depth, replace);\n    }\n\n    public _addTimelineChildAt(child:DisplayObject, depth:number, sessionID:number):DisplayObject\n    {\n        this._depth_sessionIDs[depth] = child._sessionID = sessionID;\n\n        this._sessionID_childs[sessionID] = child;\n\n        return this.addChildAtDepth(child, depth);\n    }\n\n    public removeChildAtInternal(index:number):DisplayObject\n    {\n        var child:DisplayObject = this._children[index];\n\n        if(child.adapter)\n            child.adapter.freeFromScript();\n\n        this.adapter.unregisterScriptObject(child);\n\n        //check to make sure _depth_sessionIDs wasn't modified with a new child\n        if (this._depth_sessionIDs[child._depthID] == child._sessionID)\n            delete this._depth_sessionIDs[child._depthID];\n\n        delete this._sessionID_childs[child._sessionID];\n\n        child._sessionID = -1;\n\n        return super.removeChildAtInternal(index);\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        if (this._timeline.keyframe_indices.length > 1)\n            this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update()\n    {\n        MovieClip._skipAdvance = true;\n\n        this.advanceFrame();\n\n        MovieClip._skipAdvance = false;\n\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we execute any intervals queued\n        FrameScriptManager.execute_intervals();\n\n        // finally, we execute any scripts that were added from intervals\n        FrameScriptManager.execute_queue();\n\n        //execute any disposes as a result of framescripts\n        FrameScriptManager.execute_dispose();\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n        return this._potentialInstances[id];\n    }\n\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone():MovieClip\n    {\n        var newInstance:MovieClip = (MovieClip._movieClips.length)? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\n\n        this.copyTo(newInstance);\n\n        return newInstance;\n    }\n\n    public copyTo(newInstance:MovieClip)\n    {\n        super.copyTo(newInstance);\n\n        newInstance.timeline = this._timeline;\n        newInstance.loop = this.loop;\n    }\n\n    public advanceFrame()\n    {\n        if (this._isPlaying && !this._skipAdvance) {\n            if (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\n                if (this.loop) // end of loop - jump to first frame.\n                    this.currentFrameIndex = 0;\n                else //end of timeline, stop playing\n                    this._isPlaying = false;\n            } else { // not end - construct next frame\n                this._currentFrameIndex++;\n                this._timeline.constructNextFrame(this);\n            }\n        }\n\n        var len:number = this._children.length;\n        var child:DisplayObject;\n        for (var i:number = 0; i <  len; ++i) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).advanceFrame();\n        }\n\n        this._skipAdvance = false;\n    }\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this._children.length;\n        var child:DisplayObject;\n        for (var i:number = 0; i < len; i++) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    }\n\n    public clear()\n    {\n        //clear out potential instances\n        for (var key in this._potentialInstances) {\n            var instance:DisplayObject = this._potentialInstances[key];\n\n            //only dispose instances that are not used in script ie. do not have an instance name\n            if (instance.name == \"\") {\n                FrameScriptManager.add_child_to_dispose(instance);\n                delete this._potentialInstances[key];\n            }\n        }\n\n        super.clear();\n    }\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light PointLight]\";\n\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn PointLight.assetType;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone.transform.matrix3D = this.transform.matrix3D\n\t\tclone.name = name;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport RenderOwnerEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _texture:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _uvTransform:Matrix;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _imageRect:boolean = false;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\tprivate _animator:IAnimator;\n\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use imageRects. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():Matrix\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:Matrix)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get texture():SingleCubeTexture\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:SingleCubeTexture)\n\t{\n\t\tif (this._texture == value)\n\t\t\treturn;\n\n\t\tif (this._texture)\n\t\t\tthis.removeTexture(this._texture);\n\n\t\tthis._texture = value;\n\n\t\tif (this._texture)\n\t\t\tthis.addTexture(this._texture);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(image:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis._style.image = image;\n\t\tthis.texture =  new SingleCubeTexture();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new RenderOwnerEvent(RenderOwnerEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tpublic invalidateRenderOwner()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tprivate static _textFields:Array<TextField> = new Array<TextField>();\n\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _textGeometryDirty:boolean;\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean;\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue = value.toString();\n\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\n\t\tthis._textGeometryDirty = true;\n\t}\n\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\n\t\tthis._textFormat = value;\n\n\t\tthis._textGeometryDirty = true;\n\t}\n\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tif (this._geometry == value)\n\t\t\treturn;\n\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\t\tif(!this.transform.colorTransform)\n\t\t\tthis.transform.colorTransform = new ColorTransform();\n\n\t\tthis.transform.colorTransform.color = value;\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tTextField._textFields.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\t//dispose material before geometry to ensure owners are deleted\n\t\tthis.material = null;\n\n\t\t//textfield has a unique geometry that can be disposed here\n\t\tthis._geometry.dispose();\n\n\t\tsuper.disposeValues();\n\n\t\tthis._textFormat = null;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tthis._textGeometryDirty = false;\n\n\t\tif(this._textFormat == null)\n\t\t\treturn;\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tfor (var i:number = subGeoms.length - 1; i>=0; i--)\n\t\t\tthis._geometry.removeSubGeometry(subGeoms[i]);\n\n\t\tif(this._text == \"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale);\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\n\t\tvar final_lines_width:Array<number> = [];\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\n\t\t\tfinal_lines_chars.push([]);\n\t\t\tfinal_lines_char_scale.push([]);\n\t\t\tfinal_lines_width.push(0);\n\n\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar word_width:number = 0;\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar word_chars_scale:Array<number> = [];\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\tif (this_char == null) {\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tword_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\n\t\t\t\t}\n\n\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + word_width) <= this.textWidth) {\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// word does not fit\n\t\t\t\t\t// todo respect multiline and autowrapping properties.\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\n\t\t\t\t\tfinal_lines_chars.push([]);\n\t\t\t\t\tfinal_lines_char_scale.push([]);\n\t\t\t\t\tfinal_lines_width.push(0);\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\n\t\t\t\t}\n\n\t\t\t\tif (i < (words.length - 1)) {\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + whitespace_width) <= this.textWidth) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfinal_lines_chars.push([null]);\n\t\t\t\t\t\tfinal_lines_char_scale.push([char_scale]);\n\t\t\t\t\t\tfinal_lines_width.push(whitespace_width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\n\n\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-additional_margin_x;\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=(this._textFormat.font_table.get_font_em_size() * char_scale);\n\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis._geometry.addSubGeometry(curve_sub_geom);\n\t\tthis._subMeshes[0].material = this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = (TextField._textFields.length)? TextField._textFields.pop() : new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\t// each textfield needs its own geometry.\n\t\tnewInstance.geometry = new Geometry();\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}\n\nexport = TextField;",
    "import ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nclass CastError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends EventBase\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CameraEvent\n\t{\n\t\treturn new CameraEvent(this.type, this._camera);\n\t}\n}\n\nexport = CameraEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PARTITION_BOUNDS:string = \"invalidatePartitionBounds\";\n\n\tprivate _object:DisplayObject;\n\n\tpublic get object():DisplayObject\n\t{\n\t\treturn this._object;\n\t}\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis._object = object;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():DisplayObjectEvent\n\t{\n\t\treturn new DisplayObjectEvent(this.type, this._object);\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():GeometryEvent\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass LightEvent extends EventBase\n{\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():LightEvent\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():MouseEvent\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nclass RenderOwnerEvent extends EventBase\n{\n\tpublic static INVALIDATE_TEXTURE:string = \"invalidateTexture\";\n\n\tpublic static INVALIDATE_ANIMATION:string = \"invalidateAnimation\";\n\n\tpublic static INVALIDATE_PASSES:string = \"invalidatePasses\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():RenderOwnerEvent\n\t{\n\t\treturn new RenderOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderOwnerEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderableOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static INVALIDATE_RENDER_OWNER:string = \"invalidateRenderableOwner\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_GEOMETRY:string = \"invalidateGeometry\";\n\n\tprivate _renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderableOwner:IRenderableOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderableOwner = renderableOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderableOwner():IRenderableOwner\n\t{\n\t\treturn this._renderableOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():RenderableOwnerEvent\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderableOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass RendererEvent extends EventBase\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass ResizeEvent extends EventBase\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ResizeEvent\n\t{\n\t\treturn new ResizeEvent(this.type, this._oldHeight, this._oldWidth);\n\t}\n}\n\nexport = ResizeEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\n\nclass StyleEvent extends EventBase\n{\n\tprivate _style:Style;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PROPERTIES:string = \"invalidateProperties\";\n\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tconstructor(type:string, style:Style)\n\t{\n\t\tsuper(type);\n\n\t\tthis._style = style;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():StyleEvent\n\t{\n\t\treturn new StyleEvent(this.type, this._style);\n\t}\n}\n\nexport = StyleEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INVALIDATE_INDICES:string = \"invalidateIndices\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static CLEAR_INDICES:string = \"clearIndices\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static INVALIDATE_VERTICES:string = \"invalidateVertices\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static CLEAR_VERTICES:string = \"clearVertices\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryEvent\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():TouchEvent\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Transform\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\n\nclass TransformEvent extends EventBase\n{\n\tprivate _transform:Transform;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_MATRIX3D:string = \"invalidateMatrix3D\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_COLOR_TRANSFORM:string = \"invalidateColorTransform\";\n\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\tconstructor(type:string, transform:Transform)\n\t{\n\t\tsuper(type);\n\n\t\tthis._transform = transform;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TransformEvent\n\t{\n\t\treturn new TransformEvent(this.type, this._transform);\n\t}\n}\n\nexport = TransformEvent;",
    "import Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultSampler2D:Sampler2D;\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tpublic static getDefaultImage2D():BitmapImage2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImage2D;\n\t}\n\n\tpublic static getDefaultImageCube():BitmapImageCube\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createDefaultImageCube();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImageCube;\n\t}\n\n\tpublic static getDefaultSampler():Sampler2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultSampler2D)\n\t\t\tDefaultMaterialManager.createDefaultSampler2D();\n\n\t\treturn DefaultMaterialManager._defaultSampler2D;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture();\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture();\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createDefaultImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createDefaultImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tfor (j = 0; j < 8; j++)\n\t\t\t\tif ((j & 1) ^ (i & 1))\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultTextureMaterial.texture = DefaultMaterialManager._defaultTexture;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.texture = DefaultMaterialManager._defaultCubeTexture;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n\n\tprivate static createDefaultSampler2D()\n\t{\n\t\tDefaultMaterialManager._defaultSampler2D = new Sampler2D();\n\t}\n\n}\n\nexport = DefaultMaterialManager;",
    "import DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\t// FrameScript debugging:\n\t// the first line of a FrameScript should be a comment that represents the functions unique name\n\t// the exporter creates a js file, containing a object that has the framescripts functions set as properties according to the unique names\n\t// this object can be set as \"frameScriptDebug\" in order to enable debug mode\n\n\n\tpublic static frameScriptDebug:Object = undefined;\n\n\t//queue of objects for disposal\n\tprivate static _queued_dispose:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_child_to_dispose(child:DisplayObject)\n\t{\n\t\tthis._queued_dispose.push(child);\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs.length = 0;\n\t\tthis._queued_scripts.length = 0;\n\t}\n\n\tpublic static execute_dispose()\n\t{\n\t\tvar len:number = this._queued_dispose.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._queued_dispose[i].dispose();\n\n\t\tthis._queued_dispose.length = 0;\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\t\t\tthis._viewLookup.push(view);\n\t\t}\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t\t}\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._iUpdateDirty)\n\t\t\t\tcontinue;\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n    private _texture:TextureBase;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(image?:Image2D, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper(imageColor, alpha);\n\n        //set a texture if an image is present\n        if (imageColor instanceof Image2D)\n            this.texture = new Single2DTexture();\n\t}\n\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n\n        this._preserveAlpha = value;\n\n        this.invalidate();\n    }\n\n\n    /**\n     * The texture object to use for the albedo colour.\n     */\n    public get texture():TextureBase\n    {\n        return this._texture;\n    }\n\n    public set texture(value:TextureBase)\n    {\n        if (this._texture == value)\n            return;\n\n        if (this._texture)\n            this.removeTexture(this._texture);\n\n        this._texture = value;\n\n        if (this._texture)\n            this.addTexture(this._texture);\n\n        this.invalidateTexture();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport RenderOwnerEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner> = new Array<IRenderableOwner>();\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _imageRect:boolean = false;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tprivate _onLightChangeDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(image?:ImageBase, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tif (imageColor instanceof ImageBase)\n\t\t\tthis._style.image = <ImageBase> imageColor;\n\t\telse if (imageColor)\n\t\t\tthis._style.color = Number(imageColor);\n\n\t\tthis.alpha = alpha;\n\n\t\tthis._onLightChangeDelegate = (event:AssetEvent) => this.onLightsChange(event);\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\n\t/**\n\t * The style used to render the current TriangleSubMesh. If set to null, its parent Mesh's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\n\t\tthis._pUseColorTransform = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.invalidateRenderOwner();\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.invalidateRenderOwner();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new RenderOwnerEvent(RenderOwnerEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tthis.dispatchEvent(new RenderOwnerEvent(RenderOwnerEvent.INVALIDATE_ANIMATION, this));\n\t}\n\n\tpublic invalidateRenderOwners()\n\t{\n\t\tvar len:number = this._owners.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._owners[i].invalidateRenderOwner();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:AssetEvent)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tpublic invalidateTexture()\n\t{\n\t\tthis.dispatchEvent(new RenderOwnerEvent(RenderOwnerEvent.INVALIDATE_TEXTURE, this));\n\t}\n\n\tpublic addTextureAt(texture:TextureBase, index:number)\n\t{\n\t\tvar i:number = this._textures.indexOf(texture);\n\n\t\tif (i == index)\n\t\t\treturn;\n\t\telse if (i != -1)\n\t\t\tthis._textures.splice(i, 1);\n\n\t\tthis._textures.splice(index, 0, texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tif (this._textures.indexOf(texture) != -1)\n\t\t\treturn;\n\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidatePasses();\n\n\t\tthis.invalidateRenderOwners();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(entity:IEntity)\n\t{\n\t\tthis.updateProbeWeights(entity);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(entity:IEntity)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = entity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:(event:LightEvent) => void;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.image2D.rect.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase extends AssetBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass DisplayObjectNode extends AbstractionBase implements INode\n{\n\tpublic numEntities:number = 0;\n\n\tpublic isSceneGraphNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:DisplayObjectNode;\n\n\tprivate _onInvalidatePartitionBoundsDelegate:(event:DisplayObjectEvent) => void;\n\t\n\tpublic _displayObject:DisplayObject;\n\tprivate _debugEntity:IEntity;\n\tprivate _boundsDirty:boolean = true;\n\tprivate _bounds:BoundingVolumeBase;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic parent:SceneGraphNode;\n\n\tpublic isContainerNode:boolean = false;\n\n\tpublic boundsType:string;\n\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\tif (this._boundsDirty)\n\t\t\tthis._updateBounds();\n\n\t\treturn this._bounds;\n\t}\n\n\tconstructor(displayObject:DisplayObject, pool:IAbstractionPool)\n\t{\n\t\tsuper(displayObject, pool);\n\n\t\tthis._onInvalidatePartitionBoundsDelegate = (event:DisplayObjectEvent) => this._onInvalidatePartitionBounds(event);\n\n\t\tthis._displayObject = displayObject;\n\t\tthis._displayObject.addEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\n\t\tthis.boundsType = this._displayObject.boundsType;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this._displayObject.castsShadows;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._displayObject.removeEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\t\tthis._displayObject = null;\n\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tthis._bounds = null;\n\t\tthis._debugEntity = null;\n\t}\n\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tif (this.boundsType != this._displayObject.boundsType) {\n\t\t\tthis.boundsType = this._displayObject.boundsType;\n\t\t\tthis._boundsDirty = true;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// do nothing here\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent)\n\t{\n\t\t// do nothing here\n\t}\n\n\tprivate _updateBounds()\n\t{\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tif (this.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._displayObject);\n\t\telse if (this.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._displayObject);\n\t\telse if (this.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis._boundsDirty = false;\n\t}\n}\n\nexport = DisplayObjectNode;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends DisplayObjectNode\n{\n\tpublic numEntities:number = 1;\n\n\tprivate _partition:PartitionBase;\n\n\n\tconstructor(displayObject:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper(displayObject, partition);\n\n\t\tthis._partition = partition;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._partition = null;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._displayObject._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._displayObject.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._displayObject.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this.bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(<IEntity> this._displayObject);\n\n\t\t\tif (this._displayObject.debugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this.bounds.boundsPrimitive);\n\t\t}\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent)\n\t{\n\t\tthis.bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements IContainerNode\n{\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:IContainerNode;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.parent = null;\n\t\tthis._pChildNodes = null;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n}\n\nexport = NodeBase;",
    "import IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/partition/IEntityNodeClass\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tpublic _rootNode:IContainerNode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:DisplayObjectNode;\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic getAbstraction(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._abstractionPool[displayObject.id] || (this._abstractionPool[displayObject.id] = new (<IEntityNodeClass> PartitionBase._abstractionClassPool[displayObject.assetType])(displayObject, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(displayObject:DisplayObject)\n\t{\n\t\tthis._abstractionPool[displayObject.id] = null;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:DisplayObjectNode)\n\t{\n\t\tvar t:DisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:DisplayObjectNode)\n\t{\n\t\tvar t:DisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:DisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode._displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:IContainerNode;\n\t\tvar t:DisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tPartitionBase._abstractionClassPool[assetClass.assetType] = entityNodeClass;\n\t}\n}\n\nexport = PartitionBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass SceneGraphNode extends DisplayObjectNode implements IContainerNode\n{\n\tpublic isSceneGraphNode:boolean = true;\n\n\tprivate _pChildNodes:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\tprivate _childDepths:Array<number> = new Array<number>();\n\tprivate _childMasks:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\tprivate _numChildMasks:number = 0;\n\tprivate _pNumChildNodes:number = 0;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic _pEntityNode:EntityNode;\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t//containers nodes are for ordering only, no need to check enterNode or debugVisible\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tif (this._pEntityNode)\n\t\t\tthis._pEntityNode.acceptTraverser(traverser);\n\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numChildMasks; i++)\n\t\t\tthis._childMasks[i].acceptTraverser(traverser);\n\n\t\tfor (i = 0; i < this._pNumChildNodes; i++)\n\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:DisplayObjectNode)\n\t{\n\t\tnode.parent = this;\n\n\t\tif (!node.isSceneGraphNode) {\n\t\t\tthis._pEntityNode = <EntityNode> node;\n\t\t} else if (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.push(node);\n\t\t\tthis._numChildMasks = this._childMasks.length;\n\t\t} else {\n\t\t\tvar depth:number = node._displayObject._depthID;\n\t\t\tvar len:number = this._childDepths.length;\n\t\t\tvar index:number = len;\n\n\t\t\twhile (index--)\n\t\t\t\tif (this._childDepths[index] < depth)\n\t\t\t\t\tbreak;\n\n\t\t\tindex++;\n\n\t\t\tif (index < len) {\n\t\t\t\tthis._pChildNodes.splice(index, 0, node);\n\t\t\t\tthis._childDepths.splice(index, 0, depth);\n\t\t\t} else {\n\t\t\t\tthis._pChildNodes.push(node);\n\t\t\t\tthis._childDepths.push(depth);\n\t\t\t}\n\t\t\tthis._pNumChildNodes = this._childDepths.length;\n\t\t}\n\n\t\tvar numEntities:number = node.isSceneGraphNode? (<SceneGraphNode> node).numEntities : 1;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:DisplayObjectNode)\n\t{\n\t\tif (!node.isSceneGraphNode) {\n\t\t\tthis._pEntityNode = null;\n\t\t} else if (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.splice(this._childMasks.indexOf(node), 1);\n\t\t\tthis._numChildMasks = this._childMasks.length;\n\t\t} else {\n\t\t\tvar index:number = this._pChildNodes.indexOf(node);\n\n\t\t\tthis._pChildNodes.splice(index, 1);\n\t\t\tthis._childDepths.splice(index, 1);\n\n\t\t\tthis._pNumChildNodes = this._childDepths.length;\n\t\t}\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = <DisplayObjectNode> node.parent) != null);\n\t}\n}\nexport = SceneGraphNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport SceneGraphNodePool\t\t\t= require(\"awayjs-display/lib/pool/SceneGraphNodePool\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tpublic _sceneGraphNodePool:SceneGraphNodePool;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._sceneGraphNodePool = new SceneGraphNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\tif (node._displayObject.partition == this || node._displayObject._iIsRoot) {\n\t\t\tthis._rootNode = <SceneGraphNode> node;\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!node.isSceneGraphNode && node._displayObject.isContainer)\n\t\t\treturn this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> node._displayObject);\n\n\t\treturn this._sceneGraphNodePool.getAbstraction(node._displayObject.parent);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applySkybox(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.displayObject = null;\n\t\tthis.renderableOwner = null;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//discard entities\n\t\tthis._entities.length = 0;\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tvar item:EntityListItem;\n\t\tvar len:number = this._pool.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\titem = this._pool[i];\n\t\t\titem.entity = null;\n\t\t\titem.next = null;\n\t\t}\n\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n/**\n * @class away.pool.ContainerNodePool\n */\nclass ContainerNodePool implements IAbstractionPool\n{\n\tprivate _containerNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getAbstraction(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\n\t{\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = new SceneGraphNode(displayObjectContainer, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic clearAbstraction(displayObjectContainer:DisplayObjectContainer)\n\t{\n\t\tdelete this._containerNodePool[displayObjectContainer.id];\n\t}\n}\n\nexport = ContainerNodePool;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\tpublic static getNewSubMesh(subGeometry:SubGeometryBase, parentMesh:Mesh, material:MaterialBase = null):ISubMesh\n\t{\n\t\tvar subMeshClass:ISubMeshClass = SubMeshPool.classPool[subGeometry.assetType];\n\n\t\tif (!subMeshClass._available.length)\n\t\t\treturn new subMeshClass(subGeometry, parentMesh, material);\n\n\t\tvar newSubMesh:ISubMesh = subMeshClass._available.pop();\n\n\t\tnewSubMesh.subGeometry = subGeometry;\n\t\tnewSubMesh.parentMesh = parentMesh;\n\t\tnewSubMesh.material = material;\n\n\t\treturn newSubMesh;\n\t}\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass, assetClass:IAssetClass)\n\t{\n\t\tSubMeshPool.classPool[assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh, LineSubGeometry);\n\t\tSubMeshPool.registerClass(TriangleSubMesh, TriangleSubGeometry);\n\t\tSubMeshPool.registerClass(CurveSubMesh, CurveSubGeometry);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._offset_x=0;\n\t\tthis._offset_y=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "/**\n\n\n */\nclass MappingMode\n{\n\t/**\n\t *\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINEAR_GRADIENT:string = \"linearGradient\";\n\n\t/**\n\t *\n\t */\n\tpublic static RADIAL_GRADIENT:string = \"radialGradient\";\n}\n\nexport = MappingMode;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport MappingMode\t\t\t\t= require(\"awayjs-display/lib/textures/MappingMode\");\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tprivate _mappingMode:string;\n\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\tpublic get mappingMode():string\n\t{\n\t\treturn this._mappingMode;\n\t}\n\n\tpublic set mappingMode(value:string)\n\t{\n\t\tif (this._mappingMode == value)\n\t\t\treturn;\n\n\t\tthis._mappingMode = value;\n\n\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn <Sampler2D> this._samplers[0];\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get image2D():Image2D\n\t{\n\t\treturn <Image2D> this._images[0];\n\t}\n\n\tpublic set image2D(value:Image2D)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value))\n\t\t\tthrow new ErrorBase(\"Invalid image2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\tconstructor(image2D:Image2D = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.image2D = image2D;\n\n\t\tthis._mappingMode = MappingMode.NORMAL;\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/image/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn <SamplerCube> this._samplers[0];\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageCube}\n\t */\n\tpublic get imageCube():ImageCube\n\t{\n\t\treturn <ImageCube> this._images[0];\n\t}\n\n\tpublic set imageCube(value:ImageCube)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\t\n\tconstructor(imageCube:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.imageCube = imageCube;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n/**\n *\n */\nclass TextureBase extends AssetBase\n{\n\tpublic _numImages:number = 0;\n\tpublic _images:Array<ImageBase> = new Array<ImageBase>();\n\tpublic _samplers:Array<SamplerBase> = new Array<SamplerBase>();\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getNumImages():number\n\t{\n\t\treturn this._numImages;\n\t}\n\n\tpublic setNumImages(value:number)\n\t{\n\t\tif (this._numImages == value)\n\t\t\treturn;\n\n\t\tthis._numImages = value;\n\n\t\tthis._images.length = value;\n\t\tthis._samplers.length = value;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getImageAt(index:number):ImageBase\n\t{\n\t\treturn this._images[index];\n\t}\n\n\tpublic setImageAt(image:ImageBase, index:number)\n\t{\n\t\tthis._images[index] = image;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getSamplerAt(index:number):SamplerBase\n\t{\n\t\treturn this._samplers[index];\n\t}\n\n\tpublic setSamplerAt(sampler:SamplerBase, index:number)\n\t{\n\t\tthis._samplers[index] = sampler;\n\n\t\tthis.invalidate();\n\t}\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Extensions\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nclass SubGeometryUtils\n{\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\n\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n\n\t//TODO - generate this dyanamically based on num tris\n\n\tpublic static hitTestCurveGeometry(x:number, y:number, z:number, boundingBox:Box, curveSubGeometry:CurveSubGeometry):boolean\n\t{\n\t\tvar positionAttributes:Short3Attributes = curveSubGeometry.positions;\n\t\tvar curveAttributes:Short2Attributes = curveSubGeometry.curves;\n\t\tvar count:number = curveSubGeometry.numVertices;\n\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar curveDim:number = curveAttributes.dimensions;\n\n\t\tvar positions:Float32Array = positionAttributes.get(count);\n\t\tvar curves:Float32Array = curveAttributes.get(count);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tvar index:number = curveSubGeometry.lastCollisionIndex;\n\t\tif(index != -1 && index < count)\n\t\t{\n\t\t\tprecheck:\n\t\t\t{\n\t\t\t\tid0 = index + 2;\n\t\t\t\tid1 = index + 1;\n\t\t\t\tid2 = index + 0;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (count > 150) {\n\t\t\tvar cells:Array<Array<number>> = curveSubGeometry.cells;\n\t\t\tvar divisions:number = cells.length? curveSubGeometry.divisions : (curveSubGeometry.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\n\t\t\tvar minx:number = boundingBox.x;\n\t\t\tvar miny:number = boundingBox.y;\n\n\t\t\tif (!cells.length) { //build grid\n\n\t\t\t\t//now we have bounds start creating grid cells and filling\n\t\t\t\tcells.length = divisions * divisions;\n\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\n\t\t\t\t\tid0 = k + 2;\n\t\t\t\t\tid1 = k + 1;\n\t\t\t\t\tid2 = k + 0;\n\n\t\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t\t//subtractions to push into positive space\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\n\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\n\n\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\n\n\t\t\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\n\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tif(id2 == index) continue;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t\t\tif (d > 0 && az == -1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse if (d < 0 && az == 1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < count; k += 3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tif(id2 == index) continue;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getCurveGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar posDim2:number = posDim*2;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar minX, minY, maxX, maxY, p;\n\n\t\tmaxX = output.width + (minX = output.x);\n\t\tmaxY = output.height + (minY = output.y);\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tp = positions[i];\n\t\t\tif (p < minX)\n\t\t\t\tminX = p;\n\t\t\telse if (p > maxX)\n\t\t\t\tmaxX = p;\n\n\t\t\tp = positions[i + 1];\n\n\t\t\tif (p < minY)\n\t\t\t\tminY = p;\n\t\t\telse if (p > maxY)\n\t\t\t\tmaxY = p;\n\t\t}\n\n\t\toutput.width = maxX - (output.x = minX);\n\t\toutput.height = maxY - (output.y = minY);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static getTriangleGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar pos:number;\n\t\tvar minX:number = output.x;\n\t\tvar minY:number = output.y;\n\t\tvar minZ:number = output.z;\n\t\tvar maxX:number = output.width + minX;\n\t\tvar maxY:number = output.height + minY;\n\t\tvar maxZ:number = output.depth + minZ;\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tpos = positions[i];\n\t\t\tif (pos < minX)\n\t\t\t\tminX = pos;\n\t\t\telse if (pos > maxX)\n\t\t\t\tmaxX = pos;\n\n\t\t\tpos = positions[i + 1];\n\n\t\t\tif (pos < minY)\n\t\t\t\tminY = pos;\n\t\t\telse if (pos > maxY)\n\t\t\t\tmaxY = pos;\n\n\t\t\tpos = positions[i + 2];\n\n\t\t\tif (pos < minZ)\n\t\t\t\tminZ = pos;\n\t\t\telse if (pos > maxZ)\n\t\t\t\tmaxZ = pos;\n\t\t}\n\n\t\toutput.width = maxX - (output.x = minX);\n\t\toutput.height = maxY - (output.y = minY);\n\t\toutput.depth = maxZ - (output.z = minZ);\n\n\t\treturn output;\n\t}\n\n\tpublic static getTriangleGeometrySphereBounds(positionAttributes:Float3Attributes, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Sphere();\n\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar len = positions.length;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tdistanceX = positions[i] - center.x;\n\t\t\tdistanceY = positions[i + 1] - center.y;\n\t\t\tdistanceZ = positions[i + 2] - center.z;\n\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t}\n\n\t\toutput.x = center.x;\n\t\toutput.y = center.y;\n\t\toutput.z = center.z;\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\n\n\t\treturn output;\n\t}\n\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
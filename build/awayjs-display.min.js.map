{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "cells",
    "Array",
    "lastCollisionIndex",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoxBounds",
    "target",
    "getCurveGeometryBoxBounds",
    "getSphereBounds",
    "center",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_orientationMatrix",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pRenderables",
    "_entityNodes",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "zOffset",
    "_transformComponents",
    "_transform",
    "identity",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "_explicitColorTransform",
    "alphaMultiplier",
    "_iColorTransform",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "_eulers",
    "x",
    "rotationX",
    "y",
    "rotationY",
    "z",
    "rotationZ",
    "height",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "_updateMaskMode",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "_pivot",
    "pivot",
    "_pivotScale",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "SCENE_TRANSFORM",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "maskMode",
    "MASKS",
    "width",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "copyTo",
    "partition",
    "boundsType",
    "name",
    "mouseEnabled",
    "extra",
    "masks",
    "_iMatrix3D",
    "adapter",
    "colorTransform",
    "removeChild",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "setTo",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "invalidatePartition",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_clearInterfaces",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "MASK_ID",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_pImplicitColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "event",
    "elements",
    "mouseChildren",
    "concat",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "_parentMesh",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "_children",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "start_index",
    "end_index",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "child",
    "isBlockedByScript",
    "isVisibilityByScript",
    "key",
    "_addTimelineChildAt",
    "Number",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "getDepthIndexInternal",
    "idx",
    "props_start_idx",
    "props_end_index",
    "value_start_index",
    "doit",
    "getChildAtSessionID",
    "update_child_stream",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_index_stream",
    "property_type_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "getTriangleGeometryBoxBounds",
    "getTriangleGeometrySphereBounds",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "addChildAtDepth",
    "replace",
    "removeChildAtInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "getChildAtDepth",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildAtDepth",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "bitFlag",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "containerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "shareAnimationGeometry",
    "getSubMeshFromSubGeometry",
    "_center",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "hitTestCurveGeometry",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "TextField",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "reset_textclones",
    "isAsset",
    "text",
    "numFrames",
    "exit_frame",
    "_skipAdvance",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "execute_dispose",
    "skipChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "instance",
    "add_child_to_dispose",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/entities/TextField",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "TextFieldType",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "_textGeometryDirty",
    "_textFormat",
    "reConstruct",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "textlines",
    "split",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "textWidth",
    "fw",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "curves",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "_queued_dispose",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "parent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "appendScale",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "iAddNode",
    "node",
    "isContainer",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "disposeItem",
    "iRemoveEntity",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "pop",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "iMarkForUpdate",
    "_updateQueue",
    "_iUpdateQueueNext",
    "findParentForNode",
    "targetNode",
    "getItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "posDim",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "bx",
    "by",
    "curvex",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "precheck",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "posDim2",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "tempFloat32x4",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\t//used for hittesting geometry\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\n\tpublic lastCollisionIndex:number = -1;\n\tpublic divisions:number;\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getCurveGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for triangles\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._subGeometry = null;\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _iIsRoot:boolean;\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tpublic _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tprivate _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _explicitColorTransform:ColorTransform;\n\tpublic _pImplicitColorTransform:ColorTransform;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D;\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D;\n\tprivate _pivotScale:Vector3D;\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotDirty:boolean;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._explicitColorTransform? this._explicitColorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._explicitColorTransform)\n\t\t\tthis._iColorTransform = new ColorTransform();\n\n        this._explicitColorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tif (!this._eulers)\n\t\t\tthis._eulers = new Vector3D();\n\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tif (!pivot) {\n\t\t\tthis._pivot = null;\n\t\t\tthis._pivotScale = null;\n\t\t} else {\n\t\t\tif (!this._pivot)\n\t\t\t\tthis._pivot = new Vector3D();\n\n\t\t\tthis._pivot.x = pivot.x;\n\t\t\tthis._pivot.y = pivot.y;\n\t\t\tthis._pivot.z = pivot.z;\n\t\t}\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = this._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = this._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = this._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject)\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this._pParent)\n\t\t\tthis._pParent.removeChild(this);\n\n\t\tif (this._adapter) {\n\t\t\tthis._adapter.dispose();\n\t\t\tthis._adapter = null;\n\t\t}\n\n\t\tthis._pos = null;\n\t\tthis._rot = null;\n\t\tthis._sca = null;\n\t\tthis._ske = null;\n\t\tthis._transformComponents = null;\n\t\tthis._transform.dispose();\n\t\tthis._transform = null;\n\n\t\tthis._matrix3D = null;\n\t\tthis._pSceneTransform = null;\n\t\tthis._inverseSceneTransform = null;\n\n\t\tthis._explicitMasks = null;\n\t\tthis._explicitColorTransform = null;\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis.x = dx;\n\t\tthis.y = dy;\n\t\tthis.z = dz;\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._iMatrix3D)\n\t\t\tthis._iMatrix3D.identity();\n\n\t\tif(this._iColorTransform)\n\t\t\tthis._iColorTransform.clear();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.x += x*len;\n\t\tthis.y += y*len;\n\t\tthis.z += z*len;\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis.x = this._pos.x;\n\t\tthis.y = this._pos.y;\n\t\tthis.z = this._pos.z;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 12; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis.x = val.rawData[12];\n\t\tthis.y = val.rawData[13];\n\t\tthis.z = val.rawData[14];\n\n\t\tthis._elementsDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic get _iColorTransform():ColorTransform\n\t{\n\t\treturn this._explicitColorTransform;\n\t}\n\n\tpublic set _iColorTransform(value:ColorTransform)\n\t{\n\t\tthis._explicitColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartition();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\t//gc associated objects\n\t\t\tthis._clearInterfaces();\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (this._pivot) {\n\t\t\tif (!this._pivotScale)\n\t\t\t\tthis._pivotScale = new Vector3D();\n\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\n\t\tif (this._pivot)\n\t\t\tthis.invalidatePivot();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tif (this._listenToSkewChanged)\n\t\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.splice(this._entityNodes.indexOf(entityNode), 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (!this._pImplicitColorTransform)\n\t\t\tthis._pImplicitColorTransform = new ColorTransform();\n\n\t\tif (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\n\t\t\tif (this._explicitColorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._explicitColorTransform);\n\t\t} else {\n\t\t\tif (this._explicitColorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._explicitColorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = false;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tvar i:number;\n\n\t\tfor (i = this._entityNodes.length - 1; i >= 0; i--)\n\t\t\tthis._entityNodes[i].dispose();\n\n\t\tfor (i = this._pRenderables.length - 1; i >= 0; i--)\n\t\t\tthis._pRenderables[i].dispose();\n\n\t\tif (this._pPickingCollisionVO) {\n\t\t\tthis._pPickingCollisionVO.dispose();\n\t\t\tthis._pPickingCollisionVO = null;\n\t\t}\n\n\t\tthis._pImplicitColorTransform = null;\n\t\tthis._pImplicitMasks = null;\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase> = new Array<SubGeometryBase>();\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.dispose();\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = this._subGeometries.length - 1; i>=0; i--)\n\t\t\tthis.removeSubGeometry(this._subGeometries[i]);\n\n\t\tthis._subGeometries = null;\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._thickness.dispose();\n\t\tthis._thickness = null;\n\n\t\tthis._colors.dispose();\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._subGeometry = null;\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.parentGeometry = null;\n\n\t\tif (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tprivate _parentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._parentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._parentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._parentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._parentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._parentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor(parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._parentMesh = parentMesh;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\t\tthis._parentMesh = null;\n\n\t\tthis._clearInterfaces();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._parentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.splice(this._renderables.indexOf(renderable), 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tfor (var i:number = this._renderables.length - 1; i >= 0; i--)\n\t\t\tthis._renderables[i].dispose();\n\t}\n}\n\nexport = SubMeshBase;",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices=[];\n\n\t\tthis._potentialPrototypes=[];\n\t\tthis._labels={};\n\t\tthis._framescripts={};\n\t\tthis._framescripts_translated={};\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\n\t\tthis_clone.name=\"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index>=0)\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\n\t}\n\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\n\t\tif (frameIndex == value) //we are already on exactly this frame.\n\t\t\treturn;\n\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = (jump_forward && !jump_gap)? current_keyframe_idx + 1 : break_frame_idx;\n\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\n\t\tif (!jump_forward)\n\t\t\ttarget_mc.resetSessionIDs();\n\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\n\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\n\t\tvar update_indices:Array<number> = [];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar frame_command_idx:number;\n\t\tvar frame_recipe:number;\n\t\tvar start_index:number;\n\t\tvar end_index:number;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tframe_command_idx = this.frame_command_indices[k];\n\t\t\tframe_recipe = this.frame_recipe[k];\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++)\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tupdate_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\n\t\t//  step2: construct the final frame\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\n\t\tvar child:DisplayObject;\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (child._depthID < 0) {\n\t\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t} else if (!jump_forward) {\n\t\t\t\t\tif(child.adapter) {\n\t\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\n\t\t\t\t\t\t\tif (child._iMatrix3D) {\n\t\t\t\t\t\t\t\tchild._iMatrix3D.identity();\n\t\t\t\t\t\t\t\tchild.x = child._iMatrix3D.rawData[12];\n\t\t\t\t\t\t\t\tchild.y = child._iMatrix3D.rawData[13];\n\t\t\t\t\t\t\t\tchild._elementsDirty = true;\n\t\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (child._iColorTransform) {\n\t\t\t\t\t\t\t\tchild._iColorTransform.clear();\n\t\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//this.name=\"\";\n\t\t\t\t\t\t\tchild.masks = null;\n\t\t\t\t\t\t\tchild.maskMode = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\n\t\t\t\t\t\t\tchild.visible = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t// now we need to addchild the objects that were added before targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\t\tfor (var key in depth_sessionIDs) {\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\n\t\t\tif (child._sessionID == -1)\n\t\t\t\ttarget_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n\t\t}\n\n\t\tif (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tvar frame_command_idx:number;\n\t\tvar len:number = update_indices.length;\n\t\tfor (k = 0; k < len; k++) {\n\t\t\tframe_command_idx = update_indices[k];\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\n\t\t}\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(constructed_keyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tsourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[start_index + i] - 16383));\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tfor (var i:number = start_index + len - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tsourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\n\t\t}\n\t}\n\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tvar props_start_idx:number;\n\t\tvar props_end_index:number;\n\t\tvar value_start_index:number;\n\t\tvar doit:boolean;\n\t\tvar end_index:number = start_index + len;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (target != null) {\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tdoit = (target.adapter && target.adapter.isBlockedByScript())? false : true;\n\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + this.update_child_props_length_stream[i];\n\t\t\t\tfor(var p:number = props_start_idx; p < props_end_index; p++) {\n\t\t\t\t\tvalue_start_index = this.property_index_stream[p];\n\t\t\t\t\tswitch(this.property_type_stream[p]){\n\t\t\t\t\t\tcase 0:\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\n\n\t\t\t\t\t\t\t\ttarget.x = new_matrix.rawData[12];\n\t\t\t\t\t\t\t\ttarget.y = new_matrix.rawData[13];\n\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 2:// colormatrix\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target._iColorTransform || (target._iColorTransform = new ColorTransform());\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 3: //mask the mc with a list of objects\n\n\t\t\t\t\t\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\n\t\t\t\t\t\t\tvar mask:DisplayObject;\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\t\t\t\t\t\tvar numMasks:number = this.properties_stream_int[value_start_index++];\n\n\t\t\t\t\t\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t\t\t\t\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\t\t\t\t\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\t\t\t\t\t\tif((mask = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++])))\n\t\t\t\t\t\t\t\t\tmasks.push(mask);\n\n\t\t\t\t\t\t\ttarget.masks = masks;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 5:// instance name button instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 6://visible\n\t\t\t\t\t\t\tif (!target.adapter || !target.adapter.isVisibilityByScript())\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 11:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 12:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\n\t\t\t\t\t\t\t\ttarget.x = this.properties_stream_f32_mtx_pos[value_start_index++];\n\t\t\t\t\t\t\t\ttarget.y = this.properties_stream_f32_mtx_pos[value_start_index];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 200:\n\t\t\t\t\t\t\ttarget.maskMode = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 201:\n\t\t\t\t\t\t\ttarget.masks = null;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}\n\nexport = TouchPoint;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._displayObject._iColorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tthis._displayObject._iColorTransform = val;\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._displayObject = null;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometrySphereBounds(this._positions, center, target, this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._subGeometry = null;\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\nimport Extensions\t\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depth_childs:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._depth_childs[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\n\t\t\tthis.removeChild(this._children[i]);\n\n\t\tsuper.dispose();\n\n\t\tthis._children = null;\n\t\tthis._depth_childs = null;\n\t}\n\n\tpublic getChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this._depth_childs[depth];\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tvar min:number;\n\t\t\tvar max:number;\n\t\t\tvar minX:number, minY:number, minZ:number;\n\t\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\tdelete this._depth_childs[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tpublic getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._depth_childs[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this._pImplicitMaskId !== -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tvar masks:Array<DisplayObject> = this.masks;\n\n\t\tif (masks) {\n\t\t\tvar numMasks:number = masks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (masks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\n\t}\n\n\tpublic _iAddContainerNode(containerNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.push(containerNode);\n\n\t\treturn containerNode;\n\t}\n\n\n\tpublic _iRemoveContainerNode(containerNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.splice(this._containerNodes.indexOf(containerNode), 1);\n\n\t\treturn containerNode;\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this.numChildren;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tsuper._clearInterfaces();\n\n\t\tvar i:number;\n\n\t\tfor (i = this._children.length - 1; i >= 0; i--)\n\t\t\tthis._children[i]._clearInterfaces();\n\n\t\tfor (i = this._containerNodes.length - 1; i >= 0; i--)\n\t\t\tthis._containerNodes[i].dispose();\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _center:Vector3D;\n\tpublic _subMeshes:Array<ISubMesh>;\n\tpublic _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tpublic _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tpublic _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tpublic _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tif (this._geometry == value)\n\t\t\treturn;\n\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif ((subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif ((subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\n\t\tif (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():Mesh\n\t{\n\t\tvar newInstance:Mesh = new Mesh(this._geometry, this._material);\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:Mesh)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.geometry = this._geometry;\n\t\tnewInstance.material = this._material;\n\t\tnewInstance.castsShadows = this._castsShadows;\n\t\tnewInstance.shareAnimationGeometry = this._shareAnimationGeometry;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n        if (this._animator)\n\t\t\tnewInstance.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pBoxBounds = subGeoms[i].getBoxBounds(this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pSphereBounds = subGeoms[i].getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tpublic addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._geometry && this._geometry.subGeometries.length) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the geometry thing\n\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\t\tvar subGeometriesCount:number = subGeometries.length;\n\t\t\tfor(var i:number = 0; i < subGeometriesCount; i++)\n\t\t\t\tif (SubGeometryUtils.hitTestCurveGeometry(local.x, local.y, 0, box, <CurveSubGeometry> subGeometries[i]))\n\t\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tsuper._clearInterfaces();\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subMeshes[i]._clearInterfaces();\n\t}\n}\n\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\nimport TextField = require(\"awayjs-display/lib/entities/TextField\");\n\nimport MouseEvent               = require(\"awayjs-display/lib/events/MouseEvent\");\n\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline                 = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager       = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean = false;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number = 0;// the current time inside the animation\n    private _currentFrameIndex:number = -1;// the current frame\n\n    private _isPlaying:boolean = true;// false if paused or stopped\n\n    // not sure if needed\n    private _enterFrame:Event;\n    private _skipAdvance : boolean;\n    private _isInit:boolean = true;\n\n    private _potentialInstances:Object = {};\n    private _depth_sessionIDs:Object = {};\n    private _sessionID_childs:Object = {};\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n\n        this._enterFrame = new Event(Event.ENTER_FRAME);\n\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n    public dispose()\n    {\n        super.dispose();\n\n        this._potentialInstances = null;\n        this._depth_sessionIDs = null;\n        this._sessionID_childs = null;\n    }\n\n\n    public reset_textclones()\n    {\n        if(this.timeline) {\n            for (var key in this._potentialInstances) {\n                if (this._potentialInstances[key] != null) {\n                    if (this._potentialInstances[key].isAsset(TextField)) {\n                        (<TextField>this._potentialInstances[key]).text = (<TextField>this.timeline.getPotentialChildPrototype(key)).text;\n                    }\n                    else if (this._potentialInstances[key].isAsset(MovieClip)) {\n                        (<MovieClip>this._potentialInstances[key]).reset_textclones();\n                    }\n                }\n            }\n        }\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n\n    /**\n     *\n     */\n    public loop:boolean = true;\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string)\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    /**\n     * the current index of the current active frame\n     */\n    public constructedKeyFrameIndex:number = -1;\n\n    public exit_frame():void\n    {\n        this._skipAdvance = false;\n\n        var child:DisplayObject;\n        for (var i:number = this.numChildren - 1; i >= 0; i--) {\n            child = this._children[i];\n            if(child.isAsset(MovieClip))\n                (<MovieClip> child).exit_frame();\n        }\n    }\n    public reset():void\n    {\n        super.reset();\n\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)\n            this.adapter.freeFromScript();\n\n        this._isPlaying = true;\n\n        this._currentFrameIndex = -1;\n        this.constructedKeyFrameIndex = -1;\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n\n        this._skipAdvance = true;\n\n        if (this._timeline.numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        }\n    }\n\n\n    public resetSessionIDs()\n    {\n        this._depth_sessionIDs = {};\n    }\n\n    /*\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\n     */\n    public set_currentFrameIndex(value : number) {\n        this._skipAdvance = true;\n        this._currentFrameIndex = value;\n    }\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public get currentFrameIndex():number\n    {\n        return this._currentFrameIndex;\n    }\n\n    public set currentFrameIndex(value:number)\n    {\n        if (this._currentFrameIndex == value)\n            return;\n\n        var numFrames:number = this._timeline.numFrames;\n\n        if (numFrames) {\n\n            var skip_script:boolean = false;\n\n            if (value < 0) {\n                value = 0;\n            } else if (value >= numFrames) {\n                value = numFrames - 1;\n                skip_script = true;\n            }\n\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\n            this._skipAdvance = true;\n\n            this._timeline.gotoFrame(this, value, skip_script);\n        }\n\n        this._currentFrameIndex = value;\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public getChildAtSessionID(sessionID:number):DisplayObject\n    {\n        return this._sessionID_childs[sessionID];\n    }\n\n    public getSessionIDDepths():Object\n    {\n        return this._depth_sessionIDs;\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n\n        child.reset();// this takes care of transform and visibility\n\n        return super.addChildAtDepth(child, depth, replace);\n    }\n\n    public _addTimelineChildAt(child:DisplayObject, depth:number, sessionID:number):DisplayObject\n    {\n        this._depth_sessionIDs[depth] = child._sessionID = sessionID;\n\n        this._sessionID_childs[sessionID] = child;\n\n        return this.addChildAtDepth(child, depth);\n    }\n\n    public removeChildAtInternal(index:number):DisplayObject\n    {\n        var child:DisplayObject = this._children[index];\n\n        if(child.adapter)\n            child.adapter.freeFromScript();\n\n        this.adapter.unregisterScriptObject(child);\n\n        //check to make sure _depth_sessionIDs wasn't modified with a new child\n        if (this._depth_sessionIDs[child._depthID] == child._sessionID)\n            delete this._depth_sessionIDs[child._depthID];\n\n        delete this._sessionID_childs[child._sessionID];\n\n        child._sessionID = -1;\n\n        return super.removeChildAtInternal(index);\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update()\n    {\n        this.advanceFrame();\n\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we execute any intervals queued\n        FrameScriptManager.execute_intervals();\n\n        // finally, we execute any scripts that were added from intervals\n        FrameScriptManager.execute_queue();\n\n        //execute any disposes as a result of framescripts\n        FrameScriptManager.execute_dispose();\n\n        this.exit_frame();\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n        return this._potentialInstances[id];\n    }\n\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone():MovieClip\n    {\n        var newInstance:MovieClip = new MovieClip(this._timeline);\n\n        this.copyTo(newInstance);\n\n        return newInstance;\n    }\n\n    public copyTo(newInstance:MovieClip)\n    {\n        super.copyTo(newInstance);\n\n        newInstance.timeline = this._timeline;\n        newInstance.loop = this.loop;\n    }\n\n    public advanceFrame(skipChildren:boolean = false)\n    {\n        var numFrames:number = this._timeline.numFrames;\n        if(numFrames) {\n            if (((this._isPlaying && !this._skipAdvance) || this._currentFrameIndex == -1) && (this._currentFrameIndex != numFrames - 1 || this.loop)) {\n                this._currentFrameIndex++;\n                if (this._currentFrameIndex == numFrames) { // looping - jump to first frame.\n                    this.currentFrameIndex = 0;\n                } else { // not looping - construct next frame\n                    this._timeline.constructNextFrame(this);\n                }\n            }\n\n            if (!skipChildren) {\n                var len:number = this.numChildren;\n                var child:DisplayObject;\n                for (var i:number = 0; i <  len; ++i) {\n                    child = this._children[i];\n\n                    if (child.isAsset(MovieClip))\n                        (<MovieClip> child).advanceFrame();\n                }\n            }\n        }\n\n        this._skipAdvance = false;\n    }\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this.numChildren;\n        var child:DisplayObject;\n        for (var i:number = 0; i < len; i++) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    }\n\n    public _clearInterfaces()\n    {\n        //clear out potential instances\n        for (var key in this._potentialInstances) {\n            var instance:DisplayObject = this._potentialInstances[key];\n\n            //only dispose instances that are not used in script ie. do not have an instance name\n            if (instance.name == \"\") {\n                FrameScriptManager.add_child_to_dispose(instance);\n                delete this._potentialInstances[key];\n            } else {\n                instance._clearInterfaces();\n            }\n        }\n\n        super._clearInterfaces();\n    }\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _textGeometryDirty:boolean;\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean;\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue = value.toString();\n\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\n\t\tthis._textGeometryDirty = true;\n\t}\n\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\n\t\tthis._textFormat = value;\n\n\t\tthis._textGeometryDirty = true;\n\t}\n\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tif (this._geometry == value)\n\t\t\treturn;\n\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\t\tif(!this._iColorTransform)\n\t\t\tthis._iColorTransform = new ColorTransform();\n\n\t\tthis._iColorTransform.color = value;\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\t//dispose material before geometry to ensure owners are deleted\n\t\tthis.material = null;\n\n\t\t//textfield has a unique geometry that can be disposed here\n\t\tthis._geometry.dispose();\n\n\t\tsuper.dispose();\n\n\t\tthis._textFormat = null;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tthis._textGeometryDirty = false;\n\n\t\tif(this._textFormat == null)\n\t\t\treturn;\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tfor (var i:number = subGeoms.length - 1; i>=0; i--)\n\t\t\tthis._geometry.removeSubGeometry(subGeoms[i]);\n\n\t\tif(this._text == \"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale);\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\n\t\tvar final_lines_width:Array<number> = [];\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\n\t\t\tfinal_lines_chars.push([]);\n\t\t\tfinal_lines_char_scale.push([]);\n\t\t\tfinal_lines_width.push(0);\n\n\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar word_width:number = 0;\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar word_chars_scale:Array<number> = [];\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\tif (this_char == null) {\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tword_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\n\t\t\t\t}\n\n\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + word_width) <= this.textWidth) {\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// word does not fit\n\t\t\t\t\t// todo respect multiline and autowrapping properties.\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\n\t\t\t\t\tfinal_lines_chars.push([]);\n\t\t\t\t\tfinal_lines_char_scale.push([]);\n\t\t\t\t\tfinal_lines_width.push(0);\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\n\t\t\t\t}\n\n\t\t\t\tif (i < (words.length - 1)) {\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + whitespace_width) <= this.textWidth) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfinal_lines_chars.push([null]);\n\t\t\t\t\t\tfinal_lines_char_scale.push([char_scale]);\n\t\t\t\t\t\tfinal_lines_width.push(whitespace_width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\n\n\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-additional_margin_x;\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=(this._textFormat.font_table.get_font_em_size() * char_scale);\n\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis._geometry.addSubGeometry(curve_sub_geom);\n\t\tthis._subMeshes[0].material = this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\t// each textfield needs its own geometry.\n\t\tnewInstance.geometry = new Geometry();\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\t//queue of objects for disposal\n\tprivate static _queued_dispose:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_child_to_dispose(child:DisplayObject)\n\t{\n\t\tthis._queued_dispose.push(child);\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs.length = 0;\n\t\tthis._queued_scripts.length = 0;\n\t}\n\n\tpublic static execute_dispose()\n\t{\n\t\tvar len:number = this._queued_dispose.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._queued_dispose[i].dispose();\n\n\t\tthis._queued_dispose.length = 0;\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._clearInterfaces();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tfor (var i:number = this._renders.length - 1; i >= 0; i--)\n\t\t\tthis._renders[i].dispose();\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\n{\n    public isContainerNode:boolean = true;\n\n    public _iUpdateQueueNext:IDisplayObjectNode;\n\n    private _pool:ContainerNodePool;\n    private _container : DisplayObjectContainer;\n    private _partition:PartitionBase;\n    private _childDepths:Array<number> = new Array<number>();\n    private _childMasks:Array<INode> = new Array<INode>();\n    private _numChildMasks:number = 0;\n\n    public _pEntityNode:IDisplayObjectNode;\n\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\n    {\n        super();\n\n        this._pool = pool;\n        this._container = container;\n        this._partition = partition;\n    }\n\n    public get displayObject():DisplayObject\n    {\n        return this._container;\n    }\n\n    /**\n     *\n     * @param traverser\n     */\n    public acceptTraverser(traverser:CollectorBase)\n    {\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\n        if (this.numEntities == 0)\n            return;\n\n        if (this._pEntityNode)\n            this._pEntityNode.acceptTraverser(traverser);\n\n        var i:number;\n        for (i = 0; i < this._numChildMasks; i++)\n            this._childMasks[i].acceptTraverser(traverser);\n\n        for (i = 0; i < this._pNumChildNodes; i++)\n            this._pChildNodes[i].acceptTraverser(traverser);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iAddNode(node:IDisplayObjectNode)\n    {\n        node.parent = this;\n\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = node;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.push(node);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var depth:number = node.displayObject._depthID;\n            var len:number = this._childDepths.length;\n            var index:number = len;\n\n            while (index--)\n                if (this._childDepths[index] < depth)\n                    break;\n\n            index++;\n\n            if (index < len) {\n                this._pChildNodes.splice(index, 0, node);\n                this._childDepths.splice(index, 0, depth);\n            } else {\n                this._pChildNodes.push(node);\n                this._childDepths.push(depth);\n            }\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities += numEntities;\n        } while ((node = <EntityNode> node.parent) != null);\n    }\n\n    public dispose()\n    {\n        super.dispose();\n\n        this._childDepths = null;\n        this._childMasks = null;\n\n        this._pool.disposeItem(this._container);\n        this._partition.iRemoveEntity(this);\n\n        this._pool = null;\n        this._container = null;\n        this._partition = null;\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iRemoveNode(node:IDisplayObjectNode)\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = null;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var index:number = this._pChildNodes.indexOf(node);\n\n            this._pChildNodes.splice(index, 1);\n            this._childDepths.splice(index, 1);\n\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(false);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\n    }\n}\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static assetClass:IAssetClass = DirectionalLight;\n\n\tprivate _directionalLight:DirectionalLight;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase implements IDisplayObjectNode\n{\n\tpublic isContainerNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:DisplayObject;\n\tprivate _partition:PartitionBase;\n\tpublic _bounds:BoundingVolumeBase;\n\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper();\n\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis.numEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get displayObject():DisplayObject\n\t{\n\t\treturn this._entity;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.displayObject.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._pool.disposeItem(this._entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\t//this._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:LightProbe;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements INode\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:INode;\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.parent = null;\n\t\tthis._pChildNodes = null;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase\n{\n\tpublic _entityNodePool:EntityNodePool;\n\tpublic _rootNode:INode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:IDisplayObjectNode;\n\n\tconstructor()\n\t{\n\t\tthis._entityNodePool = new EntityNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:INode):INode\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode.displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:INode;\n\t\tvar t:IDisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this._entityNodePool.getItem(displayObject));\n\t}\n}\n\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:PointLight;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tpublic _containerNodePool:ContainerNodePool;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._containerNodePool = new ContainerNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:IDisplayObjectNode):INode\n\t{\n\t\tif (node.displayObject.partition == this || node.displayObject._iIsRoot) {\n\t\t\tthis._rootNode = node;\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!node.isContainerNode && node.displayObject.isContainer)\n\t\t\treturn this._containerNodePool.getItem(<DisplayObjectContainer> node.displayObject);\n\n\t\treturn this._containerNodePool.getItem(node.displayObject.parent);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:Skybox;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.displayObject = null;\n\t\tthis.renderableOwner = null;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//discard entities\n\t\tthis._entities.length = 0;\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n/**\n * @class away.pool.ContainerNodePool\n */\nclass ContainerNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _containerNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer)\n\t{\n\t\tdisplayObjectContainer._iRemoveContainerNode(this._containerNodePool[displayObjectContainer.id]);\n\n\t\tdelete this._containerNodePool[displayObjectContainer.id];\n\t}\n}\n\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tvar item:EntityListItem;\n\t\tvar len:number = this._pool.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\titem = this._pool[i];\n\t\t\titem.entity = null;\n\t\t\titem.next = null;\n\t\t}\n\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObject:DisplayObject)\n\t{\n\t\tdisplayObject._iRemoveEntityNode(this._entityNodePool[displayObject.id]);\n\n\t\tdelete this._entityNodePool[displayObject.id];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\n\t{\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\n\t}\n\n\tprivate static main = EntityNodePool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._offset_x=0;\n\t\tthis._offset_y=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Extensions\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nclass SubGeometryUtils\n{\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\n\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n\n\t//TODO - generate this dyanamically based on num tris\n\n\tpublic static hitTestCurveGeometry(x:number, y:number, z:number, boundingBox:Box, curveSubGeometry:CurveSubGeometry):boolean\n\t{\n\t\tvar positionAttributes:Short3Attributes = curveSubGeometry.positions;\n\t\tvar curveAttributes:Short2Attributes = curveSubGeometry.curves;\n\t\tvar count:number = curveSubGeometry.numVertices;\n\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar curveDim:number = curveAttributes.dimensions;\n\n\t\tvar positions:Float32Array = positionAttributes.get(count);\n\t\tvar curves:Float32Array = curveAttributes.get(count);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tvar index:number = curveSubGeometry.lastCollisionIndex;\n\t\tif(index != -1 && index < count)\n\t\t{\n\t\t\tprecheck:\n\t\t\t{\n\t\t\t\tid0 = index + 2;\n\t\t\t\tid1 = index + 1;\n\t\t\t\tid2 = index + 0;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (count > 150) {\n\t\t\tvar cells:Array<Array<number>> = curveSubGeometry.cells;\n\t\t\tvar divisions:number = cells.length? curveSubGeometry.divisions : (curveSubGeometry.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\n\t\t\tvar minx:number = boundingBox.x;\n\t\t\tvar miny:number = boundingBox.y;\n\n\t\t\tif (!cells.length) { //build grid\n\n\t\t\t\t//now we have bounds start creating grid cells and filling\n\t\t\t\tcells.length = divisions * divisions;\n\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\n\t\t\t\t\tid0 = k + 2;\n\t\t\t\t\tid1 = k + 1;\n\t\t\t\t\tid2 = k + 0;\n\n\t\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t\t//subtractions to push into positive space\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\n\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\n\n\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\n\n\t\t\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\n\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tif(id2 == index) continue;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t\t\tif (d > 0 && az == -1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse if (d < 0 && az == 1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < count; k += 3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tif(id2 == index) continue;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getCurveGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar posDim2:number = posDim*2;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar minX, minY, maxX, maxY, p;\n\n\t\tmaxX = output.width + (minX = output.x);\n\t\tmaxY = output.height + (minY = output.y);\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tp = positions[i];\n\t\t\tif (p < minX)\n\t\t\t\tminX = p;\n\t\t\telse if (p > maxX)\n\t\t\t\tmaxX = p;\n\n\t\t\tp = positions[i + 1];\n\n\t\t\tif (p < minY)\n\t\t\t\tminY = p;\n\t\t\telse if (p > maxY)\n\t\t\t\tmaxY = p;\n\t\t}\n\n\t\toutput.width = maxX - (output.x = minX);\n\t\toutput.height = maxY - (output.y = minY);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static getTriangleGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar pos:number;\n\t\tvar minX:number = output.x;\n\t\tvar minY:number = output.y;\n\t\tvar minZ:number = output.z;\n\t\tvar maxX:number = output.width + minX;\n\t\tvar maxY:number = output.height + minY;\n\t\tvar maxZ:number = output.depth + minZ;\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tpos = positions[i];\n\t\t\tif (pos < minX)\n\t\t\t\tminX = pos;\n\t\t\telse if (pos > maxX)\n\t\t\t\tmaxX = pos;\n\n\t\t\tpos = positions[i + 1];\n\n\t\t\tif (pos < minY)\n\t\t\t\tminY = pos;\n\t\t\telse if (pos > maxY)\n\t\t\t\tmaxY = pos;\n\n\t\t\tpos = positions[i + 2];\n\n\t\t\tif (pos < minZ)\n\t\t\t\tminZ = pos;\n\t\t\telse if (pos > maxZ)\n\t\t\t\tmaxZ = pos;\n\t\t}\n\n\t\toutput.width = maxX - (output.x = minX);\n\t\toutput.height = maxY - (output.y = minY);\n\t\toutput.depth = maxZ - (output.z = minZ);\n\n\t\treturn output;\n\t}\n\n\tpublic static getTriangleGeometrySphereBounds(positionAttributes:Float3Attributes, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Sphere();\n\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar len = positions.length;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tdistanceX = positions[i] - center.x;\n\t\t\tdistanceY = positions[i + 1] - center.y;\n\t\t\tdistanceZ = positions[i + 2] - center.z;\n\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t}\n\n\t\toutput.x = center.x;\n\t\toutput.y = center.y;\n\t\toutput.z = center.z;\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\n\n\t\treturn output;\n\t}\n\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
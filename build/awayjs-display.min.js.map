{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "cells",
    "Array",
    "lastCollisionIndex",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoxBounds",
    "target",
    "getCurveGeometryBoxBounds",
    "getSphereBounds",
    "center",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_pImplicitColorTransform",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pRenderables",
    "_entityNodes",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "zOffset",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "_explicitColorTransform",
    "alphaMultiplier",
    "_iColorTransform",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "x",
    "rotationX",
    "y",
    "rotationY",
    "z",
    "rotationZ",
    "height",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "_updateMaskMode",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "SCENE_TRANSFORM",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "maskMode",
    "MASKS",
    "width",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "copyTo",
    "partition",
    "boundsType",
    "name",
    "mouseEnabled",
    "extra",
    "masks",
    "_iMatrix3D",
    "adapter",
    "colorTransform",
    "removeChild",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "setTo",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "invalidatePartition",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_clearInterfaces",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "MASK_ID",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "event",
    "elements",
    "mouseChildren",
    "concat",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "child",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "start_index",
    "end_index",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "_children",
    "isBlockedByScript",
    "isVisibilityByScript",
    "key",
    "addChildAtDepth",
    "Number",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "idx",
    "props_start_idx",
    "props_len",
    "props_end_index",
    "value_start_index",
    "props_type",
    "doit",
    "getChildAtSessionID",
    "update_child_stream",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "getTriangleGeometryBoxBounds",
    "getTriangleGeometrySphereBounds",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "getDepthIndexInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "getChildAtDepth",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "bitFlag",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "containerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "shareAnimationGeometry",
    "getSubMeshFromSubGeometry",
    "_center",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "hitTestCurveGeometry",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "TextField",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "reset_textclones",
    "isAsset",
    "text",
    "numFrames",
    "exit_frame",
    "_skipAdvance",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "skipChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "instance",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/entities/TextField",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "TextFieldType",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "reConstruct",
    "_textFormat",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "textlines",
    "split",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "textWidth",
    "fw",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "curves",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "parent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "iAddNode",
    "node",
    "isContainer",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "disposeItem",
    "iRemoveEntity",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "pop",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "iMarkForUpdate",
    "_updateQueue",
    "_iUpdateQueueNext",
    "findParentForNode",
    "targetNode",
    "getItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "posDim",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "bx",
    "by",
    "curvex",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "precheck",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "posDim2",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "tempFloat32x4",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\t//used for hittesting geometry\r\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\r\n\tpublic lastCollisionIndex:number = -1;\r\n\tpublic divisions:number;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoxBounds(target:Box = null):Box\r\n\t{\r\n\t\treturn SubGeometryUtils.getCurveGeometryBoxBounds(this._positions, target, this._numVertices);\r\n\t}\r\n\r\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\r\n\t{\r\n\t\t//TODO bounding calculations for triangles\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\r\n{\r\n\tpublic _iIsRoot:boolean;\r\n\tpublic _adapter:IDisplayObjectAdapter;\r\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\r\n\tpublic _elementsDirty:boolean;\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pIsEntity:boolean = false;\r\n\tpublic _pIsContainer:boolean = false;\r\n\tpublic _sessionID:number = -1;\r\n\tpublic _depthID:number = -16384;\r\n\r\n\tprivate _explicitPartition:PartitionBase;\r\n\tpublic _pImplicitPartition:PartitionBase;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _sceneChanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tprivate _explicitMaskId:number = -1;\r\n\tprivate _explicitMasks:Array<DisplayObject>;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tpublic _pImplicitMaskId:number = -1;\r\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\r\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _explicitColorTransform:ColorTransform;\r\n\tpublic _pImplicitColorTransform:ColorTransform = new ColorTransform();\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean;\r\n\tprivate _rotationDirty:boolean;\r\n\tprivate _skewDirty:boolean;\r\n\tprivate _scaleDirty:boolean;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _skewChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToSkewChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tprivate _skewX:number = 0;\r\n\tprivate _skewY:number = 0;\r\n\tprivate _skewZ:number = 0;\r\n\tprivate _scaleX:number = 1;\r\n\tprivate _scaleY:number = 1;\r\n\tprivate _scaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _ske:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _inheritColorTransform:boolean = false;\r\n\tprivate _maskMode:boolean = false;\r\n\r\n\tpublic _hierarchicalPropsDirty:number;\r\n\r\n\t//temp vector used in global to local\r\n\tprivate _tempVector3D:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IDisplayObjectAdapter\r\n\t{\r\n\t\treturn this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IDisplayObjectAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n\t\tif (this._inheritColorTransform == value)\r\n\t\t\treturn;\r\n\r\n        this._inheritColorTransform = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._explicitColorTransform? this._explicitColorTransform.alphaMultiplier : 1;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n\t\tif (!this._explicitColorTransform)\r\n\t\t\tthis._iColorTransform = new ColorTransform();\r\n\r\n        this._explicitColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this.scaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._setScaleZ(val/this.getBox().depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this.rotationX;\r\n\t\tthis._eulers.y = this.rotationY;\r\n\t\tthis._eulers.z = this.rotationZ;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis.rotationX = value.x;\r\n\t\tthis.rotationY = value.y;\r\n\t\tthis.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this.scaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._setScaleY(val/this.getBox().height);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isContainer()\r\n\t{\r\n\t\treturn this._pIsContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\tpublic get maskMode():boolean\r\n\t{\r\n\t\treturn this._maskMode;\r\n\t}\r\n\r\n\tpublic set maskMode(value:boolean)\r\n\t{\r\n\t\tif (this._maskMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maskMode = value;\r\n\r\n\t\tthis._explicitMaskId = value? this.id : -1;\r\n\r\n\t\tthis._updateMaskMode();\r\n\t}\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():PartitionBase\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:PartitionBase)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\r\n\r\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x = pivot.x;\r\n\t\tthis._pivot.y = pivot.y;\r\n\t\tthis._pivot.z = pivot.z;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tthis._setScaleX(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tthis._setScaleY(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tthis._setScaleZ(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the horizontal skew(angle) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewX;\r\n\t}\r\n\r\n\tpublic set skewX(val:number)\r\n\t{\r\n\t\tif (this.skewX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewX = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewY;\r\n\t}\r\n\r\n\tpublic set skewY(val:number)\r\n\t{\r\n\t\tif (this.skewY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewY = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewZ;\r\n\t}\r\n\r\n\tpublic set skewZ(val:number)\r\n\t{\r\n\t\tif (this.skewZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewZ = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\r\n\t}\r\n\r\n\tpublic get masks():Array<DisplayObject>\r\n\t{\r\n\t\treturn this._explicitMasks;\r\n\t}\r\n\r\n\tpublic set masks(value:Array<DisplayObject>)\r\n\t{\r\n\t\tif (this._explicitMasks == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMasks = value;\r\n\r\n\t\t//make sure maskMode is set to true for all masks\r\n\t\tif (value != null && value.length) {\r\n\t\t\tvar len:number = value.length;\r\n\t\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t\tvalue[i].maskMode = true;\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this.scaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._setScaleX(val/this.getBox().width);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = this._matrix3D.rawData[12] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = this._matrix3D.rawData[13] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = this._matrix3D.rawData[14] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic zOffset:number = 0;\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n\t\tthis._transformComponents = new Array<Vector3D>(4);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._ske;\r\n\t\tthis._transformComponents[3] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar newInstance:DisplayObject = new DisplayObject();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(newInstance:DisplayObject)\r\n\t{\r\n\t\tnewInstance.partition = this._explicitPartition;\r\n\t\tnewInstance.boundsType = this._boundsType;\r\n\t\tnewInstance.pivot = this._pivot;\r\n\t\tnewInstance.name = this._pName;\r\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\r\n\t\tnewInstance.extra = this.extra;\r\n\t\tnewInstance.maskMode = this._maskMode;\r\n\r\n\t\tif (this._explicitMasks)\r\n\t\t\tnewInstance.masks = this._explicitMasks;\r\n\r\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\r\n\r\n\t\tif (this._adapter)\r\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\r\n\r\n\t\tif (this._transform.colorTransform)\r\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent.removeChild(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\t//scale updates if absolute dimensions are detected\r\n\t\t\tif (this._width != null)\r\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\r\n\r\n\t\t\tif (this._height != null)\r\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\r\n\r\n\t\t\tif (this._depth != null)\r\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point, target:Point = null):Point\r\n\t{\r\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Point();\r\n\r\n\t\ttarget.x = pos.x;\r\n\t\ttarget.y = pos.y;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @param maskFlag Whether to check against the object when it is used as mask\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isMask():boolean\r\n\t{\r\n\t\treturn this._explicitMaskId == -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Float32Array;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point, target:Point = null):Point\r\n\t{\r\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Point();\r\n\r\n\t\ttarget.x = pos.x;\r\n\t\ttarget.y = pos.y;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis.x = dx;\r\n\t\tthis.y = dy;\r\n\t\tthis.z = dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (dx == 0 && dy == 0 && dz == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\tpublic reset():void\r\n\t{\r\n\t\tthis.visible = true;\r\n\r\n\t\tif(this._iMatrix3D)\r\n\t\t\tthis._iMatrix3D.identity();\r\n\r\n\t\tif(this._iColorTransform)\r\n\t\t\tthis._iColorTransform.clear();\r\n\r\n\t\t//this.name=\"\";\r\n\t\tthis.masks = null;\r\n\r\n\t\tthis.maskMode = false;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[3];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this.scaleX;\r\n\t\t\tscale.y = this.scaleY;\r\n\t\t\tscale.z = this.scaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis.rotationX = ax;\r\n\t\tthis.rotationY = ay;\r\n\t\tthis.rotationZ = az;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = false;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis.x += x*len;\r\n\t\tthis.y += y*len;\r\n\t\tthis.z += z*len;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis.x = this._pos.x;\r\n\t\tthis.y = this._pos.y;\r\n\t\tthis.z = this._pos.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():PartitionBase\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\tthis._pUpdatePivot();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 12; i++)\r\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\r\n\r\n\t\tthis.x = val.rawData[12];\r\n\t\tthis.y = val.rawData[13];\r\n\t\tthis.z = val.rawData[14];\r\n\r\n\t\tthis._elementsDirty = true;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t}\r\n\r\n\tpublic get _iColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._explicitColorTransform;\r\n\t}\r\n\r\n\tpublic set _iColorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._explicitColorTransform = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tthis._pParent = value;\r\n\r\n        if (value)\r\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\r\n\t\telse\r\n\t\t\tthis._iSetScene(null, null);\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\r\n\t}\r\n\r\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\r\n\t{\r\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\r\n\t\tif (!newPropDirty)\r\n\t\t\treturn true;\r\n\r\n\t\tthis._hierarchicalPropsDirty |= propDirty;\r\n\r\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\r\n\t\t\tthis._inverseSceneTransformDirty = true;\r\n\t\t\tthis._scenePositionDirty = true;\r\n\r\n\t\t\tif (this.isEntity)\r\n\t\t\t\tthis.invalidatePartition();\r\n\r\n\t\t\tif (this._pParent)\r\n\t\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\r\n\r\n\t\t\t//gc associated objects\r\n\t\t\tthis._clearInterfaces();\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._listenToSceneChanged)\r\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._ske.x = this._skewX;\r\n\t\tthis._ske.y = this._skewY;\r\n\t\tthis._ske.z = this._skewZ;\r\n\r\n\t\tthis._sca.x = this._scaleX;\r\n\t\tthis._sca.y = this._scaleY;\r\n\t\tthis._sca.z = this._scaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t}\r\n\r\n\tpublic _pUpdatePivot()\r\n\t{\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.updateController();\r\n\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._skewDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\r\n\t\t\tthis._updateVisible();\r\n\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iAssignedMaskId():number\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\r\n\t\t\tthis._updateMaskId();\r\n\r\n\t\treturn this._pImplicitMaskId;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\r\n\t\t\tthis._updateMasks();\r\n\r\n\t\treturn this._pImplicitMasks;\r\n\t}\r\n\r\n\tpublic _iMasksConfig():Array<Array<number>>\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\r\n\t\t\tthis._updateMasks();\r\n\r\n\t\treturn this._pImplicitMaskIds;\r\n\t}\r\n\r\n\tpublic _iAssignedColorTransform():ColorTransform\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\r\n\t\t\tthis._updateColorTransform();\r\n\r\n\t\treturn this._pImplicitColorTransform;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\r\n\t\t\tthis._updateMouseEnabled();\r\n\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\r\n\t\tif (!this._pivotZero)\r\n\t\t\tthis.invalidatePivot();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateSkew(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._skewDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewDirty = true;\r\n\r\n\t\tif (this._listenToSkewChanged)\r\n\t\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.splice(this._entityNodes.indexOf(entityNode), 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n\tprivate queueDispatch(event:Event)\r\n\t{\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\tprivate updateElements()\r\n\t{\r\n\t\tthis._elementsDirty = false;\r\n\r\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\r\n\t\t\tthis._skewX = vec.x;\r\n\t\t\tthis._skewY = vec.y;\r\n\t\t\tthis._skewZ = vec.z;\r\n\r\n\t\t\tthis.invalidateSkew(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[3];\r\n\r\n\t\tthis._width = null;\r\n\t\tthis._height = null;\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\r\n\t\t\tthis._scaleX = vec.x;\r\n\t\t\tthis._scaleY = vec.y;\r\n\t\t\tthis._scaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale(false);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _setScaleX(val:number)\r\n\t{\r\n\t\tif (this.scaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleY(val:number)\r\n\t{\r\n\t\tif (this.scaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleZ(val:number)\r\n\t{\r\n\t\tif (this.scaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tpublic _updateMouseEnabled()\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\r\n\t}\r\n\r\n\tprivate _updateVisible()\r\n\t{\r\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\r\n\t}\r\n\r\n\tprivate _updateMaskId()\r\n\t{\r\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\r\n\t}\r\n\r\n\tprivate _updateMasks()\r\n\t{\r\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\r\n\r\n\t\tthis._pImplicitMaskIds.length = 0;\r\n\r\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\r\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\r\n\t\t\tvar numChildren:number;\r\n\t\t\tvar implicitChildren:Array<DisplayObject>;\r\n\t\t\tvar implicitChildIds:Array<number>;\r\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\r\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\r\n\t\t\t\tnumChildren = implicitChildren.length;\r\n\t\t\t\timplicitChildIds = new Array<number>();\r\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\r\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\r\n\r\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\r\n\t}\r\n\r\n\tprivate _updateColorTransform()\r\n\t{\r\n\t\tif (this._inheritColorTransform && this._pParent) {\r\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\r\n\t\t\tif (this._explicitColorTransform)\r\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._explicitColorTransform);\r\n\t\t} else {\r\n\t\t\tif (this._explicitColorTransform)\r\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._explicitColorTransform);\r\n\t\t\telse\r\n\t\t\t\tthis._pImplicitColorTransform.clear();\r\n\t\t}\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\r\n\t}\r\n\r\n\tpublic _updateMaskMode()\r\n\t{\r\n\t\tif (this.maskMode)\r\n\t\t\tthis.mouseEnabled = false;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\r\n\t}\r\n\r\n\tpublic _clearInterfaces()\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = this._entityNodes.length - 1; i >= 0; i--)\r\n\t\t\tthis._entityNodes[i].dispose();\r\n\r\n\t\tfor (i = this._pRenderables.length - 1; i >= 0; i--)\r\n\t\t\tthis._pRenderables[i].dispose();\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "/**\r\n *\r\n */\r\nclass HierarchicalProperties\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MOUSE_ENABLED:number = 1;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static VISIBLE:number = 2;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MASK_ID:number = 4;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MASKS:number = 8;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static COLOR_TRANSFORM:number = 16;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SCENE_TRANSFORM:number = 32;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ALL:number = 63;\r\n}\r\n\r\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoxBounds(target:Box = null):Box\r\n\t{\r\n\t\t//TODO bounding calculations for lines\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\r\n\t{\r\n\t\t//TODO bounding calculations for lines\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoxBounds(target:Box = null):Box\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic _clearInterfaces()\r\n\t{\r\n\t\tfor (var i:number = this._renderables.length - 1; i >= 0; i--)\r\n\t\t\tthis._renderables[i].dispose();\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\n\r\nclass Timeline\r\n{\r\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\r\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\r\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\r\n\r\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\r\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\r\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\r\n\r\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\r\n\r\n\t// synched:\r\n\tpublic frame_command_indices:ArrayBufferView;\r\n\tpublic frame_recipe:ArrayBufferView;\r\n\r\n\t// synched:\r\n\tpublic command_index_stream:ArrayBufferView;\r\n\tpublic command_length_stream:ArrayBufferView;\r\n\r\n\tpublic add_child_stream:ArrayBufferView;\r\n\tpublic remove_child_stream:ArrayBufferView;\r\n\tpublic update_child_stream:ArrayBufferView;\r\n\r\n\tpublic update_child_props_length_stream:ArrayBufferView;\r\n\tpublic update_child_props_indices_stream:ArrayBufferView;\r\n\r\n\tpublic property_index_stream:ArrayBufferView;\r\n\tpublic property_type_stream:ArrayBufferView;\r\n\r\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\r\n\r\n\t// propertiy_values_stream:\r\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_strings:Array<string>;\r\n\r\n\tprivate _potentialPrototypes:Array<DisplayObject>;\r\n\r\n\tpublic numKeyFrames:number=0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis.keyframe_indices=[];\r\n\r\n\t\tthis._potentialPrototypes=[];\r\n\t\tthis._labels={};\r\n\t\tthis._framescripts={};\r\n\t\tthis._framescripts_translated={};\r\n\t}\r\n\r\n\tpublic init():void\r\n\t{\r\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\r\n\t\t\treturn;\r\n\r\n\t\tthis.keyframe_firstframes = [];\r\n\t\tthis.keyframe_constructframes = [];\r\n\t\tvar frame_cnt = 0;\r\n\t\tvar ic = 0;\r\n\t\tvar ic2 = 0;\r\n\t\tvar keyframe_cnt = 0;\r\n\t\tvar last_construct_frame = 0;\r\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\r\n\t\t\tvar duration=this.keyframe_durations[(ic)];\r\n\r\n\t\t\tif(this.frame_recipe[ic] & 1)\r\n\t\t\t\tlast_construct_frame = keyframe_cnt;\r\n\r\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\r\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\r\n\r\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\r\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get_framescript(keyframe_index:number):string\r\n\t{\r\n\t\tif(this._framescripts[keyframe_index]==null)\r\n\t\t\treturn \"\";\r\n\r\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\r\n\t\t\treturn this._framescripts[keyframe_index];\r\n\t\telse{\r\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\r\n\t\t}\r\n\r\n\t\treturn \"\";\r\n\t}\r\n\tpublic add_framescript(value:string, keyframe_index:number)\r\n\t{\r\n\t\tthis._framescripts[keyframe_index] = value;\r\n\t}\r\n\r\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\r\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\r\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\r\n\t}\r\n\r\n\r\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\r\n\t{\r\n\t\tif(this._framescripts[keyframe_idx]!=null){\r\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\r\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\r\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\r\n\t\t\t}\r\n\t\t\tif(scriptPass1)\r\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\r\n\t\t\telse\r\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get numFrames():number\r\n\t{\r\n\t\treturn this.keyframe_indices.length;\r\n\t}\r\n\r\n\r\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\r\n\t{\r\n\t\treturn this._potentialPrototypes[id];\r\n\r\n\t}\r\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\r\n\t{\r\n\t\treturn this.keyframe_indices[frame_index];\r\n\t}\r\n\r\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\r\n\t{\r\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\r\n\t\tthis_clone.name=\"\";\r\n\t\treturn this_clone;\r\n\t}\r\n\r\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\r\n\t{\r\n\t\tvar id = this._potentialPrototypes.length;\r\n\t\tthis._potentialPrototypes[id] = prototype;\r\n\t}\r\n\r\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\r\n\t{\r\n\t\tvar key_frame_index:number = this._labels[label];\r\n\t\tif(key_frame_index>=0)\r\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\r\n\t}\r\n\r\n\r\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\r\n\t\tif (frameIndex == value) //we are already on exactly this frame.\r\n\t\t\treturn;\r\n\r\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\r\n\r\n\t\tvar firstframe:number = this.keyframe_firstframes[target_keyframe_idx];\r\n\r\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\r\n\t\t\ttarget_mc.set_currentFrameIndex(value);\r\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\r\n\t\t\t//if (!skip_script && firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\r\n\t\t\t//\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\r\n\t\t\treturn;\r\n\r\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\r\n\r\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\r\n\r\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\r\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\r\n\r\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\r\n\t\tvar start_construct_idx:number = break_frame_idx;\r\n\r\n\t\tif (jump_forward && !jump_gap) // in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\r\n\t\t\tstart_construct_idx = current_keyframe_idx + 1;\r\n\r\n\t\tvar i:number;\r\n\t\tvar k:number;\r\n\t\tvar child:DisplayObject;\r\n\r\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\r\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\r\n\t\t\t\ttarget_mc.removeChildAt(i);\r\n\r\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\r\n\t\tif (!jump_forward)\r\n\t\t\ttarget_mc.resetSessionIDs();\r\n\r\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\r\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\r\n\r\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\r\n\t\tvar update_indices:Array<number> = [];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\r\n\t\tvar update_cnt = 0;\r\n\t\tvar frame_command_idx:number;\r\n\t\tvar frame_recipe:number;\r\n\t\tvar start_index:number;\r\n\t\tvar end_index:number;\r\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\r\n\t\t\tframe_command_idx = this.frame_command_indices[k];\r\n\t\t\tframe_recipe = this.frame_recipe[k];\r\n\r\n\t\t\tif (frame_recipe & 2) {\r\n\t\t\t\t// remove childs\r\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\r\n\t\t\t\tfor (i = start_index; i < end_index; i++)\r\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\r\n\t\t\t}\r\n\r\n\t\t\tif (frame_recipe & 4) {\r\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\r\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t\t\t// this could be changed in exporter\r\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\r\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\r\n\t\t\t}\r\n\r\n\t\t\tif (frame_recipe & 8)\r\n\t\t\t\tupdate_indices[update_cnt++] = frame_command_idx;// execute update command later\r\n\t\t}\r\n\r\n\t\t//  step2: construct the final frame\r\n\r\n\t\t// check what childs are alive on both frames.\r\n\t\t// childs that are not alive anymore get removed and unregistered\r\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\r\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\r\n\t\t\tchild = target_mc._children[i];\r\n\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\r\n\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t} else if (!jump_forward) {\r\n\t\t\t\tif(child.adapter) {\r\n\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\r\n\t\t\t\t\t\tif (child._iMatrix3D) {\r\n\t\t\t\t\t\t\tchild._iMatrix3D.identity();\r\n\t\t\t\t\t\t\tchild.x = child._iMatrix3D.rawData[12];\r\n\t\t\t\t\t\t\tchild.y = child._iMatrix3D.rawData[13];\r\n\t\t\t\t\t\t\tchild._elementsDirty = true;\r\n\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (child._iColorTransform) {\r\n\t\t\t\t\t\t\tchild._iColorTransform.clear();\r\n\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//this.name=\"\";\r\n\t\t\t\t\t\tchild.masks = null;\r\n\t\t\t\t\t\tchild.maskMode = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\r\n\t\t\t\t\t\tchild.visible = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!skip_script && firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\r\n\t\t// now we need to addchild the objects that were added before targetframe first\r\n\t\t// than we can add the script of the targetframe\r\n\t\t// than we can addchild objects added on targetframe\r\n\t\tfor (var key in depth_sessionIDs) {\r\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\r\n\t\t\tif (child._sessionID == -1) {\r\n\t\t\t\tchild._sessionID = depth_sessionIDs[key];\r\n\t\t\t\ttarget_mc.addChildAtDepth(child, Number(key));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\r\n\t\tvar frame_command_idx:number;\r\n\t\tvar len:number = update_indices.length;\r\n\t\tfor (k = 0; k < len; k++) {\r\n\t\t\tframe_command_idx = update_indices[k];\r\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\r\n\t\t}\r\n\r\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\r\n\t}\r\n\r\n\r\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean = false)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\r\n\r\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\r\n\r\n\t\tif(constructed_keyFrameIndex != new_keyFrameIndex) {\r\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\r\n\r\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\r\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\r\n\r\n\t\t\tif(frame_recipe & 1) {\r\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\r\n\t\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t} else if (frame_recipe & 2) {\r\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\t\t\t}\r\n\r\n\t\t\tif(frame_recipe & 4)\r\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\r\n\t\t\tif(frame_recipe & 8)\r\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tfor(var i:number = 0; i < len; i++)\r\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\r\n\t}\r\n\r\n\r\n\t// used to add childs when jumping between frames\r\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t// this could be changed in exporter\r\n\t\tvar idx:number;\r\n\t\tvar end_index:number = start_index + len;\r\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\r\n\t\t\tidx = i*2;\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]);\r\n\t\t\ttarget._sessionID = i;\r\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[idx + 1] - 16383);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tvar props_start_idx:number;\r\n\t\tvar props_len:number;\r\n\t\tvar props_end_index:number;\r\n\t\tvar value_start_index:number;\r\n\t\tvar props_type:number;\r\n\t\tvar doit:boolean;\r\n\t\tvar end_index:number = start_index + len;\r\n\t\tfor(var i:number = start_index; i < end_index; i++) {\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(this.update_child_stream[i]);\r\n\t\t\tif (target != null) {\r\n\t\t\t\tdoit = true;\r\n\t\t\t\t// check if the child is active + not blocked by script\r\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\r\n\t\t\t\t\tdoit = false;\r\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\r\n\t\t\t\tprops_len = this.update_child_props_length_stream[i];\r\n\t\t\t\tprops_end_index = props_start_idx + props_len;\r\n\t\t\t\tfor(var p:number = props_start_idx; p < props_end_index; p++) {\r\n\t\t\t\t\tprops_type = this.property_type_stream[p];\r\n\t\t\t\t\tvalue_start_index = this.property_index_stream[p];\r\n\t\t\t\t\tswitch(props_type){\r\n\t\t\t\t\t\tcase 0:\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\r\n\r\n\t\t\t\t\t\t\t\ttarget.x = new_matrix.rawData[12];\r\n\t\t\t\t\t\t\t\ttarget.y = new_matrix.rawData[13];\r\n\r\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\r\n\r\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 2:// colormatrix\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\r\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target._iColorTransform || (target._iColorTransform = new ColorTransform());\r\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\r\n\r\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 3: //mask the mc with a list of objects\r\n\r\n\t\t\t\t\t\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\r\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\r\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\r\n\t\t\t\t\t\t\tvar mask:DisplayObject;\r\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\r\n\t\t\t\t\t\t\tvar numMasks:number = this.properties_stream_int[value_start_index++];\r\n\r\n\t\t\t\t\t\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\r\n\t\t\t\t\t\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\r\n\t\t\t\t\t\t\tfor(var m:number = 0; m < numMasks; m++)\r\n\t\t\t\t\t\t\t\tif((mask = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++])))\r\n\t\t\t\t\t\t\t\t\tmasks.push(mask);\r\n\r\n\t\t\t\t\t\t\ttarget.masks = masks;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 5:// instance name button instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\r\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 6://visible\r\n\t\t\t\t\t\t\tif (!target.adapter || !target.adapter.isVisibilityByScript())\r\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 11:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\r\n\r\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 12:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\r\n\t\t\t\t\t\t\t\ttarget.x = this.properties_stream_f32_mtx_pos[value_start_index++];\r\n\t\t\t\t\t\t\t\ttarget.y = this.properties_stream_f32_mtx_pos[value_start_index];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 200:\r\n\t\t\t\t\t\t\ttarget.maskMode = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 201:\r\n\t\t\t\t\t\t\ttarget.masks = null;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Timeline;",
    "/**\r\n *\r\n */\r\nclass TouchPoint\r\n{\r\n\tx:number;\r\n\r\n\ty:number;\r\n\r\n\tid:number;\r\n\r\n\tconstructor(x:number, y:number, id:number)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.id = id;\r\n\t}\r\n}\r\n\r\nexport = TouchPoint;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._displayObject._iColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(val:ColorTransform)\r\n\t{\r\n\t\tthis._displayObject._iColorTransform = val;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoxBounds(target:Box = null):Box\r\n\t{\r\n\t\treturn SubGeometryUtils.getTriangleGeometryBoxBounds(this._positions, target, this._numVertices);\r\n\t}\r\n\r\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\r\n\t{\r\n\t\treturn SubGeometryUtils.getTriangleGeometrySphereBounds(this._positions, center, target, this._numVertices);\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveNormals = false;\r\n\t\tclone.autoDeriveTangents = false;\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.normals)\r\n\t\t\tclone.setNormals(this.normals.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\tif (this.tangents)\r\n\t\t\tclone.setTangents(this.tangents.clone());\r\n\r\n\t\tif (this.secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\r\n\r\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\r\n\t\tif (this.jointIndices)\r\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\r\n\r\n\t\tif (this.jointWeights)\r\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\r\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:Float32Array = matrix.rawData;\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Float32Array = matrix.rawData;\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\nimport Extensions\t\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _depth_childs:Object = {};\r\n\tprivate _nextHighestDepth:number = 0;\r\n\tprivate _nextHighestDepthDirty:boolean;\r\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\r\n\t\t\tthis._updateMouseEnabled();\r\n\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsContainer = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAt(child, this._children.length);\r\n\t}\r\n\r\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\r\n\r\n\r\n\t\tvar index = this.getDepthIndexInternal(depth);\r\n\r\n\t\tif (index != -1) {\r\n\t\t\tif (replace) {\r\n\t\t\t\tthis.removeChildAt(index);\r\n\t\t\t} else {\r\n\t\t\t\t//move depth of existing child up by 1\r\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._nextHighestDepth < depth + 1)\r\n\t\t\tthis._nextHighestDepth = depth + 1;\r\n\r\n\t\tthis._depth_childs[depth] = child;\r\n\t\tthis._children.push(child);\r\n\r\n\t\tchild._depthID = depth;\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObjectContainer\r\n\t{\r\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(newInstance:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper.copyTo(newInstance);\r\n\r\n\t\tnewInstance.mouseChildren = this._mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tnewInstance.addChild(this._children[i].clone());\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\r\n\t\t\tthis._children[i].dispose();\r\n\t}\r\n\r\n\tpublic getChildAtDepth(depth:number):DisplayObject\r\n\t{\r\n\t\treturn this._depth_childs[depth];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\tpublic getNextHighestDepth()\r\n\t{\r\n\t\tif (this._nextHighestDepthDirty)\r\n\t\t\tthis._updateNextHighestDepth();\r\n\r\n\t\treturn this._nextHighestDepth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildAt(this.getChildIndex(child));\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number, index2:number)\r\n\t{\r\n\t\tvar depth:number = this._children[index2]._depthID;\r\n\t\tvar child:DisplayObject = this._children[index1];\r\n\r\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\r\n\t\tthis.addChildAtDepth(child, depth);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tvar min:number;\r\n\t\t\tvar max:number;\r\n\t\t\tvar minX:number, minY:number, minZ:number;\r\n\t\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\r\n\t{\r\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\r\n\t{\r\n\t\tsuper._iSetScene(value, partition);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._iSetScene(value, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tpublic removeChildAtInternal(index:number):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\r\n\r\n\t\t//update next highest depth\r\n\t\tif (this._nextHighestDepth == child._depthID + 1)\r\n\t\t\tthis._nextHighestDepthDirty = true;\r\n\r\n\t\tdelete this._depth_childs[child._depthID];\r\n\r\n\t\tchild._depthID = -16384;\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\r\n\t{\r\n\t\tif (!this._depth_childs[depth])\r\n\t\t\treturn -1;\r\n\r\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\r\n\t}\r\n\r\n\tprivate _updateNextHighestDepth()\r\n\t{\r\n\t\tthis._nextHighestDepthDirty = false;\r\n\r\n\t\tthis._nextHighestDepth = 0;\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\r\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\r\n\r\n\t\tthis._nextHighestDepth += 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\tif(this._pImplicitMaskId !== -1 && !masksFlag)\r\n\t\t\treturn;\r\n\r\n\t\tif(!this._pImplicitVisibility)\r\n\t\t\treturn;\r\n\r\n\t\tvar masks:Array<DisplayObject> = this.masks;\r\n\r\n\t\tif (masks) {\r\n\t\t\tvar numMasks:number = masks.length;\r\n\t\t\tvar maskHit:boolean = false;\r\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\r\n\t\t\t\tif (masks[i].hitTestPoint(x, y, shapeFlag, true)) {\r\n\t\t\t\t\tmaskHit = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!maskHit)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\r\n\t}\r\n\r\n\tpublic _iAddContainerNode(containerNode:ContainerNode):ContainerNode\r\n\t{\r\n\t\tthis._containerNodes.push(containerNode);\r\n\r\n\t\treturn containerNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveContainerNode(containerNode:ContainerNode):ContainerNode\r\n\t{\r\n\t\tthis._containerNodes.splice(this._containerNodes.indexOf(containerNode), 1);\r\n\r\n\t\treturn containerNode;\r\n\t}\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\r\n\t{\r\n\t\tvar numChildren:number = this.numChildren;\r\n\t\tfor(var i:number = 0; i < numChildren; i++)\r\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic _updateMaskMode()\r\n\t{\r\n\t\tif (this.maskMode)\r\n\t\t\tthis.mouseChildren = false;\r\n\r\n\t\tsuper._updateMaskMode();\r\n\t}\r\n\r\n\tpublic _clearInterfaces()\r\n\t{\r\n\t\tsuper._clearInterfaces();\r\n\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = this._children.length - 1; i >= 0; i--)\r\n\t\t\tthis._children[i]._clearInterfaces();\r\n\r\n\t\tfor (i = this._containerNodes.length - 1; i >= 0; i--)\r\n\t\t\tthis._containerNodes[i].dispose();\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loaderSession:LoaderSession;\r\n\tprivate _loaderSessionGarbage:LoaderSession;\r\n\tprivate _gcTimeoutIID:number;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (!this._loaderSession)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\r\n\t\t}\r\n\t\t\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, LoaderSession will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tprivate _getLoaderSession()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tthis._loaderSession = lib.getLoaderSession();\r\n\t\t} else {\r\n\t\t\tthis._loaderSession = new LoaderSession();\r\n\t\t}\r\n\r\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn this._loaderSession;\r\n\t}\r\n\r\n\tprivate _disposeLoaderSession()\r\n\t{\r\n\t\t// Add loader to garbage - for a collection sweep and kill\r\n\t\tthis._loaderSessionGarbage = this._loaderSession;\r\n\t\tdelete this._loaderSession;\r\n\t\tthis._loaderSession = null;\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tLoaderSession.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tLoaderSession.enableParsers(parserClasses);\r\n\t}\r\n\t\r\n\tprivate loaderSessionGC():void\r\n\t{\r\n\t\t//remove listeners\r\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\tif (!this._useAssetLib)\r\n\t\t\tthis._loaderSessionGarbage.stop();\r\n\r\n\t\tdelete this._loaderSessionGarbage;\r\n\t\tthis._loaderSessionGarbage = null;\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends DisplayObjectContainer\r\n{\r\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\r\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\r\n\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor(partition:PartitionBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.partition = partition || new BasicPartition();\r\n\r\n\t\tthis._iIsRoot = true;\r\n\t\tthis._pScene = this;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:PartitionBase)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:PartitionBase)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tget touchPoints():Array<TouchPoint>\r\n\t{\r\n\t\treturn this._pTouchPoints;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\r\n\t{\r\n\t\tvar localPosition:Vector3D;\r\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\r\n\r\n\t\tvar len:number = this._pTouchPoints.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\r\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\r\n\t\t}\r\n\r\n\t\treturn localTouchPoints;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\tpublic _pControllerDirty:boolean;\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject)\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pAutoUpdate)\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\telse\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic updateController()\r\n\t{\r\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\r\n\t\t\tthis._pControllerDirty = false;\r\n\t\t\tthis.pNotifyUpdate();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pControllerDirty = true;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\r\n\t\tvar invLen:number;\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\r\n\t{\r\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\r\n\t\t\treturn true;\r\n\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\r\n\t\t\tthis._viewProjectionDirty = true;\r\n\t\t\tthis._frustumPlanesDirty = true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _center:Vector3D;\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t//temp point used in hit testing\r\n\tprivate _tempPoint:Point = new Point();\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():Mesh\r\n\t{\r\n\t\tvar newInstance:Mesh = new Mesh(this._geometry, this._material);\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(newInstance:Mesh)\r\n\t{\r\n\t\tsuper.copyTo(newInstance);\r\n\r\n\t\tnewInstance.geometry = this._geometry;\r\n\t\tnewInstance.material = this._material;\r\n\t\tnewInstance.castsShadows = this._castsShadows;\r\n\t\tnewInstance.shareAnimationGeometry = this._shareAnimationGeometry;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n\t\t\tnewInstance._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n        if (this._animator)\r\n\t\t\tnewInstance.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar len:number = subGeoms.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pBoxBounds = subGeoms[i].getBoxBounds(this._pBoxBounds);\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\r\n\t\tif (!this._center)\r\n\t\t\tthis._center = new Vector3D();\r\n\r\n\t\tthis._center.x = box.x + box.width/2;\r\n\t\tthis._center.y = box.y + box.height/2;\r\n\t\tthis._center.z = box.z + box.depth/2;\r\n\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar len:number = subGeoms.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pSphereBounds = subGeoms[i].getSphereBounds(this._center, this._pSphereBounds);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\r\n\t{\r\n\t\tif(this._geometry && this._geometry.subGeometries.length) {\r\n\t\t\tthis._tempPoint.setTo(x,y);\r\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\r\n\t\t\tvar box:Box;\r\n\r\n\t\t\t//early out for box test\r\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t//early out for non-shape tests\r\n\t\t\tif (!shapeFlag)\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t//ok do the geometry thing\r\n\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\t\tvar subGeometriesCount:number = subGeometries.length;\r\n\t\t\tfor(var i:number = 0; i < subGeometriesCount; i++)\r\n\t\t\t\tif (SubGeometryUtils.hitTestCurveGeometry(local.x, local.y, 0, box, <CurveSubGeometry> subGeometries[i]))\r\n\t\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\r\n\t}\r\n\r\n\tpublic _clearInterfaces()\r\n\t{\r\n\t\tsuper._clearInterfaces();\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subMeshes[i]._clearInterfaces();\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\r\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\r\nimport TextField = require(\"awayjs-display/lib/entities/TextField\");\r\n\r\nimport MouseEvent               = require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\r\nimport Timeline                 = require(\"awayjs-display/lib/base/Timeline\");\r\nimport FrameScriptManager       = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\nclass MovieClip extends DisplayObjectContainer\r\n{\r\n    public static assetType:string = \"[asset MovieClip]\";\r\n\r\n    private _timeline:Timeline;\r\n\r\n    private _isButton:boolean = false;\r\n    private _onMouseOver:(event:MouseEvent) => void;\r\n    private _onMouseOut:(event:MouseEvent) => void;\r\n    private _onMouseDown:(event:MouseEvent) => void;\r\n    private _onMouseUp:(event:MouseEvent) => void;\r\n\r\n    private _time:number = 0;// the current time inside the animation\r\n    private _currentFrameIndex:number = -1;// the current frame\r\n\r\n    private _isPlaying:boolean = true;// false if paused or stopped\r\n\r\n    // not sure if needed\r\n    private _enterFrame:Event;\r\n    private _skipAdvance : boolean;\r\n    private _isInit:boolean = true;\r\n\r\n    private _potentialInstances:Object = {};\r\n    private _depth_sessionIDs:Object = {};\r\n    private _sessionID_childs:Object = {};\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IMovieClipAdapter\r\n\t{\r\n\t\treturn <IMovieClipAdapter> this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IMovieClipAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    constructor(timeline:Timeline = null)\r\n    {\r\n        super();\r\n\r\n        this._enterFrame = new Event(Event.ENTER_FRAME);\r\n\r\n        this.inheritColorTransform = true;\r\n\r\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\r\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\r\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\r\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\r\n\r\n        this._timeline = timeline || new Timeline();\r\n    }\r\n\r\n\r\n    public reset_textclones()\r\n    {\r\n        if(this.timeline) {\r\n            for (var key in this._potentialInstances) {\r\n                if (this._potentialInstances[key] != null) {\r\n                    if (this._potentialInstances[key].isAsset(TextField)) {\r\n                        (<TextField>this._potentialInstances[key]).text = (<TextField>this.timeline.getPotentialChildPrototype(key)).text;\r\n                    }\r\n                    else if (this._potentialInstances[key].isAsset(MovieClip)) {\r\n                        (<MovieClip>this._potentialInstances[key]).reset_textclones();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public get isInit():boolean\r\n    {\r\n        return this._isInit;\r\n    }\r\n    public set isInit(value:boolean)\r\n    {\r\n        this._isInit = value;\r\n    }\r\n\r\n    public get timeline():Timeline\r\n    {\r\n        return this._timeline;\r\n    }\r\n\r\n    public set timeline(value:Timeline)\r\n    {\r\n        this._timeline = value;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    public loop:boolean = true;\r\n\r\n    public get numFrames() : number\r\n    {\r\n        return this._timeline.numFrames;\r\n    }\r\n\r\n    public jumpToLabel(label:string)\r\n    {\r\n        // the timeline.jumpTolabel will set currentFrameIndex\r\n        this._timeline.jumpToLabel(this, label);\r\n    }\r\n\r\n    /**\r\n     * the current index of the current active frame\r\n     */\r\n    public constructedKeyFrameIndex:number = -1;\r\n\r\n    public exit_frame():void\r\n    {\r\n        this._skipAdvance = false;\r\n\r\n        var child:DisplayObject;\r\n        for (var i:number = this.numChildren - 1; i >= 0; i--) {\r\n            child = this._children[i];\r\n            if(child.isAsset(MovieClip))\r\n                (<MovieClip> child).exit_frame();\r\n        }\r\n    }\r\n    public reset():void\r\n    {\r\n        super.reset();\r\n\r\n        // time only is relevant for the root mc, as it is the only one that executes the update function\r\n        this._time = 0;\r\n\r\n        if(this.adapter)\r\n            this.adapter.freeFromScript();\r\n\r\n        this._isPlaying = true;\r\n\r\n        this._currentFrameIndex = -1;\r\n        this.constructedKeyFrameIndex = -1;\r\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\r\n            this.removeChildAt(i);\r\n\r\n        this._skipAdvance = true;\r\n\r\n        if (this._timeline.numFrames) {\r\n            this._currentFrameIndex = 0;\r\n            this._timeline.constructNextFrame(this, true, true);\r\n        }\r\n    }\r\n\r\n\r\n    public resetSessionIDs()\r\n    {\r\n        this._depth_sessionIDs = {};\r\n    }\r\n\r\n    /*\r\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\r\n     */\r\n    public set_currentFrameIndex(value : number) {\r\n        this._skipAdvance = true;\r\n        this._currentFrameIndex = value;\r\n    }\r\n    /*\r\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\r\n     */\r\n    public get currentFrameIndex():number\r\n    {\r\n        return this._currentFrameIndex;\r\n    }\r\n\r\n    public set currentFrameIndex(value:number)\r\n    {\r\n        if (this._currentFrameIndex == value)\r\n            return;\r\n\r\n        if(this._timeline.numFrames) {\r\n            value = Math.floor(value);\r\n\r\n            var skip_script:boolean = false;\r\n\r\n            if (value < 0) {\r\n                value = 0;\r\n            } else if (value >= this._timeline.numFrames) {\r\n                value = this._timeline.numFrames - 1;\r\n                skip_script=true;\r\n            }\r\n\r\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\r\n            this._skipAdvance = true;\r\n            //this._time = 0;\r\n\r\n            this._timeline.gotoFrame(this, value, skip_script);\r\n        }\r\n\r\n        this._currentFrameIndex = value;\r\n    }\r\n\r\n    public addButtonListeners()\r\n    {\r\n        this._isButton = true;\r\n\r\n        this.stop();\r\n\r\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n    }\r\n\r\n    public removeButtonListeners()\r\n    {\r\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n\r\n    }\r\n\r\n    public getChildAtSessionID(sessionID:number):DisplayObject\r\n    {\r\n        return this._sessionID_childs[sessionID];\r\n    }\r\n\r\n    public getSessionIDDepths():Object\r\n    {\r\n        return this._depth_sessionIDs;\r\n    }\r\n\r\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n    {\r\n        //this should be implemented for all display objects\r\n        child.inheritColorTransform = true;\r\n\r\n        child.reset();// this takes care of transform and visibility\r\n\r\n        super.addChildAtDepth(child, depth, replace);\r\n\r\n        this._depth_sessionIDs[depth] = child._sessionID;\r\n\r\n        this._sessionID_childs[child._sessionID] = child;\r\n\r\n        return child;\r\n    }\r\n\r\n    public removeChildAtInternal(index:number /*int*/):DisplayObject\r\n    {\r\n        var child:DisplayObject = this._children[index];\r\n\r\n        //check to make sure _depth_sessionIDs wasn't modified with a new child\r\n        if (this._depth_sessionIDs[child._depthID] == child._sessionID)\r\n            delete this._depth_sessionIDs[child._depthID];\r\n\r\n        delete this._sessionID_childs[child._sessionID];\r\n\r\n        child._sessionID = -1;\r\n\r\n        if(child.adapter)\r\n            child.adapter.freeFromScript();\r\n\r\n        this.adapter.unregisterScriptObject(child);\r\n\r\n        return super.removeChildAtInternal(index);\r\n    }\r\n\r\n    public get assetType():string\r\n    {\r\n        return MovieClip.assetType;\r\n    }\r\n\r\n    /**\r\n     * Starts playback of animation from current position\r\n     */\r\n    public play()\r\n    {\r\n        this._isPlaying = true;\r\n    }\r\n\r\n    /**\r\n     * should be called right before the call to away3d-render.\r\n     */\r\n    public update()\r\n    {\r\n        this.advanceFrame();\r\n\r\n        // after we advanced the scenegraph, we might have some script that needs executing\r\n        FrameScriptManager.execute_queue();\r\n\r\n        // now we want to execute the onEnter\r\n        this.dispatchEvent(this._enterFrame);\r\n\r\n        // after we executed the onEnter, we might have some script that needs executing\r\n        FrameScriptManager.execute_queue();\r\n\r\n        // now we execute any intervals queued\r\n        FrameScriptManager.execute_intervals();\r\n\r\n        // finally, we execute any scripts that were added from intervals\r\n        FrameScriptManager.execute_queue();\r\n\r\n        this.exit_frame();\r\n    }\r\n\r\n    public getPotentialChildInstance(id:number) : DisplayObject\r\n    {\r\n        if (!this._potentialInstances[id])\r\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\r\n\r\n        return this._potentialInstances[id];\r\n    }\r\n\r\n\r\n    /**\r\n     * Stop playback of animation and hold current position\r\n     */\r\n    public stop()\r\n    {\r\n        this._isPlaying = false;\r\n    }\r\n\r\n    public clone():MovieClip\r\n    {\r\n        var newInstance:MovieClip = new MovieClip(this._timeline);\r\n\r\n        this.copyTo(newInstance);\r\n\r\n        return newInstance;\r\n    }\r\n\r\n    public copyTo(newInstance:MovieClip)\r\n    {\r\n        super.copyTo(newInstance);\r\n\r\n        newInstance.timeline = this._timeline;\r\n        newInstance.loop = this.loop;\r\n    }\r\n\r\n    public advanceFrame(skipChildren:boolean = false)\r\n    {\r\n        var numFrames:number = this._timeline.numFrames;\r\n        if(numFrames) {\r\n            if (((this._isPlaying && !this._skipAdvance) || this._currentFrameIndex == -1) && (this._currentFrameIndex != numFrames - 1 || this.loop)) {\r\n                this._currentFrameIndex++;\r\n                if (this._currentFrameIndex == numFrames) { // looping - jump to first frame.\r\n                    this.currentFrameIndex = 0;\r\n                } else { // not looping - construct next frame\r\n                    this._timeline.constructNextFrame(this);\r\n                }\r\n            }\r\n\r\n            if (!skipChildren) {\r\n                var len:number = this.numChildren;\r\n                var child:DisplayObject;\r\n                for (var i:number = 0; i <  len; ++i) {\r\n                    child = this._children[i];\r\n\r\n                    if (child.isAsset(MovieClip))\r\n                        (<MovieClip> child).advanceFrame();\r\n                }\r\n            }\r\n        }\r\n\r\n        this._skipAdvance = false;\r\n    }\r\n\r\n// DEBUG CODE:\r\n    logHierarchy(depth: number = 0):void\r\n    {\r\n        this.printHierarchyName(depth, this);\r\n\r\n        var len = this.numChildren;\r\n        var child:DisplayObject;\r\n        for (var i:number = 0; i < len; i++) {\r\n            child = this._children[i];\r\n\r\n            if (child.isAsset(MovieClip))\r\n                (<MovieClip> child).logHierarchy(depth + 1);\r\n            else\r\n                this.printHierarchyName(depth + 1, child);\r\n        }\r\n    }\r\n\r\n    printHierarchyName(depth:number, target:DisplayObject)\r\n    {\r\n        var str = \"\";\r\n        for (var i = 0; i < depth; ++i)\r\n            str += \"--\";\r\n\r\n        str += \" \" + target.name + \" = \" + target.id;\r\n        console.log(str);\r\n    }\r\n\r\n    public _clearInterfaces()\r\n    {\r\n        //clear out potential instances\r\n        for (var key in this._potentialInstances) {\r\n            var instance:DisplayObject = this._potentialInstances[key];\r\n\r\n            //only dispose instances that are not used in script ie. do not have an instance name\r\n            if (instance.name == \"\") {\r\n                instance.dispose();\r\n                delete this._potentialInstances[key];\r\n            } else {\r\n                instance._clearInterfaces();\r\n            }\r\n        }\r\n\r\n        super._clearInterfaces();\r\n    }\r\n}\r\nexport = MovieClip;\r\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone.maskMode = this.maskMode;\r\n\t\tclone.masks = this.masks? this.masks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tvalue=value.toString();\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic _textColor:number /*int*/;\r\n\r\n\tpublic get textColor()\r\n\t{\r\n\t\treturn this._textColor;\r\n\t}\r\n\r\n\tpublic set textColor(value:number)\r\n\t{\r\n\t\tthis._textColor = value;\r\n\t\tif(!this._iColorTransform)\r\n\t\t\tthis._iColorTransform = new ColorTransform();\r\n\r\n\t\tthis._iColorTransform.color = value;\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t\tthis.type = TextFieldType.STATIC;\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\r\n\t\tif(this._textFormat==null)\r\n\t\t\treturn;\r\n\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._text==\"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\r\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\r\n\t\tvar y_offset:number=additional_margin_y;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale);\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\r\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\r\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\r\n\t\tvar final_lines_width:Array<number> = [];\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\r\n\t\t\tfinal_lines_chars.push([]);\r\n\t\t\tfinal_lines_char_scale.push([]);\r\n\t\t\tfinal_lines_width.push(0);\r\n\r\n\r\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\r\n\t\t\tfor (var i = 0; i < words.length; i++) {\r\n\t\t\t\tvar word_width:number = 0;\r\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\r\n\t\t\t\tvar word_chars_scale:Array<number> = [];\r\n\t\t\t\tvar c_cnt:number = 0;\r\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\r\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\r\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\r\n\t\t\t\t\tif (this_char == null) {\r\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\r\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\r\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\r\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tword_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\t\tword_width += whitespace_width;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\t\tword_width += whitespace_width;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\r\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + word_width) <= this.textWidth) {\r\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\r\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\r\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\r\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// word does not fit\r\n\t\t\t\t\t// todo respect multiline and autowrapping properties.\r\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\r\n\t\t\t\t\tfinal_lines_chars.push([]);\r\n\t\t\t\t\tfinal_lines_char_scale.push([]);\r\n\t\t\t\t\tfinal_lines_width.push(0);\r\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\r\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\r\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i < (words.length - 1)) {\r\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + whitespace_width) <= this.textWidth) {\r\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\r\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\r\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfinal_lines_chars.push([null]);\r\n\t\t\t\t\t\tfinal_lines_char_scale.push([char_scale]);\r\n\t\t\t\t\t\tfinal_lines_width.push(whitespace_width);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\r\n\r\n\t\t\tvar x_offset:number=additional_margin_x;\r\n\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])/2;\r\n\t\t\t}\r\n\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-additional_margin_x;\r\n\t\t\t}\r\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\r\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tx_offset+=whitespace_width;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tx_offset+=whitespace_width;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ty_offset+=(this._textFormat.font_table.get_font_em_size() * char_scale);\r\n\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone():TextField\r\n    {\r\n\t\tvar newInstance:TextField = new TextField();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n    }\r\n\r\n\r\n\tpublic copyTo(newInstance:TextField)\r\n\t{\r\n\t\tsuper.copyTo(newInstance);\r\n\r\n\t\t// each textfield needs its own geometry.\r\n\t\tnewInstance.geometry=new Geometry();\r\n\r\n\t\tnewInstance.textWidth = this._textWidth;\r\n\t\tnewInstance.textHeight = this._textHeight;\r\n\t\tnewInstance.textFormat = this._textFormat;\r\n\t\t//newInstance.textColor = this._textColor;\r\n\t\tnewInstance.text = this._text;\r\n\t}\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\r\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultColorMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\r\n\t\t}\r\n\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\r\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\r\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImageCube()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImage2D()\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\r\n\t}\r\n\r\n\tprivate static createDefaultTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultColorMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\n\r\nclass FrameScriptManager\r\n{\r\n\t// queues pass1 of scripts.\r\n\tprivate static _queued_mcs:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts:Array<Function> = [];\r\n\r\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\r\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\r\n\r\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\r\n\r\n\tprivate static _intervalID:number=0;\r\n\tpublic static setInterval(func:any):number\r\n\t{\r\n\t\tthis._intervalID++;\r\n\t\tthis._active_intervals[this._intervalID]=func;\r\n\t\treturn this._intervalID\r\n\t}\r\n\r\n\tpublic static clearInterval(id:number):void\r\n\t{\r\n\t\tdelete this._active_intervals[id];\r\n\t}\r\n\r\n\tpublic static execute_intervals():void\r\n\t{\r\n\t\tfor(var key in this._active_intervals){\r\n\t\t\tthis._active_intervals[key].call();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2=[];\r\n\t\tthis._queued_scripts_pass2=[];\r\n\t\tthis._queued_mcs.push(mc);\r\n\t\tthis._queued_scripts.push(script);\r\n\t}\r\n\r\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\tthis._queued_mcs_pass2.push(mc);\r\n\t\tthis._queued_scripts_pass2.push(script);\r\n\t}\r\n\r\n\tpublic static execute_queue():void\r\n\t{\r\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\r\n\t\t\treturn;\r\n\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2=[];\r\n\t\tthis._queued_scripts_pass2=[];\r\n\r\n\t\tvar mc:MovieClip;\r\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\r\n\t\t\t// during the loop we might add more scripts to the queue\r\n\t\t\tmc=this._queued_mcs[i];\r\n\t\t\tif(mc.scene!=null) {\r\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\r\n\t\t\t//\ttry {\r\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\r\n\t\t\t//\t}\r\n\t\t\t/*\tcatch (err) {\r\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\r\n\t\t\t\t\tconsole.log(err.message);\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t}\r\n\t\t// all scripts executed. clear all\r\n\t\tthis._queued_mcs=[];\r\n\t\tthis._queued_scripts=[];\r\n\t}\r\n}\r\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\t if (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\r\n\t\t\t// if nothing is queued, the function will return directly anyway\r\n\t\t\tFrameScriptManager.execute_queue();\r\n\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\r\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tview._pTouchPoints.length = 0;\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\r\n\t\t\tif (event.touches) {\r\n\t\t\t\tvar touch;\r\n\t\t\t\tvar len:number = event.touches.length;\r\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\t\t\ttouch = event.touches[i];\r\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\n\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass BasicPartition extends PartitionBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._rootNode = new NodeBase();\r\n\t}\r\n}\r\n\r\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\r\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\n\r\n/**\r\n * Maintains scenegraph heirarchy when collecting nodes\r\n */\r\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\r\n{\r\n    public isContainerNode:boolean = true;\r\n\r\n    public _iUpdateQueueNext:IDisplayObjectNode;\r\n\r\n    private _pool:ContainerNodePool;\r\n    private _container : DisplayObjectContainer;\r\n    private _partition:PartitionBase;\r\n    private _childDepths:Array<number> = new Array<number>();\r\n    private _childMasks:Array<INode> = new Array<INode>();\r\n    private _numChildMasks:number = 0;\r\n\r\n    public _pEntityNode:IDisplayObjectNode;\r\n\r\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\r\n    {\r\n        super();\r\n\r\n        this._pool = pool;\r\n        this._container = container;\r\n        this._partition = partition;\r\n    }\r\n\r\n    public get displayObject():DisplayObject\r\n    {\r\n        return this._container;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param traverser\r\n     */\r\n    public acceptTraverser(traverser:CollectorBase)\r\n    {\r\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\r\n        if (this.numEntities == 0)\r\n            return;\r\n\r\n        if (this._pEntityNode)\r\n            this._pEntityNode.acceptTraverser(traverser);\r\n\r\n        var i:number;\r\n        for (i = 0; i < this._numChildMasks; i++)\r\n            this._childMasks[i].acceptTraverser(traverser);\r\n\r\n        for (i = 0; i < this._pNumChildNodes; i++)\r\n            this._pChildNodes[i].acceptTraverser(traverser);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    public iAddNode(node:IDisplayObjectNode)\r\n    {\r\n        node.parent = this;\r\n\r\n        if (!node.isContainerNode && node.displayObject.isContainer) {\r\n            this._pEntityNode = node;\r\n        } else if (node.displayObject.maskMode) {\r\n            this._childMasks.push(node);\r\n            this._numChildMasks = this._childMasks.length;\r\n        } else {\r\n            var depth:number = node.displayObject._depthID;\r\n            var len:number = this._childDepths.length;\r\n            var index:number = len;\r\n\r\n            while (index--)\r\n                if (this._childDepths[index] < depth)\r\n                    break;\r\n\r\n            index++;\r\n\r\n            if (index < len) {\r\n                this._pChildNodes.splice(index, 0, node);\r\n                this._childDepths.splice(index, 0, depth);\r\n            } else {\r\n                this._pChildNodes.push(node);\r\n                this._childDepths.push(depth);\r\n            }\r\n            this._pNumChildNodes = this._childDepths.length;\r\n        }\r\n\r\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n        var numEntities:number = node.numEntities;\r\n        node = this;\r\n\r\n        do {\r\n            node.numEntities += numEntities;\r\n        } while ((node = <EntityNode> node.parent) != null);\r\n    }\r\n\r\n    public dispose()\r\n    {\r\n        super.dispose();\r\n\r\n        this._childDepths = null;\r\n        this._childMasks = null;\r\n\r\n        this._pool.disposeItem(this._container);\r\n        this._partition.iRemoveEntity(this);\r\n\r\n        this._pool = null;\r\n        this._container = null;\r\n        this._partition = null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    public iRemoveNode(node:IDisplayObjectNode)\r\n    {\r\n        if (!node.isContainerNode && node.displayObject.isContainer) {\r\n            this._pEntityNode = null;\r\n        } else if (node.displayObject.maskMode) {\r\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\r\n            this._numChildMasks = this._childMasks.length;\r\n        } else {\r\n            var index:number = this._pChildNodes.indexOf(node);\r\n\r\n            this._pChildNodes.splice(index, 1);\r\n            this._childDepths.splice(index, 1);\r\n\r\n            this._pNumChildNodes = this._childDepths.length;\r\n        }\r\n\r\n        node._iUpdateImplicitDebugVisible(false);\r\n\r\n        var numEntities:number = node.numEntities;\r\n        node = this;\r\n\r\n        do {\r\n            node.numEntities -= numEntities;\r\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\r\n    }\r\n}\r\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static assetClass:IAssetClass = DirectionalLight;\r\n\r\n\tprivate _directionalLight:DirectionalLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase implements IDisplayObjectNode\r\n{\r\n\tpublic isContainerNode:boolean = false;\r\n\r\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\r\n\tprivate _pool:EntityNodePool;\r\n\tprivate _entity:DisplayObject;\r\n\tprivate _partition:PartitionBase;\r\n\tpublic _bounds:BoundingVolumeBase;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis.numEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get displayObject():DisplayObject\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.displayObject.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\r\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._pool.disposeItem(this._entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\t//this._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:LightProbe;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase implements INode\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\tpublic numEntities:number = 0;\r\n\r\n\tpublic parent:INode;\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.parent = null;\r\n\t\tthis._pChildNodes = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\r\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:INode)\r\n\t{\r\n\t\tnode.parent = this;\r\n\t\tthis.numEntities += node.numEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities += numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:INode)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities -= numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n\r\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass PartitionBase\r\n{\r\n\tpublic _entityNodePool:EntityNodePool;\r\n\tpublic _rootNode:INode;\r\n\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:IDisplayObjectNode;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._entityNodePool = new EntityNodePool(this);\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\r\n\t{\r\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\r\n\t{\r\n\t\tvar t:IDisplayObjectNode;\r\n\r\n\t\tif (node.parent) {\r\n\t\t\tnode.parent.iRemoveNode(node);\r\n\t\t\tnode.parent = null;\r\n\t\t}\r\n\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findParentForNode(node:INode):INode\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\r\n\t\twhile (node) {\r\n\t\t\t//required for controllers with autoUpdate set to true and queued events\r\n\t\t\tnode.displayObject._iInternalUpdate();\r\n\t\t\tnode = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\t//reset head\r\n\t\tnode = this._updateQueue;\r\n\t\tvar targetNode:INode;\r\n\t\tvar t:IDisplayObjectNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this.findParentForNode(node);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node.parent)\r\n\t\t\t\t\tnode.parent.iRemoveNode(node);\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tif (displayObject.isEntity)\r\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tif (displayObject.isEntity)\r\n\t\t\tthis.iRemoveEntity(this._entityNodePool.getItem(displayObject));\r\n\t}\r\n}\r\n\r\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:PointLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\r\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass SceneGraphPartition extends PartitionBase\r\n{\r\n\tpublic _containerNodePool:ContainerNodePool;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._containerNodePool = new ContainerNodePool(this);\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tsuper.traverse(traverser);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findParentForNode(node:IDisplayObjectNode):INode\r\n\t{\r\n\t\tif (node.displayObject.partition == this || node.displayObject._iIsRoot) {\r\n\t\t\tthis._rootNode = node;\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (!node.isContainerNode && node.displayObject.isContainer)\r\n\t\t\treturn this._containerNodePool.getItem(<DisplayObjectContainer> node.displayObject);\r\n\r\n\t\treturn this._containerNodePool.getItem(node.displayObject.parent);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper._iRegisterEntity(displayObject);\r\n\r\n\t\tif (displayObject.isContainer)\r\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper._iUnregisterEntity(displayObject);\r\n\r\n\t\tif (displayObject.isContainer)\r\n\t\t\tthis.iRemoveEntity(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\r\n\t}\r\n}\r\n\r\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:Skybox;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _x:number;\r\n\tprivate _y:number;\r\n\tprivate _view:View;\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._view = view;\r\n\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\r\n\t{\r\n\t\t//horrible hack for 2d masks\r\n\t\tif (masks != null) {\r\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\r\n\t\t\tvar numLayers:number = masks.length;\r\n\t\t\tvar children:Array<DisplayObject>;\r\n\t\t\tvar numChildren:number;\r\n\t\t\tvar layerHit:boolean;\r\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\r\n\t\t\t\tchildren = masks[i];\r\n\t\t\t\tnumChildren = children.length;\r\n\t\t\t\tlayerHit = false;\r\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\r\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\r\n\t\t\t\t\t\tlayerHit = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!layerHit)\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\n\r\n/**\r\n * @class away.pool.ContainerNodePool\r\n */\r\nclass ContainerNodePool\r\n{\r\n\tprivate static _classPool:Object = new Object();\r\n\r\n\tprivate _containerNodePool:Object = new Object();\r\n\tprivate _partition:PartitionBase;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(partition:PartitionBase)\r\n\t{\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\r\n\t{\r\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer)\r\n\t{\r\n\t\tdisplayObjectContainer._iRemoveContainerNode(this._containerNodePool[displayObjectContainer.id]);\r\n\r\n\t\tdelete this._containerNodePool[displayObjectContainer.id];\r\n\t}\r\n}\r\n\r\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\r\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate static _classPool:Object = new Object();\r\n\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _partition:PartitionBase;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(partition:PartitionBase)\r\n\t{\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(displayObject:DisplayObject):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(displayObject:DisplayObject)\r\n\t{\r\n\t\tdisplayObject._iRemoveEntityNode(this._entityNodePool[displayObject.id]);\r\n\r\n\t\tdelete this._entityNodePool[displayObject.id];\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param imageObjectClass\r\n\t */\r\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\r\n\t{\r\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\r\n\t{\r\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\r\n\t}\r\n\r\n\tprivate static main = EntityNodePool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\r\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\r\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\r\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\r\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\r\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\r\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\r\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\r\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\r\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get font_styles():Array<FontTable>\r\n\t{\r\n\t\treturn this._font_styles;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tpublic _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _whitespace_width:number;\r\n\tprivate _offset_x:number;\r\n\tprivate _offset_y:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t\tthis._offset_x=0;\r\n\t\tthis._offset_y=0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tget offset_x():number {\r\n\t\treturn this._offset_x;\r\n\t}\r\n\r\n\tset offset_x(value:number){\r\n\t\tthis._offset_x=value;\r\n\t}\r\n\r\n\tget offset_y():number {\r\n\t\treturn this._offset_y;\r\n\t}\r\n\r\n\tset offset_y(value:number){\r\n\t\tthis._offset_y=value;\r\n\t}\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_whitespace_width(value:number):void\r\n\t{\r\n\t\tthis._whitespace_width=value;\r\n\t}\r\n\tpublic get_whitespace_width():number\r\n\t{\r\n\t\treturn this._whitespace_width\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>static</code> TextField.\r\n\t */\r\n\tpublic static STATIC:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic fallback_font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Sphere\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Extensions\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\r\n\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 3;\r\n\t\t\tf2 += 3;\r\n\t\t\tf3 += 3;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n\r\n\t//TODO - generate this dyanamically based on num tris\r\n\r\n\tpublic static hitTestCurveGeometry(x:number, y:number, z:number, boundingBox:Box, curveSubGeometry:CurveSubGeometry):boolean\r\n\t{\r\n\t\tvar positionAttributes:Short3Attributes = curveSubGeometry.positions;\r\n\t\tvar curveAttributes:Short2Attributes = curveSubGeometry.curves;\r\n\t\tvar count:number = curveSubGeometry.numVertices;\r\n\r\n\t\tvar posDim:number = positionAttributes.dimensions;\r\n\t\tvar curveDim:number = curveAttributes.dimensions;\r\n\r\n\t\tvar positions:Float32Array = positionAttributes.get(count);\r\n\t\tvar curves:Float32Array = curveAttributes.get(count);\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\tvar index:number = curveSubGeometry.lastCollisionIndex;\r\n\t\tif(index != -1 && index < count)\r\n\t\t{\r\n\t\t\tprecheck:\r\n\t\t\t{\r\n\t\t\t\tid0 = index + 2;\r\n\t\t\t\tid1 = index + 1;\r\n\t\t\t\tid2 = index + 0;\r\n\r\n\t\t\t\tax = positions[id0 * posDim];\r\n\t\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\t\tbx = positions[id1 * posDim];\r\n\t\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\t\tcx = positions[id2 * posDim];\r\n\t\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t\t//from a to p\r\n\t\t\t\tvar dx:number = ax - x;\r\n\t\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t\t//edge normal (a-b)\r\n\t\t\t\tvar nx:number = by - ay;\r\n\t\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tbreak precheck;\r\n\r\n\t\t\t\tdx = bx - x;\r\n\t\t\t\tdy = by - y;\r\n\t\t\t\tnx = cy - by;\r\n\t\t\t\tny = -(cx - bx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tbreak precheck;\r\n\r\n\t\t\t\tdx = cx - x;\r\n\t\t\t\tdy = cy - y;\r\n\t\t\t\tnx = ay - cy;\r\n\t\t\t\tny = -(ax - cx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tbreak precheck;\r\n\r\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\r\n\t\t\t\t//check if not solid\r\n\t\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t\t//here be dragons\r\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\t\tbreak precheck;;\r\n\t\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\t\tbreak precheck;;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\t\t//hard coded min vertex count to bother using a grid for\r\n\t\tif (count > 150) {\r\n\t\t\tvar cells:Array<Array<number>> = curveSubGeometry.cells;\r\n\t\t\tvar divisions:number = cells.length? curveSubGeometry.divisions : (curveSubGeometry.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\r\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\r\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\r\n\t\t\tvar minx:number = boundingBox.x;\r\n\t\t\tvar miny:number = boundingBox.y;\r\n\r\n\t\t\tif (!cells.length) { //build grid\r\n\t\t\t\t\r\n\t\t\t\t//now we have bounds start creating grid cells and filling\r\n\t\t\t\tcells.length = divisions * divisions;\r\n\r\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\r\n\t\t\t\t\tid0 = k + 2;\r\n\t\t\t\t\tid1 = k + 1;\r\n\t\t\t\t\tid2 = k + 0;\r\n\r\n\t\t\t\t\tax = positions[id0 * posDim];\r\n\t\t\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\t\t\tbx = positions[id1 * posDim];\r\n\t\t\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\t\t\tcx = positions[id2 * posDim];\r\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t\t\t//subtractions to push into positive space\r\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\r\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\r\n\r\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\r\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\r\n\r\n\r\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\r\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\r\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\r\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\r\n\r\n\t\t\t\t\t\t\t//push in the triangle ids\r\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\r\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\r\n\r\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\r\n\r\n\t\t\tif (nodes == null)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tvar nodeCount:number = nodes.length;\r\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\r\n\t\t\t\tid0 = nodes[k];\r\n\t\t\t\tid1 = nodes[k + 1];\r\n\t\t\t\tid2 = nodes[k + 2];\r\n\r\n\t\t\t\tif(id2 == index) continue;\r\n\r\n\t\t\t\tax = positions[id0 * posDim];\r\n\t\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\t\tbx = positions[id1 * posDim];\r\n\t\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\t\tcx = positions[id2 * posDim];\r\n\t\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t\t//from a to p\r\n\t\t\t\tvar dx:number = ax - x;\r\n\t\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t\t//edge normal (a-b)\r\n\t\t\t\tvar nx:number = by - ay;\r\n\t\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tdx = bx - x;\r\n\t\t\t\tdy = by - y;\r\n\t\t\t\tnx = cy - by;\r\n\t\t\t\tny = -(cx - bx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tdx = cx - x;\r\n\t\t\t\tdy = cy - y;\r\n\t\t\t\tnx = ay - cy;\r\n\t\t\t\tny = -(ax - cx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\r\n\t\t\t\t//check if not solid\r\n\t\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t\t//here be dragons\r\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\t\tvar d:number = uu * uu - vv;\r\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t\t\tif (d > 0 && az == -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\telse if (d < 0 && az == 1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//brute force\r\n\t\tfor(var k:number = 0; k < count; k += 3) {\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tif(id2 == index) continue;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - x;\r\n\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - x;\r\n\t\t\tdy = by - y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - x;\r\n\t\t\tdy = cy - y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic static getCurveGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar posDim:number = positionAttributes.dimensions;\r\n\t\tvar posDim2:number = posDim*2;\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Box();\r\n\r\n\t\tvar minX, minY, maxX, maxY, p;\r\n\r\n\t\tmaxX = output.width + (minX = output.x);\r\n\t\tmaxY = output.height + (minY = output.y);\r\n\r\n\t\tvar len:number = positions.length;\r\n\t\tfor (var i:number = 0; i < len; i += posDim) {\r\n\t\t\tp = positions[i];\r\n\t\t\tif (p < minX)\r\n\t\t\t\tminX = p;\r\n\t\t\telse if (p > maxX)\r\n\t\t\t\tmaxX = p;\r\n\r\n\t\t\tp = positions[i + 1];\r\n\r\n\t\t\tif (p < minY)\r\n\t\t\t\tminY = p;\r\n\t\t\telse if (p > maxY)\r\n\t\t\t\tmaxY = p;\r\n\t\t}\r\n\r\n\t\toutput.width = maxX - (output.x = minX);\r\n\t\toutput.height = maxY - (output.y = minY);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static getTriangleGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar posDim:number = positionAttributes.dimensions;\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Box();\r\n\r\n\t\tvar pos:number;\r\n\t\tvar minX:number = output.x;\r\n\t\tvar minY:number = output.y;\r\n\t\tvar minZ:number = output.z;\r\n\t\tvar maxX:number = output.width + minX;\r\n\t\tvar maxY:number = output.height + minY;\r\n\t\tvar maxZ:number = output.depth + minZ;\r\n\r\n\t\tvar len:number = positions.length;\r\n\t\tfor (var i:number = 0; i < len; i += posDim) {\r\n\t\t\tpos = positions[i];\r\n\t\t\tif (pos < minX)\r\n\t\t\t\tminX = pos;\r\n\t\t\telse if (pos > maxX)\r\n\t\t\t\tmaxX = pos;\r\n\r\n\t\t\tpos = positions[i + 1];\r\n\r\n\t\t\tif (pos < minY)\r\n\t\t\t\tminY = pos;\r\n\t\t\telse if (pos > maxY)\r\n\t\t\t\tmaxY = pos;\r\n\r\n\t\t\tpos = positions[i + 2];\r\n\r\n\t\t\tif (pos < minZ)\r\n\t\t\t\tminZ = pos;\r\n\t\t\telse if (pos > maxZ)\r\n\t\t\t\tmaxZ = pos;\r\n\t\t}\r\n\r\n\t\toutput.width = maxX - (output.x = minX);\r\n\t\toutput.height = maxY - (output.y = minY);\r\n\t\toutput.depth = maxZ - (output.z = minZ);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static getTriangleGeometrySphereBounds(positionAttributes:Float3Attributes, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar posDim:number = positionAttributes.dimensions;\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Sphere();\r\n\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar len = positions.length;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tfor (var i:number = 0; i < len; i += posDim) {\r\n\t\t\tdistanceX = positions[i] - center.x;\r\n\t\t\tdistanceY = positions[i + 1] - center.y;\r\n\t\t\tdistanceZ = positions[i + 2] - center.z;\r\n\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t}\r\n\r\n\t\toutput.x = center.x;\r\n\t\toutput.y = center.y;\r\n\t\toutput.z = center.z;\r\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
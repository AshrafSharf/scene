{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_positions",
    "_concatenatedBuffer",
    "_curves",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "count",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "setIndices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "uvs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "_globalColorTransformDirty",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_invalidateGlobalColorTransform",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_boundsType",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "x",
    "RADIANS_TO_DEGREES",
    "y",
    "z",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "globalToLocal3D",
    "position",
    "inverseSceneTransform",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "local",
    "hit",
    "mesh",
    "geometry",
    "j",
    "subGeometries",
    "sub",
    "curve",
    "hittestMesh",
    "displayObjectContainer",
    "numChildren",
    "child",
    "getChildAt",
    "childHit",
    "px",
    "py",
    "posDim",
    "dimensions",
    "curveDim",
    "curves",
    "indices",
    "k",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "curvex",
    "az",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "clear",
    "_globalColorTransformChanged",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "_tangents",
    "setNormals",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "jointsPerVertex",
    "normals",
    "tangents",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "AssetLoader",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_loadingSessions",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "lib",
    "getInstance",
    "stopAllLoadingSessions",
    "removeListeners",
    "stop",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "token",
    "loader",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iLoader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "loadData",
    "data",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "dispatcher",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "unproject",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "mouseEnabled",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "setEmpty",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textHeight",
    "_textInteractionMode",
    "_textWidth",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "tri_idx_offset",
    "tri_cnt",
    "x_offset",
    "y_offset",
    "prev_char",
    "text",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "toString",
    "this_subGeom",
    "subgeom",
    "indices2",
    "numElements",
    "positions2",
    "numVertices",
    "curveData2",
    "uv_values",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textFormat",
    "textColor",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BasicMaterial",
    "Single2DTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "isAsset",
    "_defaultLineMaterial",
    "createDefaultLineMaterial",
    "_defaultTriangleMaterial",
    "createDefaultTriangleMaterial",
    "getDefaultTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "SingleCubeTexture",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tl",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "updateUVs",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "align",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\r\n\t\tclone.setCurves(this._curves.clone());\r\n\r\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable\r\n{\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean = true;\r\n\tpublic _pIsEntity:boolean;\r\n    public _iMaskID:number = -1;\r\n    public _iMasks:DisplayObject[] = null;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _scenechanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean = true;\r\n    public _pColorTransform:ColorTransform;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean = true;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean = true;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean = true;\r\n\tprivate _rotationDirty:boolean = true;\r\n\tprivate _scaleDirty:boolean = true;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tpublic _pScaleX:number = 1;\r\n\tpublic _pScaleY:number = 1;\r\n\tpublic _pScaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean = true;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _globalColorTransformChanged:DisplayObjectEvent;\r\n    private _globalColorTransformDirty:boolean = false;\r\n    private _globalColorTransform:ColorTransform = new ColorTransform();\r\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\r\n    private _onColorTransformChangedDelegate:(event:Event) => void;\r\n    private _inheritColorTransform:boolean = false;\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n        this._inheritColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\r\n    public get globalColorTransform():ColorTransform\r\n    {\r\n        if (this._globalColorTransformDirty)\r\n            this._updateGlobalColorTransform();\r\n\r\n        return this._globalColorTransform;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._pColorTransform.alphaMultiplier;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n        this._pColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n    public get colorTransform()\r\n    {\r\n        return this._pColorTransform;\r\n    }\r\n\r\n    public set colorTransform(value:ColorTransform)\r\n    {\r\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\r\n        if (this._pColorTransform)\r\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n\r\n\r\n        this._pSetColorTransform(value);\r\n\r\n        if (value)\r\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._pScaleZ = val/this.getBox().depth;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this._pScaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._pScaleY = val/this.getBox().height;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tthis._pivot = pivot.clone();\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\treturn this._pScaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tif (this._pScaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\treturn this._pScaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tif (this._pScaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\treturn this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._pScaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this._pScaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._pScaleX = val/this.getBox().width;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\r\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\r\n\t\tthis._transformComponents = new Array<Vector3D>(3);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObject = new DisplayObject();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n        clone._iMaskID = this._iMaskID;\r\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\tif (this._width != null) {\r\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._height != null) {\r\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._depth != null) {\r\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\treturn this._pBoxBounds;\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid) {\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\t\t}\r\n\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\treturn point; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\r\n\t{\r\n\t\t//thought I would need the global hit point converted into local space, but not sure how to hook it in\r\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\r\n\r\n\r\n\r\n\t\tvar hit:boolean = false;\r\n\r\n\t\t//if(true)//this.assetType == Mesh.assetType)\r\n\r\n\t\tvar mesh:Mesh = <Mesh>this;\r\n\r\n\t\t//if this is a mesh then check self\r\n\t\tif(mesh && mesh.geometry)// && mesh.pickingCollider)\r\n\t\t{\r\n\t\t\t//mesh.pickingCollider.testCurveCollision(())\r\n\t\t\tvar box:Box = this.getBox();\r\n\t\t\tif(box.left > local.x || box.right < local.x || box.top  > local.y ||  box.bottom < local.y) return false;\r\n\r\n\r\n\t\t\tfor(var j:number = 0; j < mesh.geometry.subGeometries.length; j++)\r\n\t\t\t{\r\n\t\t\t\tvar sub:SubGeometryBase = mesh.geometry.subGeometries[j];\r\n\t\t\t\tvar curve:CurveSubGeometry = <CurveSubGeometry>sub;\r\n\t\t\t\tif(curve) hit = this.hittestMesh(local.x, local.y, curve);\r\n\t\t\t\tif(hit) return true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar displayObjectContainer:DisplayObjectContainer = <DisplayObjectContainer>this;\r\n\t\t//if this is a container then recurse children\r\n\t\tif(displayObjectContainer)\r\n\t\t{\r\n\t\t\tfor(var i:number = 0; i < displayObjectContainer.numChildren; i++)\r\n\t\t\t{\r\n\t\t\t\tvar child:DisplayObject = displayObjectContainer.getChildAt(i);\r\n\t\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag);\r\n\t\t\t\tif(childHit) return true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\tprivate hittestMesh(px:number, py:number, sub:CurveSubGeometry):boolean\r\n\t{\r\n\t\tvar posDim:number = sub.positions.dimensions;\r\n\t\tvar curveDim:number = sub.curves.dimensions;\r\n\t\tvar indices:Uint16Array = sub.indices.get(sub.indices.count);\r\n\t\tvar positions:Float32Array = sub.positions.get(sub.positions.count);\r\n\t\tvar curves:Float32Array = sub.curves.get(sub.curves.count);\r\n\r\n\t\tfor(var k:number = 0; k < sub.indices.length; k+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[k];\r\n\t\t\tvar id1:number = indices[k + 1] * posDim;\r\n\t\t\tvar id2:number = indices[k + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - px;\r\n\t\t\tvar dy:number = ay - py;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = bx - px;\r\n\t\t\tdy = by - py;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = cx - px;\r\n\t\t\tdy = cy - py;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t//check if nmot solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = px - ax;\r\n\t\t\t\tvar v2y:number = py - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX = vec.x;\r\n\t\tthis._rotationY = vec.y;\r\n\t\tthis._rotationZ = vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\treturn new Point(); //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = dx;\r\n\t\tthis._y = dy;\r\n\t\tthis._z = dz;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._pivot == null)\r\n\t\t\tthis._pivot = new Vector3D();\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[2];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this._pScaleX;\r\n\t\t\tscale.y = this._pScaleY;\r\n\t\t\tscale.z = this._pScaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX += vec.x;\r\n\t\tthis._rotationY += vec.y;\r\n\t\tthis._rotationZ += vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._x += x*len;\r\n\t\tthis._y += y*len;\r\n\t\tthis._z += z*len;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis._x = this._pos.x;\r\n\t\tthis._y = this._pos.y;\r\n\t\tthis._z = this._pos.z;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\r\n\t\t// TODO: From AS3 - Do we still need this in JS ?\r\n\t\t//ridiculous matrix error\r\n\t\t/*\r\n\t\tif (!val.rawData[0]) {\r\n\r\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\t\tval.copyRawDataTo(raw);\r\n\t\t\traw[0] = this._smallestNumber;\r\n\t\t\tval.copyRawDataFrom(raw);\r\n\t\t}\r\n\t\t//*/\r\n\t\tvar elements:Array<Vector3D> = val.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[0];\r\n\r\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\r\n\t\t\tthis._x = vec.x;\r\n\t\t\tthis._y = vec.y;\r\n\t\t\tthis._z = vec.z;\r\n\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation();\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\r\n\t\t\tthis._pScaleX = vec.x;\r\n\t\t\tthis._pScaleY = vec.y;\r\n\t\t\tthis._pScaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n        if (this._pParent) {\r\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n        }\r\n\r\n\t\tthis._pParent = value;\r\n\r\n        if (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\r\n        this._invalidateGlobalColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\tthis.notifySceneTransformChange();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tif (this._listenToSceneChanged)\r\n\t\t\t\tthis.notifySceneChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._sca.x = this._pScaleX;\r\n\t\tthis._sca.y = this._pScaleY;\r\n\t\tthis._sca.z = this._pScaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyPositionChanged()\r\n\t{\r\n\t\tif (!this._positionChanged)\r\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._positionChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRotationChanged()\r\n\t{\r\n\t\tif (!this._rotationChanged)\r\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._rotationChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScaleChanged()\r\n\t{\r\n\t\tif (!this._scaleChanged)\r\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scaleChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneChange()\r\n\t{\r\n\t\tif (!this._scenechanged)\r\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scenechanged);\r\n}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneTransformChange()\r\n\t{\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.notifyPositionChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation()\r\n\t{\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.notifyRotationChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale()\r\n\t{\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.notifyScaleChanged();\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\t}\r\n\t\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\t\t\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n    _updateGlobalColorTransform()\r\n    {\r\n        if (this._inheritColorTransform && this._pParent) {\r\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.prepend(this._pColorTransform);\r\n        } else {\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.copyFrom(this._pColorTransform);\r\n            else\r\n                this._globalColorTransform.clear();\r\n        }\r\n\r\n        this._globalColorTransformDirty = false;\r\n    }\r\n\r\n    // this method is to bypass that TypeScript can't call super setters.\r\n    _pSetColorTransform(value:ColorTransform)\r\n    {\r\n        this._pColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    _invalidateGlobalColorTransform()\r\n    {\r\n        this._globalColorTransformDirty = true;\r\n\r\n        if (!this._globalColorTransformChanged)\r\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\r\n\r\n        this.dispatchEvent(this._globalColorTransformChanged);\r\n    }\r\n\r\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    private onColorTransformChanged(event:Event)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\tpublic _colorTransform:ColorTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\r\n\t\tclone.setNormals((this._normals && !this._autoDeriveNormals)? this._normals.clone() : null);\r\n\r\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\r\n\r\n\t\tclone.setTangents((this._tangents && !this._autoDeriveTangents)? this._tangents.clone() : null);\r\n\r\n\t\tif (this._secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this._secondaryUVs.clone());\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\t\t\tclone.setJointIndices(this._jointIndices.clone());\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tclone.setJointWeights(this._jointWeights.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tprivate _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._children.push(child);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.name = name;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this._children[i].clone());\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChild(this._children[index]);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tthis._children.splice(this.getChildIndex(child), 1);\r\n\r\n\t\treturn child;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loadingSessions:Array<AssetLoader>;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.stopAllLoadingSessions();\r\n\t\t\tthis._loadingSessions = null;\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar i:number /*int*/;\r\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\r\n\t\tfor (i = 0; i < length; i++) {\r\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\r\n\t\t\tthis._loadingSessions[i].stop();\r\n\t\t\tthis._loadingSessions[i] = null;\r\n\t\t}\r\n\t\tthis._loadingSessions = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, AssetLoader will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.load(request, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.load(request, context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\r\n\tprivate removeListeners(dispatcher:EventDispatcher)\r\n\t{\r\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\t\t}\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pTargetObject) {\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\t} else {\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tinterpolate = interpolate; // unused: prevents warning\r\n\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._pColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tsuper._pSetColorTransform(value);\r\n\t}\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        var obj:any;\r\n\r\n        for (i = 0; i < len; ++i) {\r\n            obj = this.getChildAt(i).clone();\r\n            clone.addChild(<DisplayObjectContainer> obj);\r\n        }\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < minZ)\r\n\t\t\t\t\t\tminZ = p;\r\n\t\t\t\t\telse if (p > maxZ)\r\n\t\t\t\t\t\tmaxZ = p;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\t/**\r\n\t * The height of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._textFormat==null){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(this._text==\"\"){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar indices:Array<number> = new Array<number>();\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar tri_idx_offset:number=0;\r\n\t\tvar tri_cnt:number=0;\r\n\t\tvar x_offset:number=0;\r\n\t\tvar y_offset:number=0;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tfor (var i = 0; i < this.text.length; i++) {\r\n\r\n\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(this._text.charCodeAt(i).toString());\r\n\t\t\tif(this_char!= null) {\r\n\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\ttri_cnt = 0;\r\n\t\t\t\t\tvar indices2:Uint16Array = this_subGeom.indices.get(this_subGeom.numElements);\r\n\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\tfor (var v = 0; v < indices2.length; v++) {\r\n\t\t\t\t\t\tindices[k++] = indices2[v] + tri_idx_offset;\r\n\t\t\t\t\t\ttri_cnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttri_idx_offset += tri_cnt;\r\n\t\t\t\t\tfor (v = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\tvar kerning_value:number=0;\r\n\t\t\t\t\tif(prev_char!=null){\r\n\t\t\t\t\t\tfor(var k:number=0; k<prev_char.kerningCharCodes.length;k++){\r\n\t\t\t\t\t\t\tif(prev_char.kerningCharCodes[k]==this._text.charCodeAt(i)){\r\n\t\t\t\t\t\t\t\tkerning_value=prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tx_offset += ((this_char.char_width+kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setIndices(indices);\r\n\t\tcurve_sub_geom.setPositions(new Float3Attributes(attributesBuffer));\r\n\t\tcurve_sub_geom.setCurves(new Float2Attributes(attributesBuffer));\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n        this._iCopyToMesh(clone);\r\n        clone.textFormat = clone.textFormat;\r\n        clone.textColor = clone.textColor;\r\n        clone.text = clone.text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\r\n\tprivate static _defaultLineMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\r\n\t\t} else {\r\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):Single2DTexture\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tpublic static createCheckeredBitmapImage2D():BitmapImage2D\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn b;\r\n\t}\r\n\r\n\tprivate static createDefaultTriangleMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultLineMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t // Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event:MouseEvent)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = event.clientX;\r\n\t\tvar mouseY:number = event.clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tprivate _pool:EntityNodePool;\r\n\tprivate _entity:IEntity;\r\n\tprivate _partition:Partition;\r\n\tprivate _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():IEntity\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node)\r\n\t\t\t\t\tnode.removeFromParent();\r\n\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t\t//required for controllers with autoUpdate set to true\r\n\t\t\tnode.entity._iInternalUpdate();\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:IEntity;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tprivate _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
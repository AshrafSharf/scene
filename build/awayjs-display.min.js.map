{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "hitTestPoint",
    "x",
    "y",
    "z",
    "posDim",
    "positions",
    "dimensions",
    "curveDim",
    "curves",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "k",
    "curvex",
    "az",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "Array",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_invalidateGlobalColorTransform",
    "_globalColorTransformDirty",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "height",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_pSceneTransformDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset_to_init_state",
    "visible",
    "colorTransform",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "_sceneTransformChanged",
    "queueDispatch",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "_globalColorTransformChanged",
    "elements",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "j",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "mouseEnabled",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_applyColorTransform",
    "_parentColorTransform",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "isAsset",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "toString",
    "split",
    "tl",
    "line_width",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "_updateQueue",
    "_iUpdateQueueNext",
    "updateEntities",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tvar curveDim:number = this.curves.dimensions;\r\n\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\r\n\t\t{\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - x;\r\n\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = bx - x;\r\n\t\t\tdy = by - y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = cx - x;\r\n\t\t\tdy = cy - y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t//check if nmot solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable\r\n{\r\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\r\n\tprivate _elementsDirty:boolean;\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean;\r\n\tpublic _pIsEntity:boolean;\r\n    public _iMaskID:number = -1;\r\n    public _iMasks:DisplayObject[] = null;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _sceneChanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean;\r\n    public _pColorTransform:ColorTransform;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean;\r\n\tprivate _rotationDirty:boolean;\r\n\tprivate _skewDirty:boolean;\r\n\tprivate _scaleDirty:boolean;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _skewChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToSkewChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tprivate _skewX:number = 0;\r\n\tprivate _skewY:number = 0;\r\n\tprivate _skewZ:number = 0;\r\n\tprivate _scaleX:number = 1;\r\n\tprivate _scaleY:number = 1;\r\n\tprivate _scaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _ske:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _globalColorTransformChanged:DisplayObjectEvent;\r\n    private _globalColorTransformDirty:boolean;\r\n    private _globalColorTransform:ColorTransform = new ColorTransform();\r\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\r\n    private _onColorTransformChangedDelegate:(event:Event) => void;\r\n    private _inheritColorTransform:boolean = false;\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n        this._inheritColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\r\n    public get globalColorTransform():ColorTransform\r\n    {\r\n        if (this._globalColorTransformDirty)\r\n            this._updateGlobalColorTransform();\r\n\r\n        return this._globalColorTransform;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._pColorTransform.alphaMultiplier;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n        this._pColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n    public get colorTransform()\r\n    {\r\n        return this._pColorTransform;\r\n    }\r\n\r\n    public set colorTransform(value:ColorTransform)\r\n    {\r\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\r\n        if (this._pColorTransform)\r\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n\r\n\r\n        this._pSetColorTransform(value);\r\n\r\n        if (value)\r\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this.scaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._setScaleZ(val/this.getBox().depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this.rotationX;\r\n\t\tthis._eulers.y = this.rotationY;\r\n\t\tthis._eulers.z = this.rotationZ;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis.rotationX = value.x;\r\n\t\tthis.rotationY = value.y;\r\n\t\tthis.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this.scaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._setScaleY(val/this.getBox().height);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x = pivot.x;\r\n\t\tthis._pivot.y = pivot.y;\r\n\t\tthis._pivot.z = pivot.z;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tthis._setScaleX(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tthis._setScaleY(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tthis._setScaleZ(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the horizontal skew(angle) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewX;\r\n\t}\r\n\r\n\tpublic set skewX(val:number)\r\n\t{\r\n\t\tif (this.skewX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewX = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewY;\r\n\t}\r\n\r\n\tpublic set skewY(val:number)\r\n\t{\r\n\t\tif (this.skewY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewY = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewZ;\r\n\t}\r\n\r\n\tpublic set skewZ(val:number)\r\n\t{\r\n\t\tif (this.skewZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewZ = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this.scaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._setScaleX(val/this.getBox().width);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = this._matrix3D.rawData[12] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = this._matrix3D.rawData[13] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = this._matrix3D.rawData[14] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\r\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\r\n\t\tthis._transformComponents = new Array<Vector3D>(4);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._ske;\r\n\t\tthis._transformComponents[3] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObject = new DisplayObject();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = this.name;\r\n\r\n        clone._iMaskID = this._iMaskID;\r\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\t//scale updates if absolute dimensions are detected\r\n\t\t\tif (this._width != null)\r\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\r\n\r\n\t\t\tif (this._height != null)\r\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\r\n\r\n\t\t\tif (this._depth != null)\r\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @param maskFlag Whether to check against the object when it is used as mask\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis.x = dx;\r\n\t\tthis.y = dy;\r\n\t\tthis.z = dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (dx == 0 && dy == 0 && dz == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\tpublic reset_to_init_state():void\r\n\t{\r\n\t\tthis.visible=true;\r\n\t\tif(this._iMatrix3D)\r\n\t\t\tthis._iMatrix3D.identity();\r\n\t\tif(this.colorTransform)\r\n\t\t\tthis.colorTransform.clear();\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[3];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this.scaleX;\r\n\t\t\tscale.y = this.scaleY;\r\n\t\t\tscale.z = this.scaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis.rotationX = ax;\r\n\t\tthis.rotationY = ay;\r\n\t\tthis.rotationZ = az;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = false;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis.x += x*len;\r\n\t\tthis.y += y*len;\r\n\t\tthis.z += z*len;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis.x = this._pos.x;\r\n\t\tthis.y = this._pos.y;\r\n\t\tthis.z = this._pos.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\tthis._pUpdatePivot();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 12; i++)\r\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\r\n\r\n\t\tthis.x = val.rawData[12];\r\n\t\tthis.y = val.rawData[13];\r\n\t\tthis.z = val.rawData[14];\r\n\r\n\t\tthis._elementsDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n        if (this._pParent) {\r\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n        }\r\n\r\n\t\tthis._pParent = value;\r\n\r\n        if (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\r\n        this._invalidateGlobalColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.queueDispatch(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._ske.x = this._skewX;\r\n\t\tthis._ske.y = this._skewY;\r\n\t\tthis._ske.z = this._skewZ;\r\n\r\n\t\tthis._sca.x = this._scaleX;\r\n\t\tthis._sca.y = this._scaleY;\r\n\t\tthis._sca.z = this._scaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t}\r\n\r\n\tpublic _pUpdatePivot()\r\n\t{\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.updateController();\r\n\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._skewDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\tif (!this._pivotZero)\r\n\t\t\tthis.invalidatePivot();\r\n\r\n\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateSkew(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._skewDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n    _updateGlobalColorTransform()\r\n    {\r\n        if (this._inheritColorTransform && this._pParent) {\r\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.prepend(this._pColorTransform);\r\n        } else {\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.copyFrom(this._pColorTransform);\r\n            else\r\n                this._globalColorTransform.clear();\r\n        }\r\n\r\n        this._globalColorTransformDirty = false;\r\n    }\r\n\r\n    // this method is to bypass that TypeScript can't call super setters.\r\n    _pSetColorTransform(value:ColorTransform)\r\n    {\r\n        this._pColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    _invalidateGlobalColorTransform()\r\n    {\r\n        this._globalColorTransformDirty = true;\r\n\r\n        if (!this._globalColorTransformChanged)\r\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\r\n\r\n        this.dispatchEvent(this._globalColorTransformChanged);\r\n    }\r\n\r\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    private onColorTransformChanged(event:Event)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\tprivate queueDispatch(event:Event)\r\n\t{\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\tprivate updateElements()\r\n\t{\r\n\t\tthis._elementsDirty = false;\r\n\r\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\r\n\t\t\tthis._skewX = vec.x;\r\n\t\t\tthis._skewY = vec.y;\r\n\t\t\tthis._skewZ = vec.z;\r\n\r\n\t\t\tthis.invalidateSkew(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[3];\r\n\r\n\t\tthis._width = null;\r\n\t\tthis._height = null;\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\r\n\t\t\tthis._scaleX = vec.x;\r\n\t\t\tthis._scaleY = vec.y;\r\n\t\t\tthis._scaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale(false);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _setScaleX(val:number)\r\n\t{\r\n\t\tif (this.scaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleY(val:number)\r\n\t{\r\n\t\tif (this.scaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleZ(val:number)\r\n\t{\r\n\t\tif (this.scaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\tpublic _colorTransform:ColorTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveNormals = false;\r\n\t\tclone.autoDeriveTangents = false;\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.normals)\r\n\t\t\tclone.setNormals(this.normals.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\tif (this.tangents)\r\n\t\t\tclone.setTangents(this.tangents.clone());\r\n\r\n\t\tif (this.secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\r\n\r\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\r\n\t\tif (this.jointIndices)\r\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\r\n\r\n\t\tif (this.jointWeights)\r\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\r\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._children.push(child);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.name = this.name;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this._children[i].clone());\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChild(this._children[index]);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar min:number;\r\n\t\tvar max:number;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tthis._children.splice(this.getChildIndex(child), 1);\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\tif(this._iMaskID!==-1 && !masksFlag)return;\r\n\t\tif(this.visible==false)return;\r\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\r\n\t\t{\r\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\r\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\r\n\t\t\tif(childHit) {\r\n\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\r\n\t\t\t\tif(all_masks){\r\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\r\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\tif(mask_child.parent){\r\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\r\n\t\t\t\t\t\t\tif(childHit) return true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loaderSession:LoaderSession;\r\n\tprivate _loaderSessionGarbage:LoaderSession;\r\n\tprivate _gcTimeoutIID:number;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (!this._loaderSession)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\r\n\t\t}\r\n\t\t\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, LoaderSession will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tprivate _getLoaderSession()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tthis._loaderSession = lib.getLoaderSession();\r\n\t\t} else {\r\n\t\t\tthis._loaderSession = new LoaderSession();\r\n\t\t}\r\n\r\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn this._loaderSession;\r\n\t}\r\n\r\n\tprivate _disposeLoaderSession()\r\n\t{\r\n\t\t// Add loader to garbage - for a collection sweep and kill\r\n\t\tthis._loaderSessionGarbage = this._loaderSession;\r\n\t\tdelete this._loaderSession;\r\n\t\tthis._loaderSession = null;\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tLoaderSession.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tLoaderSession.enableParsers(parserClasses);\r\n\t}\r\n\t\r\n\tprivate loaderSessionGC():void\r\n\t{\r\n\t\t//remove listeners\r\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\tif (!this._useAssetLib)\r\n\t\t\tthis._loaderSessionGarbage.stop();\r\n\r\n\t\tdelete this._loaderSessionGarbage;\r\n\t\tthis._loaderSessionGarbage = null;\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\tpublic _pControllerDirty:boolean;\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject)\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pAutoUpdate)\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\telse\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic updateController()\r\n\t{\r\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\r\n\t\t\tthis._pControllerDirty = false;\r\n\t\t\tthis.pNotifyUpdate();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pControllerDirty = true;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._pColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tsuper._pSetColorTransform(value);\r\n\t}\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        var obj:any;\r\n\r\n        for (i = 0; i < len; ++i) {\r\n            obj = this.getChildAt(i).clone();\r\n            clone.addChild(<DisplayObjectContainer> obj);\r\n        }\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\r\n\t\t\tif (this.numChildren) {\r\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\r\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\r\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\r\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\r\n\t\t\t} else {\r\n\t\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\r\n\t\t\t\t\tminZ = maxZ = 0;\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < tmp_minZ)\r\n\t\t\t\t\t\ttmp_minZ = p;\r\n\t\t\t\t\telse if (p > tmp_maxZ)\r\n\t\t\t\t\t\ttmp_maxZ = p;\r\n\t\t\t\t}\r\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\r\n\t\t\t\t\tminZ = tmp_minZ;\r\n\t\t\t\t\tmaxZ = tmp_maxZ;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\t// if this is a mask, directly return false\r\n\t\tif(this._iMaskID!==-1 && !masksFlag)return false;\r\n\r\n\t\t// if this is invisible, all children should be invisible too.\r\n\t\t// todo: is the above statement correct for awayjs visible-property ?\r\n\t\tif(this.visible==false)return false;\r\n\r\n\t\t// from this point out, we can not return false, without checking collision of childs.\r\n\t\t\r\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\r\n\r\n\t\tif(this.geometry) {\r\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\r\n\t\t\t\tif (!shapeFlag)\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\r\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\r\n\r\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\r\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\r\n\t\t\t\t\t\tif (all_masks) {\r\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\r\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\r\n\t\t\t\t\t\t\tif (all_hir_masks){\r\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\r\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\r\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\r\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar hit:boolean = false;\r\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\r\n\t\tif(hit)\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\r\n\t\tif(this._textFormat==null)\r\n\t\t\treturn;\r\n\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._text==\"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar y_offset:number=0;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\t\t\tvar line_width:number=0;\r\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t\tfont_chars.push(this_char);\r\n\t\t\t}\r\n\t\t\tvar x_offset:number=0;\r\n\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\r\n\t\t\t}\r\n\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width);\r\n\t\t\t}\r\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n\t\tclone.geometry = new Geometry();\r\n\t\t//clone.material = this._material;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.boundsType = this.boundsType;\r\n\r\n\r\n\t\tclone.name = this.name;\r\n\t\tclone.castsShadows = this.castsShadows;\r\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\t\t//this is of course no proper cloning\r\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n\t\tclone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t//var len:number = this._subMeshes.length;\r\n\t\t//for (var i:number = 0; i < len; ++i)\r\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n\t\tvar len = this.numChildren;\r\n\t\tvar obj:any;\r\n\t\tvar i;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tobj = this.getChildAt(i).clone();\r\n\t\t\tclone.addChild(<DisplayObjectContainer> obj);\r\n\t\t}\r\n\r\n\t\t//if (this._animator)\r\n\t\t//\tclone.animator = this._animator.clone();\r\n\t\tclone.textWidth=this.textWidth;\r\n\t\tclone.textHeight=this.textHeight;\r\n       \tclone.textFormat = this._textFormat;\r\n        //clone.textColor = clone.textColor;\r\n       \tclone.text = this._text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\r\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultColorMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\r\n\t\t}\r\n\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\r\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\r\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImageCube()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImage2D()\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\r\n\t}\r\n\r\n\tprivate static createDefaultTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultColorMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tprivate _pool:EntityNodePool;\r\n\tpublic _entity:IEntity;\r\n\tprivate _partition:Partition;\r\n\tpublic _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():IEntity\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\r\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade) {\r\n\t\t\tvar t:EntityNode = this._updateQueue;\r\n\t\t\twhile (t) {\r\n\t\t\t\t//required for controllers with autoUpdate set to true and queued events\r\n\t\t\t\tt.entity._iInternalUpdate();\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\t\t\t}\r\n\t\t\tthis.updateEntities();\r\n\t\t}\r\n\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node)\r\n\t\t\t\t\tnode.removeFromParent();\r\n\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:IEntity;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tprivate _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _whitespace_width:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_whitespace_width(value:number):void\r\n\t{\r\n\t\tthis._whitespace_width=value;\r\n\t}\r\n\tpublic get_whitespace_width():number\r\n\t{\r\n\t\treturn this._whitespace_width\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 3;\r\n\t\t\tf2 += 3;\r\n\t\t\tf3 += 3;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
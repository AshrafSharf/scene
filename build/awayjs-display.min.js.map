{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_positions",
    "_concatenatedBuffer",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "hitTestPoint",
    "x",
    "y",
    "z",
    "posDim",
    "positions",
    "dimensions",
    "curveDim",
    "curves",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "k",
    "curvex",
    "az",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "setIndices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "uvs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "_globalColorTransformDirty",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_invalidateGlobalColorTransform",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "clear",
    "_globalColorTransformChanged",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "j",
    "indices",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "_tangents",
    "setNormals",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "jointsPerVertex",
    "normals",
    "tangents",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "mouseEnabled",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "visible",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "AssetLoader",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_loadingSessions",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "lib",
    "getInstance",
    "stopAllLoadingSessions",
    "removeListeners",
    "stop",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "token",
    "loader",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iLoader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "loadData",
    "data",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "dispatcher",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "isAsset",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "toString",
    "split",
    "tl",
    "line_width",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BasicMaterial",
    "Single2DTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultLineMaterial",
    "createDefaultLineMaterial",
    "_defaultTriangleMaterial",
    "createDefaultTriangleMaterial",
    "getDefaultTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "SingleCubeTexture",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tvar curveDim:number = this.curves.dimensions;\r\n\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\r\n\t\t{\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - x;\r\n\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = bx - x;\r\n\t\t\tdy = by - y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = cx - x;\r\n\t\t\tdy = cy - y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t//check if nmot solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable\r\n{\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean = true;\r\n\tpublic _pIsEntity:boolean;\r\n    public _iMaskID:number = -1;\r\n    public _iMasks:DisplayObject[] = null;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _scenechanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean = true;\r\n    public _pColorTransform:ColorTransform;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean = true;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean = true;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean = true;\r\n\tprivate _rotationDirty:boolean = true;\r\n\tprivate _scaleDirty:boolean = true;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tpublic _pScaleX:number = 1;\r\n\tpublic _pScaleY:number = 1;\r\n\tpublic _pScaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean = true;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _globalColorTransformChanged:DisplayObjectEvent;\r\n    private _globalColorTransformDirty:boolean = false;\r\n    private _globalColorTransform:ColorTransform = new ColorTransform();\r\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\r\n    private _onColorTransformChangedDelegate:(event:Event) => void;\r\n    private _inheritColorTransform:boolean = false;\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n        this._inheritColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\r\n    public get globalColorTransform():ColorTransform\r\n    {\r\n        if (this._globalColorTransformDirty)\r\n            this._updateGlobalColorTransform();\r\n\r\n        return this._globalColorTransform;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._pColorTransform.alphaMultiplier;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n        this._pColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n    public get colorTransform()\r\n    {\r\n        return this._pColorTransform;\r\n    }\r\n\r\n    public set colorTransform(value:ColorTransform)\r\n    {\r\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\r\n        if (this._pColorTransform)\r\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n\r\n\r\n        this._pSetColorTransform(value);\r\n\r\n        if (value)\r\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._pScaleZ = val/this.getBox().depth;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this._pScaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._pScaleY = val/this.getBox().height;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tthis._pivot = pivot.clone();\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\treturn this._pScaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tif (this._pScaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\treturn this._pScaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tif (this._pScaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\treturn this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._pScaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this._pScaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._pScaleX = val/this.getBox().width;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\r\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\r\n\t\tthis._transformComponents = new Array<Vector3D>(3);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObject = new DisplayObject();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = this.name;\r\n\r\n        clone._iMaskID = this._iMaskID;\r\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\tif (this._width != null) {\r\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._height != null) {\r\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._depth != null) {\r\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @param maskFlag Whether to check against the object when it is used as mask\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX = vec.x;\r\n\t\tthis._rotationY = vec.y;\r\n\t\tthis._rotationZ = vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = dx;\r\n\t\tthis._y = dy;\r\n\t\tthis._z = dz;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._pivot == null)\r\n\t\t\tthis._pivot = new Vector3D();\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[2];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this._pScaleX;\r\n\t\t\tscale.y = this._pScaleY;\r\n\t\t\tscale.z = this._pScaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX += vec.x;\r\n\t\tthis._rotationY += vec.y;\r\n\t\tthis._rotationZ += vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._x += x*len;\r\n\t\tthis._y += y*len;\r\n\t\tthis._z += z*len;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis._x = this._pos.x;\r\n\t\tthis._y = this._pos.y;\r\n\t\tthis._z = this._pos.z;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\r\n\t\t// TODO: From AS3 - Do we still need this in JS ?\r\n\t\t//ridiculous matrix error\r\n\t\t/*\r\n\t\tif (!val.rawData[0]) {\r\n\r\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\t\tval.copyRawDataTo(raw);\r\n\t\t\traw[0] = this._smallestNumber;\r\n\t\t\tval.copyRawDataFrom(raw);\r\n\t\t}\r\n\t\t//*/\r\n\t\tvar elements:Array<Vector3D> = val.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[0];\r\n\r\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\r\n\t\t\tthis._x = vec.x;\r\n\t\t\tthis._y = vec.y;\r\n\t\t\tthis._z = vec.z;\r\n\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation();\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\r\n\t\t\tthis._pScaleX = vec.x;\r\n\t\t\tthis._pScaleY = vec.y;\r\n\t\t\tthis._pScaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n        if (this._pParent) {\r\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n        }\r\n\r\n\t\tthis._pParent = value;\r\n\r\n        if (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\r\n        this._invalidateGlobalColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\tthis.notifySceneTransformChange();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tif (this._listenToSceneChanged)\r\n\t\t\t\tthis.notifySceneChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._sca.x = this._pScaleX;\r\n\t\tthis._sca.y = this._pScaleY;\r\n\t\tthis._sca.z = this._pScaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyPositionChanged()\r\n\t{\r\n\t\tif (!this._positionChanged)\r\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._positionChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRotationChanged()\r\n\t{\r\n\t\tif (!this._rotationChanged)\r\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._rotationChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScaleChanged()\r\n\t{\r\n\t\tif (!this._scaleChanged)\r\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scaleChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneChange()\r\n\t{\r\n\t\tif (!this._scenechanged)\r\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scenechanged);\r\n}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneTransformChange()\r\n\t{\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.notifyPositionChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation()\r\n\t{\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.notifyRotationChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale()\r\n\t{\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.notifyScaleChanged();\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\t\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\t\t\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n    _updateGlobalColorTransform()\r\n    {\r\n        if (this._inheritColorTransform && this._pParent) {\r\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.prepend(this._pColorTransform);\r\n        } else {\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.copyFrom(this._pColorTransform);\r\n            else\r\n                this._globalColorTransform.clear();\r\n        }\r\n\r\n        this._globalColorTransformDirty = false;\r\n    }\r\n\r\n    // this method is to bypass that TypeScript can't call super setters.\r\n    _pSetColorTransform(value:ColorTransform)\r\n    {\r\n        this._pColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    _invalidateGlobalColorTransform()\r\n    {\r\n        this._globalColorTransformDirty = true;\r\n\r\n        if (!this._globalColorTransformChanged)\r\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\r\n\r\n        this.dispatchEvent(this._globalColorTransformChanged);\r\n    }\r\n\r\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    private onColorTransformChanged(event:Event)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\tpublic _colorTransform:ColorTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setNormals((this._normals && !this._autoDeriveNormals)? this._normals.clone() : null);\r\n\r\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\r\n\r\n\t\tclone.setTangents((this._tangents && !this._autoDeriveTangents)? this._tangents.clone() : null);\r\n\r\n\t\tif (this._secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this._secondaryUVs.clone());\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\t\t\tclone.setJointIndices(this._jointIndices.clone());\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tclone.setJointWeights(this._jointWeights.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._children.push(child);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.name = this.name;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this._children[i].clone());\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChild(this._children[index]);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar min:number;\r\n\t\tvar max:number;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tthis._children.splice(this.getChildIndex(child), 1);\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\tif(this._iMaskID!==-1 && !masksFlag)return;\r\n\t\tif(this.visible==false)return;\r\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\r\n\t\t{\r\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\r\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\r\n\t\t\tif(childHit) {\r\n\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\r\n\t\t\t\tif(all_masks){\r\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\r\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\tif(mask_child.parent){\r\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\r\n\t\t\t\t\t\t\tif(childHit) return true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loadingSessions:Array<AssetLoader>;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.stopAllLoadingSessions();\r\n\t\t\tthis._loadingSessions = null;\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar i:number /*int*/;\r\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\r\n\t\tfor (i = 0; i < length; i++) {\r\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\r\n\t\t\tthis._loadingSessions[i].stop();\r\n\t\t\tthis._loadingSessions[i] = null;\r\n\t\t}\r\n\t\tthis._loadingSessions = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, AssetLoader will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.load(request, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.load(request, context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\r\n\tprivate removeListeners(dispatcher:EventDispatcher)\r\n\t{\r\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\t\t}\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pTargetObject) {\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\t} else {\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tinterpolate = interpolate; // unused: prevents warning\r\n\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._pColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tsuper._pSetColorTransform(value);\r\n\t}\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        var obj:any;\r\n\r\n        for (i = 0; i < len; ++i) {\r\n            obj = this.getChildAt(i).clone();\r\n            clone.addChild(<DisplayObjectContainer> obj);\r\n        }\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\r\n\t\t\tif (this.numChildren) {\r\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\r\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\r\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\r\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\r\n\t\t\t} else {\r\n\t\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\r\n\t\t\t\t\tminZ = maxZ = 0;\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < tmp_minZ)\r\n\t\t\t\t\t\ttmp_minZ = p;\r\n\t\t\t\t\telse if (p > tmp_maxZ)\r\n\t\t\t\t\t\ttmp_maxZ = p;\r\n\t\t\t\t}\r\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\r\n\t\t\t\t\tminZ = tmp_minZ;\r\n\t\t\t\t\tmaxZ = tmp_maxZ;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\t// if this is a mask, directly return false\r\n\t\tif(this._iMaskID!==-1 && !masksFlag)return false;\r\n\r\n\t\t// if this is invisible, all children should be invisible too.\r\n\t\t// todo: is the above statement correct for awayjs visible-property ?\r\n\t\tif(this.visible==false)return false;\r\n\r\n\t\t// from this point out, we can not return false, without checking collision of childs.\r\n\t\t\r\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\r\n\r\n\t\tif(this.geometry) {\r\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\r\n\t\t\t\tif (!shapeFlag)\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\r\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\r\n\r\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\r\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\r\n\t\t\t\t\t\tif (all_masks) {\r\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\r\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\r\n\t\t\t\t\t\t\tif (all_hir_masks){\r\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\r\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\r\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\r\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar hit:boolean = false;\r\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\r\n\t\tif(hit)\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\r\n\t\tif(this._textFormat==null)\r\n\t\t\treturn;\r\n\r\n\t\tif(this._text==\"\")\r\n\t\t\treturn;\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar y_offset:number=0;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\n\");\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\t\t\tvar line_width:number=0;\r\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tline_width+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\tline_width+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t\tfont_chars.push(this_char);\r\n\t\t\t}\r\n\t\t\tvar x_offset:number=0;\r\n\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\r\n\t\t\t}\r\n\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width);\r\n\t\t\t}\r\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n        this._iCopyToMesh(clone);\r\n\t\tclone.textWidth=this.textWidth;\r\n\t\tclone.textHeight=this.textHeight;\r\n       \tclone.textFormat = this._textFormat;\r\n        //clone.textColor = clone.textColor;\r\n       \tclone.text = this._text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\r\n\tprivate static _defaultLineMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\r\n\t\t} else {\r\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):Single2DTexture\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tpublic static createCheckeredBitmapImage2D():BitmapImage2D\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn b;\r\n\t}\r\n\r\n\tprivate static createDefaultTriangleMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultLineMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t // Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tprivate _pool:EntityNodePool;\r\n\tpublic _entity:IEntity;\r\n\tprivate _partition:Partition;\r\n\tpublic _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():IEntity\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node)\r\n\t\t\t\t\tnode.removeFromParent();\r\n\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t\t//required for controllers with autoUpdate set to true\r\n\t\t\tnode.entity._iInternalUpdate();\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:IEntity;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tprivate _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
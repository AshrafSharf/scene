{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SceneGraphNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "positions",
    "posDim",
    "dimensions",
    "Number",
    "MAX_VALUE",
    "maxx",
    "maxy",
    "k",
    "width",
    "height",
    "maxDevisions",
    "ceil",
    "sqrt",
    "numVertices",
    "min",
    "numCells",
    "cellWidth",
    "cellHeight",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "left",
    "right",
    "max",
    "top",
    "bottom",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "cell",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_iMaskID",
    "_iMasks",
    "_sessionID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "_invalidateGlobalColorTransform",
    "_globalColorTransformDirty",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_pSceneTransformDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "_iMatrix3D",
    "concat",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset_to_init_state",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "_sceneTransformChanged",
    "queueDispatch",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "_globalColorTransformChanged",
    "elements",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "this_clone",
    "name",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "target_childs_dic",
    "target_sessionIDs_dic",
    "numChildren",
    "child",
    "getChildAt",
    "getChildDepth",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "start_index",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "target_child_sessionIDS",
    "key",
    "removeChildAt",
    "addChildAtDepth",
    "parseInt",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "register_objects",
    "props_cnt",
    "props_start_idx",
    "value_start_index",
    "props_type",
    "doit",
    "childID",
    "update_child_stream",
    "getChildAtSessionID",
    "isBlockedByScript",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask_length",
    "properties_stream_int",
    "mask",
    "masks",
    "mouseEnabled",
    "isAsset",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "isVisibilityByScript",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_depths",
    "_nextHighestDepth",
    "_children",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAtDepth",
    "getDepthIndexInternal",
    "getChildByName",
    "childIndex",
    "getNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_loop",
    "_active_session_ids",
    "_potentialInstances",
    "_currentFrameIndex",
    "_constructedKeyFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_fps",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "numFrames",
    "_skipAdvance",
    "exit_frame",
    "reset",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "newFps",
    "play",
    "timeDelta",
    "frameMarker",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "skipChildren",
    "oldFrameIndex",
    "advance",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "additional_margin_x",
    "additional_margin_y",
    "font_chars_scale",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "split",
    "tl",
    "textlines2",
    "t2",
    "line_width",
    "c_cnt",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "err",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_sceneGraphDepths",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "_updateQueue",
    "_iUpdateQueueNext",
    "updateEntities",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphNode",
    "SceneGraphNode",
    "container",
    "_container",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ISceneGraphNodeClass",
    "awayjs-display/lib/pool/ITextureVO",
    "awayjs-display/lib/pool/SceneGraphNodePool",
    "SceneGraphNodePool",
    "sceneGraphNodeClass",
    "_sceneGraphNodePool",
    "_sceneGraphNodeClass",
    "displayObjectContainer",
    "sceneGraphNode",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\t//grid stuff - to tidy\r\n\tprivate cells:Array<Array<number>>;\r\n\t//TODO - generate this dyanamically based on num tris\r\n\tprivate devisions:number = 32;\r\n\tprivate conversionX:number;\r\n\tprivate conversionY:number;\r\n\tprivate minx:number;\r\n\tprivate maxx:number;\r\n\tprivate miny:number;\r\n\tprivate maxy:number;\r\n\r\n\tprivate getCell(x:number, y:number):number\r\n\t{\r\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\r\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\r\n\r\n\t\t//out of bounds\r\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\r\n\r\n\t\treturn  index_x + index_y * this.devisions;\r\n\t}\r\n\tprivate buildGrid():void\r\n\t{\r\n\t\t//calculate bounds, ideally via bounding box already computed\r\n\t\t//if not just loop through and generate min/max\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tthis.minx = Number.MAX_VALUE;\r\n\t\tthis.maxx = -Number.MAX_VALUE;\r\n\t\tthis.miny = Number.MAX_VALUE;\r\n\t\tthis.maxy = -Number.MAX_VALUE;\r\n\t\tfor(var k:number = 0; k < positions.length; k+=3)\r\n\t\t{\r\n\t\t\tvar x:number = positions[k];\r\n\t\t\tvar y:number = positions[k + 1];\r\n\r\n\t\t\tif(x < this.minx) this.minx = x;\r\n\t\t\tif(x > this.maxx) this.maxx = x;\r\n\t\t\tif(y < this.miny) this.miny = y;\r\n\t\t\tif(y > this.maxy) this.maxy = y;\r\n\t\t}\r\n\r\n\t\tvar width:number = this.maxx - this.minx;\r\n\t\tvar height:number = this.maxy - this.miny;\r\n\r\n\r\n\t\t//now we have bounds start creating grid cells and filling\r\n\t\tvar maxDevisions:number = 32;\r\n\t\tthis.devisions = Math.ceil(Math.sqrt(this.numVertices));\r\n\t\tthis.devisions = Math.min(this.devisions, maxDevisions);\r\n\t\tvar numCells:number = this.devisions * this.devisions;\r\n\t\tvar cellWidth:number = width/this.devisions;\r\n\t\tvar cellHeight:number = height/this.devisions;\r\n\r\n\t\tthis.conversionX = 1/cellWidth;\r\n\t\tthis.conversionY = 1/cellHeight;\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\tthis.cells = new Array<Array<number>>(numCells);\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//subtractions to push into positive space\r\n\t\t\tvar left:number = Math.min(ax, bx, cx)-this.minx;\r\n\t\t\tvar right:number = Math.max(ax, bx, cx)-this.minx;\r\n\t\t\tvar top:number = Math.min(ay, by, cy)-this.miny;\r\n\t\t\tvar bottom:number = Math.max(ay, by, cy)-this.miny;\r\n\r\n\t\t\tvar min_index_x:number = Math.floor(left * this.conversionX);\r\n\t\t\tvar min_index_y:number = Math.floor(top * this.conversionY);\r\n\r\n\t\t\tvar max_index_x:number = Math.floor(right * this.conversionX);\r\n\t\t\tvar max_index_y:number = Math.floor(bottom * this.conversionY);\r\n\r\n\r\n\t\t\tfor (var i : number = min_index_x; i <= max_index_x; i++)\r\n\t\t\t{\r\n\t\t\t\tfor (var j : number = min_index_y; j <= max_index_y; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar index:number = i + j * this.devisions;\r\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index];\r\n\t\t\t\t\tif(nodes == null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnodes = new Array<number>();\r\n\t\t\t\t\t\tthis.cells[index] = nodes;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//push in the triangle ids\r\n\t\t\t\t\tnodes.push(id0, id1, id2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean {\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tvar curveDim:number = this.curves.dimensions;\r\n\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\t//hard coded min vertex count to bother using a grid for\r\n\t\tif(this.numVertices > 150){\r\n\r\n\r\n\t\t\tif (this.cells == null) {\r\n\t\t\t\tthis.buildGrid();\r\n\t\t\t}\r\n\t\t\tvar cell:number = this.getCell(x, y);\r\n\t\t\tif (cell == -1) return false;\r\n\r\n\t\t\tvar nodes:Array<number> = this.cells[cell];\r\n\t\t\tif (nodes == null) return false;\r\n\r\n\r\n\t\t\tfor (var k:number = 0; k < nodes.length; k += 3) {\r\n\t\t\t\tid0 = nodes[k];\r\n\t\t\t\tid1 = nodes[k + 1];\r\n\t\t\t\tid2 = nodes[k + 2];\r\n\r\n\t\t\t\tax = positions[id0 * posDim];\r\n\t\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\t\tbx = positions[id1 * posDim];\r\n\t\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\t\tcx = positions[id2 * posDim];\r\n\t\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t\t//from a to p\r\n\t\t\t\tvar dx:number = ax - x;\r\n\t\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t\t//edge normal (a-b)\r\n\t\t\t\tvar nx:number = by - ay;\r\n\t\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tdx = bx - x;\r\n\t\t\t\tdy = by - y;\r\n\t\t\t\tnx = cy - by;\r\n\t\t\t\tny = -(cx - bx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tdx = cx - x;\r\n\t\t\t\tdy = cy - y;\r\n\t\t\t\tnx = ay - cy;\r\n\t\t\t\tny = -(ax - cx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\t\t//check if not solid\r\n\t\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t\t//here be dragons\r\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t//brute force\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\r\n\t\t{\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - x;\r\n\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = bx - x;\r\n\t\t\tdy = by - y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = cx - x;\r\n\t\t\tdy = cy - y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\r\n{\r\n\tpublic _adapter:IDisplayObjectAdapter;\r\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\r\n\tprivate _elementsDirty:boolean;\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean;\r\n\tpublic _pIsEntity:boolean;\r\n    public _iMaskID:number = -1;\r\n    public _iMasks:DisplayObject[] = null;\r\n\tpublic _sessionID:number = -1;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _sceneChanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean;\r\n    public _pColorTransform:ColorTransform;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean;\r\n\tprivate _rotationDirty:boolean;\r\n\tprivate _skewDirty:boolean;\r\n\tprivate _scaleDirty:boolean;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _skewChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToSkewChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tprivate _skewX:number = 0;\r\n\tprivate _skewY:number = 0;\r\n\tprivate _skewZ:number = 0;\r\n\tprivate _scaleX:number = 1;\r\n\tprivate _scaleY:number = 1;\r\n\tprivate _scaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _ske:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _globalColorTransformChanged:DisplayObjectEvent;\r\n    private _globalColorTransformDirty:boolean;\r\n    private _globalColorTransform:ColorTransform = new ColorTransform();\r\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\r\n    private _onColorTransformChangedDelegate:(event:Event) => void;\r\n    private _inheritColorTransform:boolean = false;\r\n\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IDisplayObjectAdapter\r\n\t{\r\n\t\treturn this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IDisplayObjectAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n        this._inheritColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\r\n    public get globalColorTransform():ColorTransform\r\n    {\r\n        if (this._globalColorTransformDirty)\r\n            this._updateGlobalColorTransform();\r\n\r\n        return this._globalColorTransform;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._pColorTransform.alphaMultiplier;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n        this._pColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n    public get colorTransform()\r\n    {\r\n        return this._pColorTransform;\r\n    }\r\n\r\n    public set colorTransform(value:ColorTransform)\r\n    {\r\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\r\n        if (this._pColorTransform)\r\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n\r\n\r\n        this._pSetColorTransform(value);\r\n\r\n        if (value)\r\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this.scaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._setScaleZ(val/this.getBox().depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this.rotationX;\r\n\t\tthis._eulers.y = this.rotationY;\r\n\t\tthis._eulers.z = this.rotationZ;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis.rotationX = value.x;\r\n\t\tthis.rotationY = value.y;\r\n\t\tthis.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this.scaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._setScaleY(val/this.getBox().height);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x = pivot.x;\r\n\t\tthis._pivot.y = pivot.y;\r\n\t\tthis._pivot.z = pivot.z;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tthis._setScaleX(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tthis._setScaleY(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tthis._setScaleZ(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the horizontal skew(angle) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewX;\r\n\t}\r\n\r\n\tpublic set skewX(val:number)\r\n\t{\r\n\t\tif (this.skewX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewX = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewY;\r\n\t}\r\n\r\n\tpublic set skewY(val:number)\r\n\t{\r\n\t\tif (this.skewY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewY = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewZ;\r\n\t}\r\n\r\n\tpublic set skewZ(val:number)\r\n\t{\r\n\t\tif (this.skewZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewZ = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this.scaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._setScaleX(val/this.getBox().width);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = this._matrix3D.rawData[12] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = this._matrix3D.rawData[13] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = this._matrix3D.rawData[14] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\r\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\r\n\t\tthis._transformComponents = new Array<Vector3D>(4);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._ske;\r\n\t\tthis._transformComponents[3] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone(newInstance:DisplayObject = null):DisplayObject\r\n\t{\r\n\t\tif (!newInstance)\r\n\t\t\tnewInstance = new DisplayObject();\r\n\r\n\t\tnewInstance.pivot = this.pivot;\r\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\r\n\t\t//newInstance.name=\"\";\r\n\t\tnewInstance._iMaskID = this._iMaskID;\r\n\t\tnewInstance._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\tif (this._adapter)\r\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\r\n\r\n\t\tif (this._transform.colorTransform)\r\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\t//scale updates if absolute dimensions are detected\r\n\t\t\tif (this._width != null)\r\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\r\n\r\n\t\t\tif (this._height != null)\r\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\r\n\r\n\t\t\tif (this._depth != null)\r\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @param maskFlag Whether to check against the object when it is used as mask\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis.x = dx;\r\n\t\tthis.y = dy;\r\n\t\tthis.z = dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (dx == 0 && dy == 0 && dz == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\tpublic reset_to_init_state():void\r\n\t{\r\n\t\tthis.visible=true;\r\n\t\tif(this._iMatrix3D)\r\n\t\t\tthis._iMatrix3D.identity();\r\n\t\tif(this.colorTransform)\r\n\t\t\tthis.colorTransform.clear();\r\n\t\t//this.name=\"\";\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[3];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this.scaleX;\r\n\t\t\tscale.y = this.scaleY;\r\n\t\t\tscale.z = this.scaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis.rotationX = ax;\r\n\t\tthis.rotationY = ay;\r\n\t\tthis.rotationZ = az;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = false;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis.x += x*len;\r\n\t\tthis.y += y*len;\r\n\t\tthis.z += z*len;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis.x = this._pos.x;\r\n\t\tthis.y = this._pos.y;\r\n\t\tthis.z = this._pos.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\tthis._pUpdatePivot();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 12; i++)\r\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\r\n\r\n\t\tthis.x = val.rawData[12];\r\n\t\tthis.y = val.rawData[13];\r\n\t\tthis.z = val.rawData[14];\r\n\r\n\t\tthis._elementsDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n        if (this._pParent) {\r\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n        }\r\n\r\n\t\tthis._pParent = value;\r\n\r\n        if (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\r\n        this._invalidateGlobalColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.queueDispatch(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._ske.x = this._skewX;\r\n\t\tthis._ske.y = this._skewY;\r\n\t\tthis._ske.z = this._skewZ;\r\n\r\n\t\tthis._sca.x = this._scaleX;\r\n\t\tthis._sca.y = this._scaleY;\r\n\t\tthis._sca.z = this._scaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t}\r\n\r\n\tpublic _pUpdatePivot()\r\n\t{\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.updateController();\r\n\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._skewDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\tif (!this._pivotZero)\r\n\t\t\tthis.invalidatePivot();\r\n\r\n\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateSkew(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._skewDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n    _updateGlobalColorTransform()\r\n    {\r\n        if (this._inheritColorTransform && this._pParent) {\r\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.prepend(this._pColorTransform);\r\n        } else {\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.copyFrom(this._pColorTransform);\r\n            else\r\n                this._globalColorTransform.clear();\r\n        }\r\n\r\n        this._globalColorTransformDirty = false;\r\n    }\r\n\r\n    // this method is to bypass that TypeScript can't call super setters.\r\n    _pSetColorTransform(value:ColorTransform)\r\n    {\r\n        this._pColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    _invalidateGlobalColorTransform()\r\n    {\r\n        this._globalColorTransformDirty = true;\r\n\r\n        if (!this._globalColorTransformChanged)\r\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\r\n\r\n        this.dispatchEvent(this._globalColorTransformChanged);\r\n    }\r\n\r\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    private onColorTransformChanged(event:Event)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\tprivate queueDispatch(event:Event)\r\n\t{\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\tprivate updateElements()\r\n\t{\r\n\t\tthis._elementsDirty = false;\r\n\r\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\r\n\t\t\tthis._skewX = vec.x;\r\n\t\t\tthis._skewY = vec.y;\r\n\t\t\tthis._skewZ = vec.z;\r\n\r\n\t\t\tthis.invalidateSkew(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[3];\r\n\r\n\t\tthis._width = null;\r\n\t\tthis._height = null;\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\r\n\t\t\tthis._scaleX = vec.x;\r\n\t\t\tthis._scaleY = vec.y;\r\n\t\t\tthis._scaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale(false);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _setScaleX(val:number)\r\n\t{\r\n\t\tif (this.scaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleY(val:number)\r\n\t{\r\n\t\tif (this.scaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleZ(val:number)\r\n\t{\r\n\t\tif (this.scaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\tpublic _colorTransform:ColorTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\n\r\nclass Timeline\r\n{\r\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\r\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\r\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\r\n\r\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\r\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\r\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\r\n\r\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\r\n\r\n\t// synched:\r\n\tpublic frame_command_indices:ArrayBufferView;\r\n\tpublic frame_recipe:ArrayBufferView;\r\n\r\n\t// synched:\r\n\tpublic command_index_stream:ArrayBufferView;\r\n\tpublic command_length_stream:ArrayBufferView;\r\n\r\n\tpublic add_child_stream:ArrayBufferView;\r\n\tpublic remove_child_stream:ArrayBufferView;\r\n\tpublic update_child_stream:ArrayBufferView;\r\n\r\n\tpublic update_child_props_length_stream:ArrayBufferView;\r\n\tpublic update_child_props_indices_stream:ArrayBufferView;\r\n\r\n\tpublic property_index_stream:ArrayBufferView;\r\n\tpublic property_type_stream:ArrayBufferView;\r\n\r\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\r\n\r\n\t// propertiy_values_stream:\r\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_strings:Array<string>;\r\n\r\n\tprivate _potentialPrototypes:Array<DisplayObject>;\r\n\r\n\tpublic numKeyFrames:number=0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis.keyframe_indices=[];\r\n\r\n\t\tthis._potentialPrototypes=[];\r\n\t\tthis._labels={};\r\n\t\tthis._framescripts={};\r\n\t\tthis._framescripts_translated={};\r\n\t}\r\n\r\n\tpublic init():void\r\n\t{\r\n\t\tif((this.frame_command_indices==null)||(this.frame_recipe==null)||(this.keyframe_durations==null))\r\n\t\t\treturn;\r\n\t\tthis.keyframe_firstframes=[];\r\n\t\tthis.keyframe_constructframes=[];\r\n\t\tvar frame_cnt=0;\r\n\t\tvar ic=0;\r\n\t\tvar ic2=0;\r\n\t\tvar keyframe_cnt=0;\r\n\t\tvar last_construct_frame=0;\r\n\t\tfor(ic=0; ic<this.numKeyFrames; ic++){\r\n\t\t\tvar duration=this.keyframe_durations[(ic)];\r\n\r\n\t\t\tif((this.frame_recipe[ic] & 1) == 1)\r\n\t\t\t\tlast_construct_frame=keyframe_cnt;\r\n\r\n\t\t\tthis.keyframe_firstframes[keyframe_cnt]=frame_cnt;\r\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++]=last_construct_frame;\r\n\r\n\t\t\tfor(ic2=0; ic2<duration; ic2++){\r\n\t\t\t\tthis.keyframe_indices[frame_cnt++]=ic;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get_framescript(keyframe_index:number):string\r\n\t{\r\n\t\tif(this._framescripts[keyframe_index]==null)\r\n\t\t\treturn \"\";\r\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\r\n\t\t\treturn this._framescripts[keyframe_index];\r\n\t\telse{\r\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\tpublic add_framescript(value:string, keyframe_index:number)\r\n\t{\r\n\t\tthis._framescripts[keyframe_index] = value;\r\n\t}\r\n\r\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\r\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\r\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\r\n\t}\r\n\r\n\r\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\r\n\t{\r\n\t\tif(this._framescripts[keyframe_idx]!=null){\r\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\r\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\r\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\r\n\t\t\t}\r\n\t\t\tif(scriptPass1)\r\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\r\n\t\t\telse\r\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get numFrames():number\r\n\t{\r\n\t\treturn this.keyframe_indices.length;\r\n\t}\r\n\r\n\r\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\r\n\t{\r\n\t\treturn this._potentialPrototypes[id];\r\n\r\n\t}\r\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\r\n\t{\r\n\t\treturn this.keyframe_indices[frame_index];\r\n\t}\r\n\r\n\tpublic getPotentialChilds() : Array<DisplayObject>\r\n\t{\r\n\t\treturn this._potentialPrototypes;\r\n\t}\r\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\r\n\t{\r\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\r\n\t\tthis_clone.name=\"\";\r\n\t\treturn this_clone;\r\n\t}\r\n\r\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\r\n\t{\r\n\t\tvar id = this._potentialPrototypes.length;\r\n\t\tthis._potentialPrototypes[id] = prototype;\r\n\t}\r\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\r\n\t{\r\n\t\tvar key_frame_index:number = this._labels[label];\r\n\t\tif(key_frame_index>=0)\r\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\r\n\r\n\t}\r\n\r\n\r\n\tpublic gotoFrame(target_mc:MovieClip, value : number)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\r\n\r\n\t\tvar firstframe=this.keyframe_firstframes[target_keyframe_idx];\r\n\t\tif(frameIndex==value){\r\n\t\t\t//we are already on exactly this frame.\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(current_keyframe_idx+1==target_keyframe_idx){\r\n\t\t\t// target_keyframe_idx is the next keyframe. we can just use constructnext for this\r\n\t\t\ttarget_mc.set_currentFrameIndex(value);\r\n\t\t\tthis.constructNextFrame(target_mc, true, true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(firstframe==value){\r\n\t\t\t//frame changed. and firstframe of keyframe. execute framescript if available\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\r\n\t\t}\r\n\r\n\t\tif(current_keyframe_idx==target_keyframe_idx) {\r\n\t\t\t// already constructed - exit\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar break_frame_idx:number=this.keyframe_constructframes[target_keyframe_idx];\r\n\r\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\r\n\r\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\r\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\r\n\r\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\r\n\t\tvar start_construct_idx:number=break_frame_idx;\r\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\r\n\t\tif((jump_forward)&&(!jump_gap)){\r\n\t\t\tstart_construct_idx=current_keyframe_idx+1;\r\n\t\t}\r\n\t\tvar target_childs_dic:Object=[];\r\n\t\tvar target_sessionIDs_dic:Object=[];\r\n\t\tvar i:number = target_mc.numChildren;\r\n\t\tvar child:DisplayObject;\r\n\r\n\t\tif((jump_forward) && (start_construct_idx==target_keyframe_idx)){\r\n\t\t\t// if we jump back, we dont want this shortcut, because we need to compare targetframe vs currentframe\r\n\r\n\t\t\t// shortcut: if the targetframe is the breakframe itself, we can just call constructNextFrame\r\n\t\t\t// before we do that, we need to clear the childlist\r\n/*\r\n\t\t\twhile(i--){\r\n\t\t\t\tchild = target_mc.getChildAt(i);\r\n\t\t\t\tif(child.adapter)child.adapter.freeFromScript();\r\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(child);\r\n\t\t\t\ttarget_mc.removeChild(child);\r\n\t\t\t}\r\n\t\t\ttarget_mc.set_currentFrameIndex(value);\r\n\t\t\tthis.constructNextFrame(target_mc, false);\r\n\t\t\treturn;\r\n\t\t\t*/\r\n\t\t}\r\n\r\n\t\twhile(i--){\r\n\t\t\tchild = target_mc.getChildAt(i);\r\n\t\t\tif(jump_gap){\r\n\t\t\t\t// if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\r\n\t\t\t\ttarget_mc.removeChild(child);\r\n\t\t\t}\r\n\t\t\telse if (jump_forward){\r\n\t\t\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\r\n\t\t\t\ttarget_childs_dic[target_mc.getChildDepth(child)]=child;\r\n\t\t\t\ttarget_sessionIDs_dic[target_mc.getChildDepth(child)]=child._sessionID;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\r\n\t\tvar update_indices:Array<number>=[];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\r\n\t\tvar update_cnt=0;\r\n\t\tvar k;\r\n\t\tfor(k=start_construct_idx;k<=target_keyframe_idx; k++){\r\n\t\t\tvar frame_command_idx:number=this.frame_command_indices[k];\r\n\t\t\tvar frame_recipe:number=this.frame_recipe[k];\r\n\r\n\t\t\tif ((frame_recipe & 2) == 2){\r\n\t\t\t\t// remove childs\r\n\t\t\t\tvar start_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tvar len = this.command_length_stream[frame_command_idx++];\r\n\t\t\t\tfor(var i:number = 0; i < len; i++){i\r\n\t\t\t\t\tdelete target_childs_dic[(this.remove_child_stream[start_index+i] - 16383)];\r\n\t\t\t\t\tdelete target_sessionIDs_dic[(this.remove_child_stream[start_index+i] - 16383)];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif((frame_recipe & 4)==4){\r\n\t\t\t\tvar start_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tvar len = this.command_length_stream[frame_command_idx++];\r\n\t\t\t\tvar i:number=len;\r\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t\t\t// this could be changed in exporter\r\n\t\t\t\twhile(i--){\r\n\t\t\t\t\tvar target:DisplayObject = target_mc.getPotentialChildInstance(this.add_child_stream[start_index*2 + i*2]);\r\n\t\t\t\t\t//target._sessionID = start_index + i;\r\n\t\t\t\t\ttarget_childs_dic[(this.add_child_stream[start_index*2 + i*2 + 1] - 16383)] = target;\r\n\t\t\t\t\ttarget_sessionIDs_dic[(this.add_child_stream[start_index*2 + i*2 + 1] - 16383)] = start_index + i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif((frame_recipe & 8)==8)\r\n\t\t\t\tupdate_indices[update_cnt++]=frame_command_idx;// execute update command later\r\n\t\t}\r\n\t\t//  step2: construct the final frame\r\n\r\n\t\tvar target_child_sessionIDS:Object={};\r\n\t\tfor (var key in target_sessionIDs_dic) {\r\n\t\t\tif (target_sessionIDs_dic[key] != null) {\r\n\t\t\t\ttarget_child_sessionIDS[target_sessionIDs_dic[key]] = key;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// check what childs are alive on both frames.\r\n\t\t// childs that are not alive anymore get removed and unregistered\r\n\t\t// childs that are alive on both frames get removed from the target_child_sessionIDS + target_childs_dic\r\n\t\ti = target_mc.numChildren;\r\n\t\twhile(i--){\r\n\t\t\tchild=target_mc.getChildAt(i);\r\n\t\t\tif(target_child_sessionIDS[child._sessionID]){\r\n\t\t\t\ttarget_childs_dic[target_child_sessionIDS[child._sessionID]]=null;\r\n\t\t\t\ttarget_child_sessionIDS[child._sessionID]=null;\r\n\t\t\t\ttarget_sessionIDs_dic[target_child_sessionIDS[child._sessionID]]=null;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (var key in target_childs_dic) {\r\n\t\t\tchild=target_childs_dic[key];\r\n\t\t\tif(child){\r\n\t\t\t\tchild._sessionID=target_sessionIDs_dic[key];\r\n\t\t\t\ttarget_mc.addChildAtDepth(child, parseInt(key));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\r\n\t\tvar frame_command_idx:number=0;\r\n\t\tfor(k=0;k<update_indices.length; k++){\r\n\t\t\tframe_command_idx=update_indices[k];\r\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\r\n\t\t}\r\n\t\tupdate_indices=null;\r\n\t\ttarget_mc.constructedKeyFrameIndex=target_keyframe_idx;\r\n\t}\r\n\r\n\r\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean=false)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\r\n\r\n\t\tif((queueScript)&&(this.keyframe_firstframes[new_keyFrameIndex]==frameIndex)){\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\r\n\t\t}\r\n\t\tif(constructed_keyFrameIndex!=new_keyFrameIndex){\r\n\t\t\ttarget_mc.constructedKeyFrameIndex=new_keyFrameIndex;\r\n\r\n\t\t\tvar frame_command_idx=this.frame_command_indices[new_keyFrameIndex];\r\n\t\t\tvar frame_recipe=this.frame_recipe[new_keyFrameIndex];\r\n\r\n\t\t\tif((frame_recipe & 1)==1) {\r\n\t\t\t\tvar i:number = target_mc.numChildren;\r\n\t\t\t\twhile (i--) {\r\n\t\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ((frame_recipe & 2)==2) {\r\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\t\t\t}\r\n\r\n\t\t\tif((frame_recipe & 4)==4)\r\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\r\n\t\t\tif((frame_recipe & 8)==8)\r\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tfor(var i:number = 0; i < len; i++) {\r\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// used to add childs when jumping between frames\r\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t// this could be changed in exporter \r\n\t\tvar i:number=len;\r\n\t\twhile(i--){\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[start_index*2 + i*2]);\r\n\t\t\ttarget._sessionID = start_index + i;\r\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[start_index*2 + i*2 + 1] - 16383);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number):void\r\n\t{\r\n\t\tvar register_objects:Array<DisplayObject>=[];\r\n\t\tvar props_cnt:number;\r\n\t\tvar props_start_idx:number;\r\n\t\tvar value_start_index:number;\r\n\t\tvar props_type:number;\r\n\t\tvar doit:boolean;\r\n\t\tfor(var i:number = 0; i < len; i++) {\r\n\t\t\tvar childID:number=this.update_child_stream[start_index + i];\r\n\t\t\t//var target:DisplayObject = sourceMovieClip.getPotentialChildInstance(childID);\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(childID);//target._sessionID);\r\n\t\t\tif (target!=null) {\r\n\t\t\t\tdoit = true;\r\n\t\t\t\t// check if the child is active + not blocked by script\r\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\r\n\t\t\t\t\tdoit = false;\r\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[start_index + i];\r\n\t\t\t\tprops_cnt = this.update_child_props_length_stream[start_index + i];\r\n\r\n\t\t\t\tfor(var p:number = 0; p < props_cnt; p++) {\r\n\t\t\t\t\tprops_type = this.property_type_stream[props_start_idx + p];\r\n\t\t\t\t\tvalue_start_index = this.property_index_stream[props_start_idx + p];\r\n\t\t\t\t\tswitch(props_type){\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 1:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 2:// colormatrix\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\r\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target.colorTransform || new ColorTransform();\r\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget.colorTransform = new_ct;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t// mask the mc with a list of objects\r\n\t\t\t\t\t\t\t// a object could have multiple groups of masks, in case a graphic clip was merged into the timeline\r\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\r\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\r\n\t\t\t\t\t\t\tvar mask_length:number=this.properties_stream_int[value_start_index++];\r\n\t\t\t\t\t\t\tvar mask:DisplayObject;\r\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\r\n\t\t\t\t\t\t\tfor(var m:number = 0; m < mask_length; m++){\r\n\t\t\t\t\t\t\t\tmask = masks[m] = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++]);//sourceMovieClip.getPotentialChildInstance();\r\n\t\t\t\t\t\t\t\tif(mask==null)\r\n\t\t\t\t\t\t\t\t\tthrow \"mask object not found !\";\r\n\t\t\t\t\t\t\t\tmask.mouseEnabled = false;\r\n\t\t\t\t\t\t\t\tif(mask.isAsset(DisplayObjectContainer))\r\n\t\t\t\t\t\t\t\t\t(<DisplayObjectContainer> mask).mouseChildren = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttarget._iMasks = masks;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 5:// instance name button instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\r\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 6://visible\r\n\r\n\t\t\t\t\t\t\tif (target.adapter && target.adapter.isVisibilityByScript()){}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 11:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 12:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 200:\r\n\t\t\t\t\t\t\t//todo: remove once runtime does not need id for mask anymore\r\n\t\t\t\t\t\t\ttarget._iMaskID = childID;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\nexport = Timeline;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveNormals = false;\r\n\t\tclone.autoDeriveTangents = false;\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.normals)\r\n\t\t\tclone.setNormals(this.normals.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\tif (this.tangents)\r\n\t\t\tclone.setTangents(this.tangents.clone());\r\n\r\n\t\tif (this.secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\r\n\r\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\r\n\t\tif (this.jointIndices)\r\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\r\n\r\n\t\tif (this.jointWeights)\r\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\r\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _depths:Array<number> = new Array<number>();\r\n\tprivate _nextHighestDepth:number = 0;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAt(child, this._children.length);\r\n\t}\r\n\r\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\t\t\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\r\n\r\n\t\tvar len:number = this._depths.length;\r\n\t\tvar index:number = len;\r\n\t\t\r\n\t\twhile (index--)\r\n\t\t\tif (this._depths[index] < depth)\r\n\t\t\t\tbreak;\r\n\r\n\t\tindex++;\r\n\r\n\t\tif (index < len) {\r\n\t\t\t//if replace flag & depths match current depth, remove the existing child\r\n\t\t\tif (this._depths[index] == depth) {\r\n\t\t\t\tif (replace) {\r\n\t\t\t\t\tthis.removeChildAt(index);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//move depth of existing child up by 1\r\n\t\t\t\t\tthis.addChildAtDepth(this._children[index], this._depths[index] + 1, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._children.splice(index, 0, child);\r\n\t\t\tthis._depths.splice(index, 0, depth);\r\n\t\t} else {\r\n\t\t\tthis._children.push(child);\r\n\t\t\tthis._depths.push(depth);\r\n\r\n\t\t\tthis._nextHighestDepth = depth + 1;\r\n\t\t}\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._depths[index] : this._nextHighestDepth, false);\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone(newInstance:DisplayObjectContainer = null):DisplayObject\r\n\t{\r\n\t\tnewInstance = <DisplayObjectContainer> super.clone(newInstance || new DisplayObjectContainer());\r\n\r\n\t\tnewInstance.partition = this.partition;\r\n\t\tnewInstance.mouseEnabled = this.mouseEnabled;\r\n\t\tnewInstance.mouseChildren = this.mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tnewInstance.addChild(this._children[i].clone());\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\t\r\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.getChildAt(this.getDepthIndexInternal(depth));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\tpublic getChildDepth(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\treturn this._depths[this.getChildIndex(child)];\r\n\t}\r\n\r\n\tpublic getNextHighestDepth()\r\n\t{\r\n\t\treturn this._nextHighestDepth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildAt(this.getChildIndex(child));\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\r\n\t}\t\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t\t\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number, index2:number)\r\n\t{\r\n\t\tvar depth:number = this._depths[index2];\r\n\t\tvar child:DisplayObject = this._children[index1];\r\n\r\n\t\tthis.addChildAtDepth(this._children[index2], this._depths[index1]);\r\n\t\tthis.addChildAtDepth(child, depth);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar min:number;\r\n\t\tvar max:number;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildAtInternal(index:number):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\r\n\t\tthis._depths.splice(index, 1);\r\n\r\n\t\t//if child is the last in array, update next highest depth\r\n\t\tif (index == this._children.length)\r\n\t\t\tthis._nextHighestDepth = this._depths[index - 1] + 1;\r\n\r\n\t\treturn child;\r\n\t}\r\n\t\r\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\r\n\t{\r\n\t\tvar index:number = this._depths.indexOf(depth);\r\n\r\n\t\tif (index == -1)\r\n\t\t\tthrow new ArgumentError(\"No child at specified depth\");\r\n\r\n\t\treturn index;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\tif(this._iMaskID!==-1 && !masksFlag)return;\r\n\t\tif(this.visible==false)return;\r\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\r\n\t\t{\r\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\r\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\r\n\t\t\tif(childHit) {\r\n\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\r\n\t\t\t\tif(all_masks){\r\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\r\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\tif(mask_child.parent){\r\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\r\n\t\t\t\t\t\t\tif(childHit) return true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loaderSession:LoaderSession;\r\n\tprivate _loaderSessionGarbage:LoaderSession;\r\n\tprivate _gcTimeoutIID:number;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (!this._loaderSession)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\r\n\t\t}\r\n\t\t\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, LoaderSession will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tprivate _getLoaderSession()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tthis._loaderSession = lib.getLoaderSession();\r\n\t\t} else {\r\n\t\t\tthis._loaderSession = new LoaderSession();\r\n\t\t}\r\n\r\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn this._loaderSession;\r\n\t}\r\n\r\n\tprivate _disposeLoaderSession()\r\n\t{\r\n\t\t// Add loader to garbage - for a collection sweep and kill\r\n\t\tthis._loaderSessionGarbage = this._loaderSession;\r\n\t\tdelete this._loaderSession;\r\n\t\tthis._loaderSession = null;\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tLoaderSession.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tLoaderSession.enableParsers(parserClasses);\r\n\t}\r\n\t\r\n\tprivate loaderSessionGC():void\r\n\t{\r\n\t\t//remove listeners\r\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\tif (!this._useAssetLib)\r\n\t\t\tthis._loaderSessionGarbage.stop();\r\n\r\n\t\tdelete this._loaderSessionGarbage;\r\n\t\tthis._loaderSessionGarbage = null;\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\tpublic _pControllerDirty:boolean;\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject)\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pAutoUpdate)\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\telse\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic updateController()\r\n\t{\r\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\r\n\t\t\tthis._pControllerDirty = false;\r\n\t\t\tthis.pNotifyUpdate();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pControllerDirty = true;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._pColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tsuper._pSetColorTransform(value);\r\n\t}\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        for (i = 0; i < len; ++i)\r\n            clone.addChild(this.getChildAt(i).clone());\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\r\n\t\t\tif (this.numChildren) {\r\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\r\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\r\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\r\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\r\n\t\t\t} else {\r\n\t\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\r\n\t\t\t\t\tminZ = maxZ = 0;\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < tmp_minZ)\r\n\t\t\t\t\t\ttmp_minZ = p;\r\n\t\t\t\t\telse if (p > tmp_maxZ)\r\n\t\t\t\t\t\ttmp_maxZ = p;\r\n\t\t\t\t}\r\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\r\n\t\t\t\t\tminZ = tmp_minZ;\r\n\t\t\t\t\tmaxZ = tmp_maxZ;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\t// if this is a mask, directly return false\r\n\t\tif(this._iMaskID!==-1 && !masksFlag)return false;\r\n\r\n\t\t// if this is invisible, all children should be invisible too.\r\n\t\t// todo: is the above statement correct for awayjs visible-property ?\r\n\t\tif(this.visible==false)return false;\r\n\r\n\t\t// from this point out, we can not return false, without checking collision of childs.\r\n\t\t\r\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\r\n\r\n\t\tif(this.geometry) {\r\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\r\n\t\t\t\tif (!shapeFlag)\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\r\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\r\n\r\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\r\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\r\n\t\t\t\t\t\tif (all_masks) {\r\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\r\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\r\n\t\t\t\t\t\t\tif (all_hir_masks){\r\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\r\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\r\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\r\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar hit:boolean = false;\r\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\r\n\t\tif(hit)\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\r\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\r\n\r\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\r\nimport SceneEvent = require(\"awayjs-display/lib/events/SceneEvent\");\r\n\r\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\r\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\r\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\nclass MovieClip extends DisplayObjectContainer\r\n{\r\n    public static assetType:string = \"[asset MovieClip]\";\r\n\r\n    private _timeline:Timeline;\r\n\r\n    private _isButton:boolean;\r\n    private _onMouseOver:(event:MouseEvent) => void;\r\n    private _onMouseOut:(event:MouseEvent) => void;\r\n    private _onMouseDown:(event:MouseEvent) => void;\r\n    private _onMouseUp:(event:MouseEvent) => void;\r\n\r\n    private _time:number;// the current time inside the animation\r\n    private _currentFrameIndex:number;// the current frame\r\n    private _constructedKeyFrameIndex:number;// the current index of the current active frame\r\n\r\n    private _fps:number;// we use ms internally, but have fps, so user can set time by frame\r\n    private _isPlaying:boolean;// false if paused or stopped\r\n    private _loop:boolean = true;\r\n\r\n    // not sure if needed\r\n    private _enterFrame:Event;\r\n    private _skipAdvance : boolean;\r\n    private _isInit : boolean;\r\n\r\n    private _potentialInstances:Array<DisplayObject>;\r\n    private _active_session_ids:Array<DisplayObject>;\r\n   // private _framescripts_to_execute:Array<Function>;\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IMovieClipAdapter\r\n\t{\r\n\t\treturn <IMovieClipAdapter> this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IMovieClipAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    constructor(timeline:Timeline = null)\r\n    {\r\n        super();\r\n        this._active_session_ids=[];\r\n        this._potentialInstances = [];\r\n        this._currentFrameIndex = -1;\r\n        this._constructedKeyFrameIndex = -1;\r\n        this._isInit=true;\r\n        this._isPlaying = true; // auto-play\r\n        this._isButton=false;\r\n\r\n        this._fps = 30;\r\n        this._time = 0;\r\n        this._enterFrame = new Event(Event.ENTER_FRAME);\r\n        this.inheritColorTransform = true;\r\n\r\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\r\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\r\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\r\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\r\n\r\n        this._timeline = timeline || new Timeline();\r\n    }\r\n\r\n    public get isInit():boolean\r\n    {\r\n        return this._isInit;\r\n    }\r\n    public set isInit(value:boolean)\r\n    {\r\n        this._isInit = value;\r\n    }\r\n\r\n\r\n    public get timeline():Timeline\r\n    {\r\n        return this._timeline;\r\n    }\r\n    public set timeline(value:Timeline)\r\n    {\r\n        this._timeline = value;\r\n    }\r\n    public get loop()\r\n    {\r\n        return this._loop;\r\n    }\r\n\r\n    public set loop(value:boolean)\r\n    {\r\n        this._loop = value;\r\n    }\r\n\r\n    public get numFrames() : number\r\n    {\r\n        return this._timeline.numFrames;\r\n    }\r\n\r\n    public jumpToLabel(label:string) : void\r\n    {\r\n        // the timeline.jumpTolabel will set currentFrameIndex\r\n        this._timeline.jumpToLabel(this, label);\r\n    }\r\n\r\n    public get currentFrameIndex() : number\r\n    {\r\n        return this._currentFrameIndex;\r\n    }\r\n    public get constructedKeyFrameIndex() : number\r\n    {\r\n        return this._constructedKeyFrameIndex;\r\n    }\r\n\r\n    public set constructedKeyFrameIndex(value : number)\r\n    {\r\n        this._constructedKeyFrameIndex = value;\r\n    }\r\n\r\n    public exit_frame():void\r\n    {\r\n\r\n        this._skipAdvance = false;\r\n        var i:number=this.numChildren;\r\n        while (i--){\r\n            var child:DisplayObject=this.getChildAt(i);\r\n            if(child.isAsset(MovieClip)){\r\n                (<MovieClip>child).exit_frame();\r\n            }\r\n        }\r\n    }\r\n    public reset():void\r\n    {\r\n        // time only is relevant for the root mc, as it is the only one that executes the update function\r\n        this._time = 0;\r\n\r\n        if(this.adapter)this.adapter.freeFromScript();\r\n\r\n        this._isPlaying = true;\r\n\r\n        this._currentFrameIndex = -1;\r\n        this._constructedKeyFrameIndex = -1;\r\n        var i:number=this.numChildren;\r\n        while (i--){\r\n            this.removeChildAt(i);\r\n        }\r\n\r\n        this._skipAdvance = true;\r\n        if (this._timeline.numFrames) {\r\n            this._currentFrameIndex = 0;\r\n            this._timeline.constructNextFrame(this, true, true);\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\r\n     */\r\n    public set_currentFrameIndex(value : number) {\r\n        this._skipAdvance = true;\r\n        this._currentFrameIndex = value;\r\n    }\r\n    /*\r\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\r\n     */\r\n    public set currentFrameIndex(value : number)\r\n    {\r\n        if(this._timeline.numFrames) {\r\n            value = Math.floor(value);\r\n            if (value < 0)\r\n                value = 0;\r\n            else if (value >= this._timeline.numFrames)\r\n                value = this._timeline.numFrames - 1;\r\n\r\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\r\n            this._skipAdvance = true;\r\n            //this._time = 0;\r\n\r\n            this._timeline.gotoFrame(this, value);\r\n            this._currentFrameIndex = value;\r\n        }\r\n    }\r\n\r\n    public addButtonListeners()\r\n    {\r\n        this._isButton = true;\r\n\r\n        this.stop();\r\n\r\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n    }\r\n\r\n    public removeButtonListeners()\r\n    {\r\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n\r\n    }\r\n\r\n    public getChildAtSessionID(sessionID:number):DisplayObject\r\n    {\r\n        return this._active_session_ids[sessionID];\r\n    }\r\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n    {\r\n        //this should be implemented for all display objects\r\n        child.inheritColorTransform = true;\r\n        child.reset_to_init_state();// this takes care of transform and visibility\r\n\t\tsuper.addChildAtDepth(child, depth, replace);\r\n        if(child.isAsset(MovieClip))(<MovieClip>child).reset();\r\n        this._active_session_ids[child._sessionID]=child;\r\n        return child;\r\n    }\r\n\r\n    public removeChild(child:DisplayObject):DisplayObject\r\n    {\r\n        super.removeChild(child);\r\n        if(child.adapter)child.adapter.freeFromScript();\r\n        this.adapter.unregisterScriptObject(child);\r\n        this._active_session_ids[child._sessionID]=null;\r\n        return child;\r\n    }\r\n\r\n    public removeChildAtDepth(depth:number /*int*/):DisplayObject\r\n    {\r\n        var child:DisplayObject=super.removeChildAtDepth(depth);\r\n        if(child.adapter)child.adapter.freeFromScript();\r\n        this.adapter.unregisterScriptObject(child);\r\n        this._active_session_ids[child._sessionID]=null;\r\n        return child;\r\n    }\r\n    public removeChildAt(index:number /*int*/):DisplayObject\r\n    {\r\n        var child:DisplayObject=super.removeChildAt(index);\r\n        if(child.adapter)child.adapter.freeFromScript();\r\n        this.adapter.unregisterScriptObject(child);\r\n        this._active_session_ids[child._sessionID]=null;\r\n        return child;\r\n    }\r\n\r\n    public get fps():number\r\n    {\r\n        return this._fps;\r\n    }\r\n\r\n    public set fps(newFps:number)\r\n    {\r\n        this._fps = newFps;\r\n    }\r\n\r\n    public get assetType():string\r\n    {\r\n        return MovieClip.assetType;\r\n    }\r\n\r\n    /**\r\n     * Starts playback of animation from current position\r\n     */\r\n    public play()\r\n    {\r\n        this._isPlaying = true;\r\n    }\r\n\r\n    /**\r\n     * should be called right before the call to away3d-render.\r\n     */\r\n    public update(timeDelta:number)\r\n    {\r\n        //this.logHierarchy();\r\n        // TODO: Implement proper elastic racetrack logic\r\n        var frameMarker:number = Math.floor(1000/this._fps);\r\n\r\n        // right now, just advance frame once time marker has been reached (only allow for one frame advance per-update)\r\n        this._time += Math.min(timeDelta, frameMarker);\r\n\r\n        if (this._time >= frameMarker) {\r\n            this._time = 0;\r\n            this.advanceFrame();\r\n            // after we advanced the scenegraph, we might have some script that needs executing\r\n            FrameScriptManager.execute_queue();\r\n\r\n            // now we want to execute the onEnter\r\n            this.dispatchEvent(this._enterFrame);\r\n            // after we executed the onEnter, we might have some script that needs executing\r\n            FrameScriptManager.execute_queue();\r\n\r\n\r\n            FrameScriptManager.execute_intervals();\r\n            FrameScriptManager.execute_queue();\r\n\r\n            this.exit_frame();\r\n\r\n        }\r\n    }\r\n\r\n    public getPotentialChildInstance(id:number) : DisplayObject\r\n    {\r\n        if (!this._potentialInstances[id]) {\r\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\r\n        }\r\n\r\n        return this._potentialInstances[id];\r\n    }\r\n\r\n\r\n    /**\r\n     * Stop playback of animation and hold current position\r\n     */\r\n    public stop()\r\n    {\r\n        this._isPlaying = false;\r\n    }\r\n\r\n    public clone(newInstance:MovieClip = null) : DisplayObject\r\n    {\r\n        newInstance = <MovieClip> super.clone(newInstance || new MovieClip(this._timeline));\r\n\r\n        newInstance._fps = this._fps;\r\n        newInstance._loop = this._loop;\r\n\r\n        return newInstance;\r\n    }\r\n\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper.iSetParent(value);\r\n\t}\r\n\r\n    public advanceFrame(skipChildren:boolean = false)\r\n    {\r\n        if(this._timeline.numFrames) {\r\n            var i;\r\n            var oldFrameIndex = this._currentFrameIndex;\r\n            var advance = (this._isPlaying && !this._skipAdvance) || oldFrameIndex == -1;\r\n            if (advance && oldFrameIndex == this._timeline.numFrames - 1 && !this._loop) {\r\n                advance = false;\r\n            }\r\n            if (advance && oldFrameIndex == 0 && this._timeline.numFrames == 1) {\r\n                this._currentFrameIndex = 0;\r\n                advance = false;\r\n            }\r\n            if (advance) {\r\n                ++this._currentFrameIndex;\r\n                if (this._currentFrameIndex == this._timeline.numFrames) {\r\n                    // looping - jump to first frame.\r\n                    this.currentFrameIndex=0;\r\n                }\r\n                else if (oldFrameIndex != this._currentFrameIndex){\r\n                    // not looping - construct next frame\r\n                    this._timeline.constructNextFrame(this);\r\n                }\r\n            }\r\n            if (!skipChildren)\r\n                this.advanceChildren();\r\n\r\n        }\r\n        this._skipAdvance = false;\r\n    }\r\n\r\n    private advanceChildren()\r\n    {\r\n        var len = this.numChildren;\r\n        for (var i = 0; i <  len; ++i) {\r\n            var child = this.getChildAt(i);\r\n            if (child instanceof MovieClip)\r\n                (<MovieClip>child).advanceFrame();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n// DEBUG CODE:\r\n    logHierarchy(depth: number = 0):void\r\n    {\r\n        this.printHierarchyName(depth, this);\r\n\r\n        var len = this.numChildren;\r\n        for (var i = 0; i < len; i++) {\r\n            var child = this.getChildAt(i);\r\n\r\n            if (child instanceof MovieClip)\r\n                (<MovieClip>child).logHierarchy(depth + 1);\r\n            else\r\n                this.printHierarchyName(depth + 1, child);\r\n        }\r\n    }\r\n\r\n    printHierarchyName(depth:number, target:DisplayObject)\r\n    {\r\n        var str = \"\";\r\n        for (var i = 0; i < depth; ++i)\r\n            str += \"--\";\r\n\r\n        str += \" \" + target.name + \" = \" + target._iMaskID;\r\n        console.log(str);\r\n    }\r\n\r\n\r\n}\r\nexport = MovieClip;\r\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tvalue=value.toString();\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t\tthis.type = TextFieldType.STATIC;\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\r\n\t\tif(this._textFormat==null)\r\n\t\t\treturn;\r\n\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._text==\"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\t\tvar additional_margin_x:number=2;\r\n\t\tvar additional_margin_y:number=2;\r\n\t\tfont_chars_scale\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar y_offset:number=additional_margin_y;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\t\t\tvar textlines2:Array<string> = textlines[tl].split(\"\\n\");\r\n\t\t\tfor (var t2 = 0; t2 < textlines2.length; t2++) {\r\n\t\t\t\tvar line_width:number = 0;\r\n\t\t\t\tvar c_cnt:number = 0;\r\n\t\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\r\n\t\t\t\tvar font_chars_scale:Array<number> =[];\r\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\r\n\t\t\t\t\tchar_scale=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\r\n\t\t\t\t\tif(this_char == null) {\r\n\t\t\t\t\t\tif(this._textFormat.fallback_font_table) {\r\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\r\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfont_chars_scale[c_cnt]=char_scale;\r\n\t\t\t\t\tfont_chars[c_cnt++]=this_char;\r\n\t\t\t\t}\r\n\t\t\t\tvar x_offset:number=additional_margin_x;\r\n\t\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\t\tx_offset=(this._textWidth-line_width)/2;\r\n\t\t\t\t}\r\n\t\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\t\tx_offset=(this._textWidth-line_width)-additional_margin_x;\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\r\n\t\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\r\n\t\t\t\t\tchar_scale = font_chars_scale[i];\r\n\t\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n\t\tclone.geometry = new Geometry();\r\n\t\t//clone.material = this._material;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.boundsType = this.boundsType;\r\n\r\n\r\n\t\tclone.name = this.name;\r\n\t\tclone.castsShadows = this.castsShadows;\r\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\t\t//this is of course no proper cloning\r\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n\t\tclone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t//var len:number = this._subMeshes.length;\r\n\t\t//for (var i:number = 0; i < len; ++i)\r\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n\t\tvar len = this.numChildren;\r\n\t\tvar i;\r\n\t\tfor (i = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this.getChildAt(i).clone());\r\n\r\n\t\t//if (this._animator)\r\n\t\t//\tclone.animator = this._animator.clone();\r\n\t\tclone.textWidth=this.textWidth;\r\n\t\tclone.textHeight=this.textHeight;\r\n       \tclone.textFormat = this._textFormat;\r\n        //clone.textColor = clone.textColor;\r\n       \tclone.text = this._text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\r\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultColorMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\r\n\t\t}\r\n\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\r\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\r\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImageCube()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImage2D()\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\r\n\t}\r\n\r\n\tprivate static createDefaultTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultColorMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\n\r\nclass FrameScriptManager\r\n{\r\n\tprivate static _queued_mcs:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts:Array<Function> = [];\r\n\r\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\r\n\r\n\tprivate static _active_intervals:Object = []; // maps id to function\r\n\r\n\tprivate static _intervalID:number=0;\r\n\tpublic static setInterval(func:any):number\r\n\t{\r\n\t\tthis._intervalID++;\r\n\t\tthis._active_intervals[this._intervalID]=func;\r\n\t\treturn this._intervalID\r\n\t}\r\n\r\n\tpublic static clearInterval(id:number):void\r\n\t{\r\n\t\tdelete this._active_intervals[id];\r\n\t}\r\n\r\n\tpublic static execute_intervals():void\r\n\t{\r\n\t\tfor(var key in this._active_intervals){\r\n\t\t\tthis._active_intervals[key].call();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2=[];\r\n\t\tthis._queued_scripts_pass2=[];\r\n\t\tthis._queued_mcs.push(mc);\r\n\t\tthis._queued_scripts.push(script);\r\n\t}\r\n\r\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\tthis._queued_mcs_pass2.push(mc);\r\n\t\tthis._queued_scripts_pass2.push(script);\r\n\t}\r\n\r\n\tpublic static execute_queue():void\r\n\t{\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2=[];\r\n\t\tthis._queued_scripts_pass2=[];\r\n\r\n\t\tvar mc:MovieClip;\r\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\r\n\t\t\t// during the loop we might add more scripts to the queue\r\n\t\t\tmc=this._queued_mcs[i];\r\n\t\t\tif(mc.scene!=null) {\r\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (err) {\r\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\r\n\t\t\t\t\tconsole.log(err.message);\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// all scripts executed. clear all\r\n\t\tthis._queued_mcs=[];\r\n\t\tthis._queued_scripts=[];\r\n\t}\r\n}\r\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:DirectionalLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tpublic _sceneGraphDepths:Array<number> = new Array<number>();\r\n\tprivate _pool:EntityNodePool;\r\n\tpublic _entity:DisplayObject;\r\n\tprivate _partition:Partition;\r\n\tpublic _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():DisplayObject\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\r\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:LightProbe;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade) {\r\n\t\t\tvar t:EntityNode = this._updateQueue;\r\n\t\t\twhile (t) {\r\n\t\t\t\t//required for controllers with autoUpdate set to true and queued events\r\n\t\t\t\tt.entity._iInternalUpdate();\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\t\t\t}\r\n\t\t\tthis.updateEntities();\r\n\t\t}\r\n\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tnode.removeFromParent();\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:PointLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport SceneGraphNodePool = require(\"awayjs-display/lib/pool/SceneGraphNodePool\");\r\n\r\n\r\n/**\r\n * Maintains scenegraph heirarchy when collecting nodes\r\n */\r\nclass SceneGraphNode extends NodeBase\r\n{\r\n    private _container : DisplayObjectContainer;\r\n    private _pool : SceneGraphNodePool;\r\n    private _partition:Partition;\r\n\r\n    constructor(pool:SceneGraphNodePool, container:DisplayObjectContainer, partition:Partition)\r\n    {\r\n        super();\r\n        this._pool = pool;\r\n        this._container = container;\r\n        this._partition = partition;\r\n    }\r\n\r\n\t//\r\n    ///**\r\n    // *\r\n    // * @param entity\r\n    // * @returns {away.partition.NodeBase}\r\n    // */\r\n    //public findPartitionForEntity(entity:IEntity):NodeBase\r\n    //{\r\n    //    var sceneGraphNode:SceneGraphNode = this._pool.getItem(entity.parent);\r\n    //    if (sceneGraphNode != this)\r\n    //        this.findNodeForContainer();\r\n    //\r\n    //\r\n    //        return sceneGraphNode;\r\n    //    }\r\n    //    return this;\r\n    //}\r\n\t//\r\n    //public iAddNode(node:NodeBase)\r\n    //{\r\n    //    super.iAddNode(node);\r\n\t//\r\n    //    //recalc depth array\r\n    //    var entityNode = <EntityNode>(node);\r\n    //    entityNode._sceneGraphDepths.length = 0;\r\n\t//\r\n    //    var parent:DisplayObjectContainer;\r\n    //    var child:DisplayObject = entityNode.entity;\r\n    //    while ((parent = child.parent)) {\r\n    //        entityNode._sceneGraphDepths.push(parent.getChildDepth(child));\r\n    //        child = parent;\r\n    //    }\r\n    //}\r\n}\r\nexport = SceneGraphNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:Skybox;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport ISceneGraphNodeClass\t\t\t= require(\"awayjs-display/lib/pool/ISceneGraphNodeClass\");\r\n\r\n\r\n/**\r\n * @class away.pool.SceneGraphNodePool\r\n */\r\nclass SceneGraphNodePool\r\n{\r\n\tprivate _sceneGraphNodePool:Object = new Object();\r\n\tprivate _sceneGraphNodeClass:ISceneGraphNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param sceneGraphNodeClass\r\n\t */\r\n\tconstructor(sceneGraphNodeClass:ISceneGraphNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._sceneGraphNodeClass = sceneGraphNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param displayObjectContainer\r\n\t * @returns SceneGraphNode\r\n\t */\r\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\r\n\t{\r\n\t\treturn (this._sceneGraphNodePool[displayObjectContainer.id] || (this._sceneGraphNodePool[displayObjectContainer.id] = new this._sceneGraphNodeClass(this, displayObjectContainer, this._partition)));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param displayObjectContainer\r\n\t */\r\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\r\n\t{\r\n\t\tvar sceneGraphNode:SceneGraphNode = this._sceneGraphNodePool[displayObjectContainer.id];\r\n\r\n\t\tif (sceneGraphNode)\r\n\t\t\tthis._sceneGraphNodePool[displayObjectContainer.id] = null;\r\n\r\n\t\treturn sceneGraphNode;\r\n\t}\r\n}\r\n\r\nexport = SceneGraphNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get font_styles():Array<FontTable>\r\n\t{\r\n\t\treturn this._font_styles;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tpublic _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _whitespace_width:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_whitespace_width(value:number):void\r\n\t{\r\n\t\tthis._whitespace_width=value;\r\n\t}\r\n\tpublic get_whitespace_width():number\r\n\t{\r\n\t\treturn this._whitespace_width\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>static</code> TextField.\r\n\t */\r\n\tpublic static STATIC:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic fallback_font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 3;\r\n\t\t\tf2 += 3;\r\n\t\t\tf3 += 3;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "cells",
    "Array",
    "lastCollisionIndex",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoxBounds",
    "target",
    "getCurveGeometryBoxBounds",
    "getSphereBounds",
    "center",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_pImplicitColorTransform",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pRenderables",
    "_entityNodes",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "zOffset",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "_explicitColorTransform",
    "alphaMultiplier",
    "_iColorTransform",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "x",
    "rotationX",
    "y",
    "rotationY",
    "z",
    "rotationZ",
    "height",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "_updateMaskMode",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "SCENE_TRANSFORM",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "maskMode",
    "MASKS",
    "width",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "copyTo",
    "partition",
    "boundsType",
    "name",
    "mouseEnabled",
    "extra",
    "masks",
    "_iMatrix3D",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "setTo",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "invalidatePartition",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "MASK_ID",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "event",
    "elements",
    "mouseChildren",
    "concat",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "this_clone",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "child",
    "removeChildAt",
    "resetDepths",
    "depth_childs",
    "getChildDepths",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "start_index",
    "end_index",
    "idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "_children",
    "isBlockedByScript",
    "isVisibilityByScript",
    "key",
    "addChildAtDepth",
    "Number",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "props_start_idx",
    "props_len",
    "props_end_index",
    "value_start_index",
    "props_type",
    "doit",
    "getChildAtSessionID",
    "update_child_stream",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "getTriangleGeometryBoxBounds",
    "getTriangleGeometrySphereBounds",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_depth_childs",
    "_depth_sessionIDs",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "getDepthIndexInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAt",
    "getSessionIDAtDepth",
    "getChildAtDepth",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "boxMin",
    "boxMax",
    "SIMD",
    "Float32x4",
    "add",
    "minNum",
    "maxNum",
    "extractLane",
    "setEmpty",
    "bitFlag",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "shareAnimationGeometry",
    "getSubMeshFromSubGeometry",
    "_center",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "hitTestCurveGeometry",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "TextField",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "loop",
    "_sessionID_childs",
    "_potentialInstances",
    "_currentFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "reset_textclones",
    "isAsset",
    "text",
    "numFrames",
    "exit_frame",
    "_skipAdvance",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "skipChildren",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/entities/TextField",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "TextFieldType",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "reConstruct",
    "_textFormat",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "textlines",
    "split",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "textWidth",
    "fw",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "curves",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "findParentForNode",
    "node",
    "isContainer",
    "getItem",
    "iAddNode",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "pop",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "iMarkForUpdate",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "disposeItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "rootContainer",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "posDim",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "bx",
    "by",
    "curvex",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "containerNode",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "precheck",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "posDim2",
    "maxRadiusSquared",
    "radiusSquared",
    "sub",
    "mul",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\t//used for hittesting geometry\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\n\tpublic lastCollisionIndex:number = -1;\n\tpublic divisions:number;\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getCurveGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for triangles\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tpublic _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tprivate _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _explicitColorTransform:ColorTransform;\n\tpublic _pImplicitColorTransform:ColorTransform = new ColorTransform();\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._explicitColorTransform? this._explicitColorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._explicitColorTransform)\n\t\t\tthis._iColorTransform = new ColorTransform();\n\n        this._explicitColorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tthis._pivot.x = pivot.x;\n\t\tthis._pivot.y = pivot.y;\n\t\tthis._pivot.z = pivot.z;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = this._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = this._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = this._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject)\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis.x = dx;\n\t\tthis.y = dy;\n\t\tthis.z = dz;\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._iMatrix3D)\n\t\t\tthis._iMatrix3D.identity();\n\n\t\tif(this._iColorTransform)\n\t\t\tthis._iColorTransform.clear();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.x += x*len;\n\t\tthis.y += y*len;\n\t\tthis.z += z*len;\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis.x = this._pos.x;\n\t\tthis.y = this._pos.y;\n\t\tthis.z = this._pos.z;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 12; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis.x = val.rawData[12];\n\t\tthis.y = val.rawData[13];\n\t\tthis.z = val.rawData[14];\n\n\t\tthis._elementsDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic get _iColorTransform():ColorTransform\n\t{\n\t\treturn this._explicitColorTransform;\n\t}\n\n\tpublic set _iColorTransform(value:ColorTransform)\n\t{\n\t\tthis._explicitColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartition();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\n\t\tif (!this._pivotZero)\n\t\t\tthis.invalidatePivot();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tif (this._listenToSkewChanged)\n\t\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (this._inheritColorTransform && this._pParent) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\t\t\tif (this._explicitColorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._explicitColorTransform);\n\t\t} else {\n\t\t\tif (this._explicitColorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._explicitColorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = !this._maskMode;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices=[];\n\n\t\tthis._potentialPrototypes=[];\n\t\tthis._labels={};\n\t\tthis._framescripts={};\n\t\tthis._framescripts_translated={};\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChilds():Array<DisplayObject>\n\t{\n\t\treturn this._potentialPrototypes;\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\n\t\tthis_clone.name=\"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index>=0)\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\n\t}\n\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\n\t\tif (frameIndex == value) //we are already on exactly this frame.\n\t\t\treturn;\n\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tvar firstframe:number = this.keyframe_firstframes[target_keyframe_idx];\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\t//if (!skip_script && firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\t//\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\t\t\treturn;\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = break_frame_idx;\n\n\t\tif (jump_forward && !jump_gap) // in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\n\t\t\tstart_construct_idx = current_keyframe_idx + 1;\n\n\t\tvar i:number;\n\t\tvar k:number;\n\t\tvar child:DisplayObject;\n\t\tvar depth:number;\n\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\n\t\tif (!jump_forward)\n\t\t\ttarget_mc.resetDepths();\n\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\tvar depth_childs:Object = target_mc.getChildDepths();\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\n\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\n\t\tvar update_indices:Array<number> = [];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar frame_command_idx:number;\n\t\tvar frame_recipe:number;\n\t\tvar start_index:number;\n\t\tvar end_index:number;\n\t\tvar idx:number;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tframe_command_idx = this.frame_command_indices[k];\n\t\t\tframe_recipe = this.frame_recipe[k];\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++) {\n\t\t\t\t\tdepth = this.remove_child_stream[i] - 16383;\n\t\t\t\t\tdelete depth_childs[depth];\n\t\t\t\t\tdelete depth_sessionIDs[depth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--) {\n\t\t\t\t\tidx = i*2;\n\t\t\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[idx]);\n\n\t\t\t\t\tdepth = this.add_child_stream[idx + 1] - 16383;\n\t\t\t\t\tdepth_childs[depth] = child;\n\t\t\t\t\tdepth_sessionIDs[depth] = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tupdate_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\n\t\t//  step2: construct the final frame\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames are reset if we are jumping back\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\n\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (!jump_forward) {\n\t\t\t\tif(child.adapter) {\n\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\n\t\t\t\t\t\tif (child._iMatrix3D) {\n\t\t\t\t\t\t\tchild._iMatrix3D.identity();\n\t\t\t\t\t\t\tchild.x = child._iMatrix3D.rawData[12];\n\t\t\t\t\t\t\tchild.y = child._iMatrix3D.rawData[13];\n\t\t\t\t\t\t\tchild._elementsDirty = true;\n\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (child._iColorTransform) {\n\t\t\t\t\t\t\tchild._iColorTransform.clear();\n\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//this.name=\"\";\n\t\t\t\t\t\tchild.masks = null;\n\t\t\t\t\t\tchild.maskMode = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\n\t\t\t\t\t\tchild.visible = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!skip_script && firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\t\t// now we need to addchild the objects that were added before targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\t\tfor (var key in depth_sessionIDs) {\n\t\t\tchild = depth_childs[key];\n\t\t\tif (child._sessionID == -1) {\n\t\t\t\tchild._sessionID = depth_sessionIDs[key];\n\t\t\t\ttarget_mc.addChildAtDepth(child, Number(key));\n\t\t\t}\n\t\t}\n\n\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tvar frame_command_idx:number;\n\t\tvar len:number = update_indices.length;\n\t\tfor (k = 0; k < len; k++) {\n\t\t\tframe_command_idx = update_indices[k];\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\n\t\t}\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(constructed_keyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar end_index:number = start_index + len;\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]);\n\t\t\ttarget._sessionID = i;\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[idx + 1] - 16383);\n\t\t}\n\t}\n\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tvar props_start_idx:number;\n\t\tvar props_len:number;\n\t\tvar props_end_index:number;\n\t\tvar value_start_index:number;\n\t\tvar props_type:number;\n\t\tvar doit:boolean;\n\t\tvar end_index:number = start_index + len;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (target != null) {\n\t\t\t\tdoit = true;\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\n\t\t\t\t\tdoit = false;\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_len = this.update_child_props_length_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + props_len;\n\t\t\t\tfor(var p:number = props_start_idx; p < props_end_index; p++) {\n\t\t\t\t\tprops_type = this.property_type_stream[p];\n\t\t\t\t\tvalue_start_index = this.property_index_stream[p];\n\t\t\t\t\tswitch(props_type){\n\t\t\t\t\t\tcase 0:\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\n\n\t\t\t\t\t\t\t\ttarget.x = new_matrix.rawData[12];\n\t\t\t\t\t\t\t\ttarget.y = new_matrix.rawData[13];\n\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 2:// colormatrix\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target._iColorTransform || (target._iColorTransform = new ColorTransform());\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 3: //mask the mc with a list of objects\n\n\t\t\t\t\t\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\n\t\t\t\t\t\t\tvar mask:DisplayObject;\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\t\t\t\t\t\tvar numMasks:number = this.properties_stream_int[value_start_index++];\n\n\t\t\t\t\t\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t\t\t\t\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\t\t\t\t\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\t\t\t\t\t\tif((mask = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++])))\n\t\t\t\t\t\t\t\t\tmasks.push(mask);\n\n\t\t\t\t\t\t\ttarget.masks = masks;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 5:// instance name button instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 6://visible\n\t\t\t\t\t\t\tif (!target.adapter || !target.adapter.isVisibilityByScript())\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 11:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 12:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\n\t\t\t\t\t\t\t\ttarget.x = this.properties_stream_f32_mtx_pos[value_start_index++];\n\t\t\t\t\t\t\t\ttarget.y = this.properties_stream_f32_mtx_pos[value_start_index];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 200:\n\t\t\t\t\t\t\ttarget.maskMode = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 201:\n\t\t\t\t\t\t\ttarget.masks = null;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}\n\nexport = TouchPoint;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._displayObject._iColorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tthis._displayObject._iColorTransform = val;\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometrySphereBounds(this._positions, center, target, this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\ndeclare var SIMD:any;\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depth_childs:Object = {};\n\tprivate _depth_sessionIDs:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._depth_childs[depth] = child;\n\t\tthis._depth_sessionIDs[depth] = child._sessionID;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\tpublic getSessionIDAtDepth(depth:number):number\n\t{\n\t\treturn this._depth_sessionIDs[depth];\n\t}\n\n\tpublic getChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this._depth_childs[depth];\n\t}\n\n\n\tpublic getChildDepths():Object\n\t{\n\t\treturn this._depth_childs;\n\t}\n\n\tpublic getSessionIDDepths():Object\n\t{\n\t\treturn this._depth_sessionIDs;\n\t}\n\n\tpublic resetDepths()\n\t{\n\t\tthis._depth_childs = {};\n\t\tthis._depth_sessionIDs = {};\n\t}\n\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar min;\n\t\tvar max;\n\t\tvar boxMin;\n\t\tvar boxMax;\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmin = SIMD.Float32x4(box.x, box.y, box.z, 0.0);\n\t\t\t\t\tmax = SIMD.Float32x4.add(SIMD.Float32x4(box.width, box.height, box.depth, 0.0), min);\n\t\t\t\t} else {\n\t\t\t\t\tboxMin = SIMD.Float32x4(box.x, box.y, box.z, 0.0);\n\t\t\t\t\tboxMax = SIMD.Float32x4.add(SIMD.Float32x4(box.width, box.height, box.depth, 0.0), boxMin);\n\t\t\t\t\tmin = SIMD.Float32x4.minNum(boxMin, min);\n\t\t\t\t\tmax = SIMD.Float32x4.maxNum(boxMax, max);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = SIMD.Float32x4.extractLane(max, 0) - (this._pBoxBounds.x = SIMD.Float32x4.extractLane(min, 0));\n\t\t\tthis._pBoxBounds.height = SIMD.Float32x4.extractLane(max, 1) - (this._pBoxBounds.y = SIMD.Float32x4.extractLane(min, 1));\n\t\t\tthis._pBoxBounds.height = SIMD.Float32x4.extractLane(max, 2) - (this._pBoxBounds.y = SIMD.Float32x4.extractLane(min, 2));\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\t//check to make sure _depth_sessionIDs wasn't modified with a new child\n\t\tif (this._depth_sessionIDs[child._depthID] == child._sessionID) {\n\t\t\tdelete this._depth_sessionIDs[child._depthID];\n\t\t\tdelete this._depth_childs[child._depthID];\n\t\t}\n\n\t\tchild._depthID = -16384;\n\t\tchild._sessionID = -1;\n\n\t\treturn child;\n\t}\n\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._depth_childs[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this._pImplicitMaskId !== -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tvar masks:Array<DisplayObject> = this.masks;\n\n\t\tif (masks) {\n\t\t\tvar numMasks:number = masks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (masks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\n\t}\n\n\tpublic _iAddContainerNode(entityNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveContainerNode(entityNode:ContainerNode):ContainerNode\n\t{\n\t\tvar index:number = this._containerNodes.indexOf(entityNode);\n\n\t\tthis._containerNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this.numChildren;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\t(this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\n\ndeclare var SIMD:any;\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _center:Vector3D;\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():Mesh\n\t{\n\t\tvar newInstance:Mesh = new Mesh(this._geometry, this._material);\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:Mesh)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.geometry = this._geometry;\n\t\tnewInstance.material = this._material;\n\t\tnewInstance.castsShadows = this._castsShadows;\n\t\tnewInstance.shareAnimationGeometry = this._shareAnimationGeometry;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n        if (this._animator)\n\t\t\tnewInstance.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pBoxBounds = subGeoms[i].getBoxBounds(this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pSphereBounds = subGeoms[i].getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._geometry && this._geometry.subGeometries.length) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the geometry thing\n\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\t\tvar subGeometriesCount:number = subGeometries.length;\n\t\t\tfor(var i:number = 0; i < subGeometriesCount; i++)\n\t\t\t\tif (SubGeometryUtils.hitTestCurveGeometry(local.x, local.y, 0, box, <CurveSubGeometry> subGeometries[i]))\n\t\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n}\n\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\nimport TextField = require(\"awayjs-display/lib/entities/TextField\");\n\nimport MouseEvent               = require(\"awayjs-display/lib/events/MouseEvent\");\n\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline                 = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager       = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number;// the current time inside the animation\n    private _currentFrameIndex:number;// the current frame\n\n    private _isPlaying:boolean;// false if paused or stopped\n\n    // not sure if needed\n    private _enterFrame:Event;\n    private _skipAdvance : boolean;\n    private _isInit : boolean;\n\n    private _potentialInstances:Object;\n    private _sessionID_childs:Object;\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n        this._sessionID_childs = {};\n        this._potentialInstances = {};\n        this._currentFrameIndex = -1;\n        this.constructedKeyFrameIndex = -1;\n        this._isInit=true;\n        this._isPlaying = true; // auto-play\n        this._isButton=false;\n\n        this._time = 0;\n        this._enterFrame = new Event(Event.ENTER_FRAME);\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n\n    public reset_textclones()\n    {\n        if(this.timeline) {\n            for (var key in this._potentialInstances) {\n                if (this._potentialInstances[key] != null) {\n                    if (this._potentialInstances[key].isAsset(TextField)) {\n                        (<TextField>this._potentialInstances[key]).text = (<TextField>this.timeline.getPotentialChildPrototype(key)).text;\n                    }\n                    else if (this._potentialInstances[key].isAsset(MovieClip)) {\n                        (<MovieClip>this._potentialInstances[key]).reset_textclones();\n                    }\n                }\n            }\n        }\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n\n    /**\n     *\n     */\n    public loop:boolean = true;\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string)\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    /**\n     * the current index of the current active frame\n     */\n    public constructedKeyFrameIndex:number;\n\n    public exit_frame():void\n    {\n        this._skipAdvance = false;\n\n        var child:DisplayObject;\n        for (var i:number = this.numChildren - 1; i >= 0; i--) {\n            child = this._children[i];\n            if(child.isAsset(MovieClip))\n                (<MovieClip> child).exit_frame();\n        }\n    }\n    public reset():void\n    {\n        super.reset();\n\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)\n            this.adapter.freeFromScript();\n\n        this._isPlaying = true;\n\n        this._currentFrameIndex = -1;\n        this.constructedKeyFrameIndex = -1;\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n\n        this._skipAdvance = true;\n\n        if (this._timeline.numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        }\n    }\n\n    /*\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\n     */\n    public set_currentFrameIndex(value : number) {\n        this._skipAdvance = true;\n        this._currentFrameIndex = value;\n    }\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public get currentFrameIndex():number\n    {\n        return this._currentFrameIndex;\n    }\n\n    public set currentFrameIndex(value:number)\n    {\n        if (this._currentFrameIndex == value)\n            return;\n\n        if(this._timeline.numFrames) {\n            value = Math.floor(value);\n\n            var skip_script:boolean = false;\n\n            if (value < 0) {\n                value = 0;\n            } else if (value >= this._timeline.numFrames) {\n                value = this._timeline.numFrames - 1;\n                skip_script=true;\n            }\n\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\n            this._skipAdvance = true;\n            //this._time = 0;\n\n            this._timeline.gotoFrame(this, value, skip_script);\n        }\n\n        this._currentFrameIndex = value;\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public getChildAtSessionID(sessionID:number):DisplayObject\n    {\n        return this._sessionID_childs[sessionID];\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n\n        child.reset();// this takes care of transform and visibility\n\n        super.addChildAtDepth(child, depth, true);\n\n        this._sessionID_childs[child._sessionID] = child;\n\n        return child;\n    }\n\n    public removeChildAtInternal(index:number /*int*/):DisplayObject\n    {\n        delete this._sessionID_childs[this._children[index]._sessionID];\n\n        var child:DisplayObject = super.removeChildAtInternal(index);\n\n        if(child.adapter)\n            child.adapter.freeFromScript();\n\n        this.adapter.unregisterScriptObject(child);\n\n\n        return child;\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update()\n    {\n        this.advanceFrame();\n\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we execute any intervals queued\n        FrameScriptManager.execute_intervals();\n\n        // finally, we execute any scripts that were added from intervals\n        FrameScriptManager.execute_queue();\n\n        this.exit_frame();\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n\n        return this._potentialInstances[id];\n    }\n\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone():MovieClip\n    {\n        var newInstance:MovieClip = new MovieClip(this._timeline);\n\n        this.copyTo(newInstance);\n\n        return newInstance;\n    }\n\n    public copyTo(newInstance:MovieClip)\n    {\n        super.copyTo(newInstance);\n\n        newInstance.timeline = this._timeline;\n        newInstance.loop = this.loop;\n    }\n\n\n    public iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tsuper.iSetParent(value);\n\t}\n\n    public advanceFrame(skipChildren:boolean = false)\n    {\n        var numFrames:number = this._timeline.numFrames;\n        if(numFrames) {\n            if (((this._isPlaying && !this._skipAdvance) || this._currentFrameIndex == -1) && (this._currentFrameIndex != numFrames - 1 || this.loop)) {\n                this._currentFrameIndex++;\n                if (this._currentFrameIndex == numFrames) { // looping - jump to first frame.\n                    this.currentFrameIndex = 0;\n                } else { // not looping - construct next frame\n                    this._timeline.constructNextFrame(this);\n                }\n            }\n\n            if (!skipChildren)\n                this.advanceChildren();\n        }\n\n        this._skipAdvance = false;\n    }\n\n    private advanceChildren()\n    {\n        var len:number = this.numChildren;\n        var child:DisplayObject;\n        for (var i:number = 0; i <  len; ++i) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).advanceFrame();\n        }\n    }\n\n\n\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this.numChildren;\n        var child:DisplayObject;\n        for (var i:number = 0; i < len; i++) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    }\n\n\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue=value.toString();\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\t\tconsole.log(\"textcolor = \"+value);\n\t\tif(!this._iColorTransform)\n\t\t\tthis._iColorTransform = new ColorTransform();\n\n\t\tthis._iColorTransform.color = value;\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\n\t\tif(this._textFormat==null)\n\t\t\treturn;\n\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._text==\"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale);\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\n\t\tvar final_lines_width:Array<number> = [];\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\n\t\t\tfinal_lines_chars.push([]);\n\t\t\tfinal_lines_char_scale.push([]);\n\t\t\tfinal_lines_width.push(0);\n\n\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar word_width:number = 0;\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar word_chars_scale:Array<number> = [];\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\tif (this_char == null) {\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tword_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\n\t\t\t\t}\n\n\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + word_width) <= this.textWidth) {\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// word does not fit\n\t\t\t\t\t// todo respect multiline and autowrapping properties.\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\n\t\t\t\t\tfinal_lines_chars.push([]);\n\t\t\t\t\tfinal_lines_char_scale.push([]);\n\t\t\t\t\tfinal_lines_width.push(0);\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\n\t\t\t\t}\n\n\t\t\t\tif (i < (words.length - 1)) {\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + whitespace_width) <= this.textWidth) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfinal_lines_chars.push([null]);\n\t\t\t\t\t\tfinal_lines_char_scale.push([char_scale]);\n\t\t\t\t\t\tfinal_lines_width.push(whitespace_width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\n\n\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-additional_margin_x;\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=(this._textFormat.font_table.get_font_em_size() * char_scale);\n\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\t// each textfield needs its own geometry.\n\t\tnewInstance.geometry=new Geometry();\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs=[];\n\t\tthis._queued_scripts=[];\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\n{\n    public isContainerNode:boolean = true;\n\n    public _iUpdateQueueNext:IDisplayObjectNode;\n\n    private _pool:ContainerNodePool;\n    private _container : DisplayObjectContainer;\n    private _partition:PartitionBase;\n    private _childDepths:Array<number> = new Array<number>();\n    private _childMasks:Array<INode> = new Array<INode>();\n    private _numChildMasks:number = 0;\n\n    public _pEntityNode:IDisplayObjectNode;\n\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\n    {\n        super();\n\n        this._pool = pool;\n        this._container = container;\n        this._partition = partition;\n    }\n\n    public get displayObject():DisplayObject\n    {\n        return this._container;\n    }\n\n    /**\n     *\n     * @param traverser\n     */\n    public acceptTraverser(traverser:CollectorBase)\n    {\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\n        if (this.numEntities == 0)\n            return;\n\n        if (this._pEntityNode)\n            this._pEntityNode.acceptTraverser(traverser);\n\n        var i:number;\n        for (i = 0; i < this._numChildMasks; i++)\n            this._childMasks[i].acceptTraverser(traverser);\n\n        for (i = 0; i < this._pNumChildNodes; i++)\n            this._pChildNodes[i].acceptTraverser(traverser);\n    }\n\n    /**\n     *\n     * @param entity\n     * @returns {away.partition.NodeBase}\n     */\n    public findParentForNode(node:IDisplayObjectNode):INode\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer)\n            return this._pool.getItem(<DisplayObjectContainer> node.displayObject);\n\n        return this._pool.getItem(node.displayObject.parent);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iAddNode(node:IDisplayObjectNode)\n    {\n        node.parent = this;\n\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = node;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.push(node);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var depth:number = node.displayObject._depthID;\n            var len:number = this._childDepths.length;\n            var index:number = len;\n\n            while (index--)\n                if (this._childDepths[index] < depth)\n                    break;\n\n            index++;\n\n            if (index < len) {\n                this._pChildNodes.splice(index, 0, node);\n                this._childDepths.splice(index, 0, depth);\n            } else {\n                this._pChildNodes.push(node);\n                this._childDepths.push(depth);\n            }\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities += numEntities;\n        } while ((node = <EntityNode> node.parent) != null);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iRemoveNode(node:IDisplayObjectNode)\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = null;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var index:number = this._pChildNodes.indexOf(node);\n\n            this._pChildNodes.splice(index, 1);\n            this._childDepths.splice(index, 1);\n\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(false);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\n    }\n}\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static assetClass:IAssetClass = DirectionalLight;\n\n\tprivate _directionalLight:DirectionalLight;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase implements IDisplayObjectNode\n{\n\tpublic isContainerNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:DisplayObject;\n\tprivate _partition:PartitionBase;\n\tpublic _bounds:BoundingVolumeBase;\n\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper();\n\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis.numEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get displayObject():DisplayObject\n\t{\n\t\treturn this._entity;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.displayObject.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\t//this._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:LightProbe;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements INode\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:INode;\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:INode):INode\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase\n{\n\tpublic _entityNodePool:EntityNodePool;\n\tpublic _rootNode:INode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:IDisplayObjectNode;\n\n\tconstructor()\n\t{\n\t\tthis._entityNodePool = new EntityNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode.displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:INode;\n\t\tvar t:IDisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(displayObject));\n\t}\n}\n\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:PointLight;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tpublic _containerNodePool:ContainerNodePool;\n\n\tconstructor(rootContainer:DisplayObjectContainer)\n\t{\n\t\tsuper();\n\n\t\tthis._containerNodePool = new ContainerNodePool(this);\n\n\t\tthis._rootNode = this._containerNodePool.getItem(rootContainer);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._containerNodePool.disposeItem(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:Skybox;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n/**\n * @class away.pool.ContainerNodePool\n */\nclass ContainerNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _containerNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\tvar containerNode:ContainerNode = this._containerNodePool[displayObjectContainer.id];\n\n\t\tif (containerNode) {\n\t\t\tdisplayObjectContainer._iRemoveContainerNode(containerNode);\n\n\t\t\tdelete this._containerNodePool[displayObjectContainer.id];\n\t\t}\n\n\t\treturn containerNode;\n\t}\n}\n\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[displayObject.id];\n\n\t\tif (entityNode) {\n\t\t\tdisplayObject._iRemoveEntityNode(entityNode);\n\n\t\t\tdelete this._entityNodePool[displayObject.id];\n\t\t}\n\n\t\treturn entityNode;\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\n\t{\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\n\t}\n\n\tprivate static main = EntityNodePool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._offset_x=0;\n\t\tthis._offset_y=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\ndeclare var SIMD:any;\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n\n\t//TODO - generate this dyanamically based on num tris\n\n\tpublic static hitTestCurveGeometry(x:number, y:number, z:number, boundingBox:Box, curveSubGeometry:CurveSubGeometry):boolean\n\t{\n\t\tvar positionAttributes:Short3Attributes = curveSubGeometry.positions;\n\t\tvar curveAttributes:Short2Attributes = curveSubGeometry.curves;\n\t\tvar count:number = curveSubGeometry.numVertices;\n\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar curveDim:number = curveAttributes.dimensions;\n\n\t\tvar positions:Float32Array = positionAttributes.get(count);\n\t\tvar curves:Float32Array = curveAttributes.get(count);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tvar index:number = curveSubGeometry.lastCollisionIndex;\n\t\tif(index != -1 && index < count)\n\t\t{\n\t\t\tprecheck:\n\t\t\t{\n\t\t\t\tid0 = index + 2;\n\t\t\t\tid1 = index + 1;\n\t\t\t\tid2 = index + 0;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (count > 150) {\n\t\t\tvar cells:Array<Array<number>> = curveSubGeometry.cells;\n\t\t\tvar divisions:number = cells.length? curveSubGeometry.divisions : (curveSubGeometry.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\n\t\t\tvar minx:number = boundingBox.x;\n\t\t\tvar miny:number = boundingBox.y;\n\n\t\t\tif (!cells.length) { //build grid\n\t\t\t\t\n\t\t\t\t//now we have bounds start creating grid cells and filling\n\t\t\t\tcells.length = divisions * divisions;\n\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\n\t\t\t\t\tid0 = k + 2;\n\t\t\t\t\tid1 = k + 1;\n\t\t\t\t\tid2 = k + 0;\n\n\t\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t\t//subtractions to push into positive space\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\n\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\n\n\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\n\n\t\t\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\n\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tif(id2 == index) continue;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t\t\tif (d > 0 && az == -1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse if (d < 0 && az == 1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < count; k += 3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tif(id2 == index) continue;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getCurveGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar posDim2:number = posDim*2;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar p;\n\t\tvar min = SIMD.Float32x4(output.x, output.y, output.x, output.y);\n\t\tvar max = SIMD.Float32x4.add(SIMD.Float32x4(output.width, output.height, output.width, output.height), min);\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim2) { //double-up the 2d calculations\n\t\t\tp = (i + posDim == len)? SIMD.Float32x4(positions[i], positions[i+1], 0.0, 0.0) : SIMD.Float32x4(positions[i], positions[i+1], positions[i+posDim], positions[i+posDim+1]);\n\t\t\tmin = SIMD.Float32x4.minNum(p, min);\n\t\t\tmax = SIMD.Float32x4.maxNum(p, max);\n\t\t}\n\n\t\toutput.width = Math.max(SIMD.Float32x4.extractLane(max, 0),SIMD.Float32x4.extractLane(max, 2)) - (output.x = Math.min(SIMD.Float32x4.extractLane(min, 0), SIMD.Float32x4.extractLane(min, 2)));\n\t\toutput.height = Math.max(SIMD.Float32x4.extractLane(max, 1), SIMD.Float32x4.extractLane(max, 3)) - (output.y = Math.min(SIMD.Float32x4.extractLane(min, 1), SIMD.Float32x4.extractLane(min, 3)));\n\n\t\treturn output;\n\t}\n\n\n\tpublic static getTriangleGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar p;\n\t\tvar min = SIMD.Float32x4(output.x, output.y, output.z, 0.0);\n\t\tvar max = SIMD.Float32x4.add(SIMD.Float32x4(output.width, output.height, output.depth, 0.0), min);\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tp = SIMD.Float32x4(positions[i], positions[i+1], positions[i+2], 0.0);\n\t\t\tmin = SIMD.Float32x4.minNum(p, min);\n\t\t\tmax = SIMD.Float32x4.maxNum(p, max);\n\t\t}\n\n\t\toutput.width = SIMD.Float32x4.extractLane(max, 0) - (output.x = SIMD.Float32x4.extractLane(min, 0));\n\t\toutput.height = SIMD.Float32x4.extractLane(max, 1) - (output.y = SIMD.Float32x4.extractLane(min, 1));\n\t\toutput.depth = SIMD.Float32x4.extractLane(max, 2) - (output.z = SIMD.Float32x4.extractLane(min, 2));\n\n\t\treturn output;\n\t}\n\n\tpublic static getTriangleGeometrySphereBounds(positionAttributes:Float3Attributes, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Sphere();\n\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar c = SIMD.Float32x4(center.x, center.y, center.z, 0.0);\n\t\tvar d;\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\td = SIMD.Float32x4.sub(SIMD.Float32x4(positions[i], positions[i+1], positions[i+2], 0.0), c);\n\t\t\td = SIMD.Float32x4.mul(d, d);\n\t\t\tradiusSquared = SIMD.Float32x4.extractLane(d, 0)  + SIMD.Float32x4.extractLane(d, 1) + SIMD.Float32x4.extractLane(d, 2);\n\n\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t}\n\n\t\toutput.x = center.x;\n\t\toutput.y = center.y;\n\t\toutput.z = center.z;\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\n\n\t\treturn output;\n\t}\n\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}